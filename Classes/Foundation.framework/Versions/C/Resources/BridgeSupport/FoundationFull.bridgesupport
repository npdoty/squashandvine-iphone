<?xml version='1.0'?>
<signatures version='0.9'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<struct name='NSAffineTransformStruct' type='{_NSAffineTransformStruct=&quot;m11&quot;f&quot;m12&quot;f&quot;m21&quot;f&quot;m22&quot;f&quot;tX&quot;f&quot;tY&quot;f}' type64='{_NSAffineTransformStruct=&quot;m11&quot;d&quot;m12&quot;d&quot;m21&quot;d&quot;m22&quot;d&quot;tX&quot;d&quot;tY&quot;d}'>
<field name='m11'/>
<field name='m12'/>
<field name='m21'/>
<field name='m22'/>
<field name='tX'/>
<field name='tY'/>
</struct>
<struct name='NSDecimal' opaque='true' type='{_NSDecimal=&quot;_exponent&quot;b8&quot;_length&quot;b4&quot;_isNegative&quot;b1&quot;_isCompact&quot;b1&quot;_reserved&quot;b18&quot;_mantissa&quot;[8S]}'>
<field name='_exponent'/>
<field name='_length'/>
<field name='_isNegative'/>
<field name='_isCompact'/>
<field name='_reserved'/>
<field name='_mantissa'/>
</struct>
<struct name='NSFastEnumerationState' type='{_NSFastEnumerationState=&quot;state&quot;L&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^L&quot;extra&quot;[5L]}' type64='{_NSFastEnumerationState=&quot;state&quot;Q&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^Q&quot;extra&quot;[5Q]}'>
<field name='state'/>
<field name='itemsPtr'/>
<field name='mutationsPtr'/>
<field name='extra'/>
</struct>
<struct name='NSHashEnumerator' type='{_NSHashEnumerator=&quot;_pi&quot;I&quot;_si&quot;I&quot;_bs&quot;^v}' type64='{_NSHashEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}'>
<field name='_pi'/>
<field name='_si'/>
<field name='_bs'/>
</struct>
<struct name='NSHashTableCallBacks' type='{_NSHashTableCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}'>
<field name='hash'/>
<field name='isEqual'/>
<field name='retain'/>
<field name='release'/>
<field name='describe'/>
</struct>
<struct name='NSMapEnumerator' type='{_NSMapEnumerator=&quot;_pi&quot;I&quot;_si&quot;I&quot;_bs&quot;^v}' type64='{_NSMapEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}'>
<field name='_pi'/>
<field name='_si'/>
<field name='_bs'/>
</struct>
<struct name='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?&quot;notAKeyMarker&quot;^v}'>
<field name='hash'/>
<field name='isEqual'/>
<field name='retain'/>
<field name='release'/>
<field name='describe'/>
<field name='notAKeyMarker'/>
</struct>
<struct name='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}'>
<field name='retain'/>
<field name='release'/>
<field name='describe'/>
</struct>
<struct name='NSPoint' type='{_NSPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'>
<field name='x'/>
<field name='y'/>
</struct>
<struct name='NSRange' type='{_NSRange=&quot;location&quot;I&quot;length&quot;I}' type64='{_NSRange=&quot;location&quot;Q&quot;length&quot;Q}'>
<field name='location'/>
<field name='length'/>
</struct>
<struct name='NSRect' type='{_NSRect=&quot;origin&quot;{_NSPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{_NSSize=&quot;width&quot;f&quot;height&quot;f}}' type64='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}'>
<field name='origin'/>
<field name='size'/>
</struct>
<struct name='NSSize' type='{_NSSize=&quot;width&quot;f&quot;height&quot;f}' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}'>
<field name='width'/>
<field name='height'/>
</struct>
<struct name='NSSwappedDouble' type='{_NSSwappedDouble=&quot;v&quot;Q}'>
<field name='v'/>
</struct>
<struct name='NSSwappedFloat' type='{_NSSwappedFloat=&quot;v&quot;I}'>
<field name='v'/>
</struct>
<opaque name='NSZone' type='^{_NSZone=}'/>
<constant name='NSAMPMDesignation' declared_type='NSString*' type='@' const='true'/>
<constant name='NSAppleEventManagerWillProcessFirstEventNotification' declared_type='NSString*' type='@'/>
<constant name='NSAppleEventTimeOutDefault' declared_type='double' type='d' const='true'/>
<constant name='NSAppleEventTimeOutNone' declared_type='double' type='d' const='true'/>
<constant name='NSAppleScriptErrorAppName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSAppleScriptErrorBriefMessage' declared_type='NSString*' type='@' const='true'/>
<constant name='NSAppleScriptErrorMessage' declared_type='NSString*' type='@' const='true'/>
<constant name='NSAppleScriptErrorNumber' declared_type='NSString*' type='@' const='true'/>
<constant name='NSAppleScriptErrorRange' declared_type='NSString*' type='@' const='true'/>
<constant name='NSArgumentDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSAverageKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSBuddhistCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSBundleDidLoadNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSCharacterConversionException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSChineseCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSClassDescriptionNeededForClassNotification' declared_type='NSString*' type='@'/>
<constant name='NSCocoaErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSConnectionDidDieNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSConnectionDidInitializeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSConnectionReplyMode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSCountKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSCurrencySymbol' declared_type='NSString*' type='@' const='true'/>
<constant name='NSCurrentLocaleDidChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDateFormatString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDateTimeOrdering' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDeallocateZombies' declared_type='BOOL' type='B'/>
<constant name='NSDebugEnabled' declared_type='BOOL' type='B'/>
<constant name='NSDecimalDigits' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDecimalNumberDivideByZeroException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDecimalNumberExactnessException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDecimalNumberOverflowException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDecimalNumberUnderflowException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDecimalSeparator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDefaultRunLoopMode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDestinationInvalidException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDidBecomeSingleThreadedNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDistinctUnionOfArraysKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDistinctUnionOfObjectsKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSDistinctUnionOfSetsKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSEarlierTimeDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSErrorFailingURLStringKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFTPPropertyActiveTransferModeKey' declared_type='NSString*' type='@'/>
<constant name='NSFTPPropertyFTPProxy' declared_type='NSString*' type='@'/>
<constant name='NSFTPPropertyFileOffsetKey' declared_type='NSString*' type='@'/>
<constant name='NSFTPPropertyUserLoginKey' declared_type='NSString*' type='@'/>
<constant name='NSFTPPropertyUserPasswordKey' declared_type='NSString*' type='@'/>
<constant name='NSFailedAuthenticationException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileAppendOnly' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileBusy' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileCreationDate' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileDeviceIdentifier' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileExtensionHidden' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileGroupOwnerAccountID' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileGroupOwnerAccountName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHFSCreatorCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHFSTypeCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleConnectionAcceptedNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleDataAvailableNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleNotificationDataItem' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleNotificationFileHandleItem' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleNotificationMonitorModes' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleOperationException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleReadCompletionNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileHandleReadToEndOfFileCompletionNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileImmutable' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileModificationDate' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileOwnerAccountID' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileOwnerAccountName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFilePathErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFilePosixPermissions' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileReferenceCount' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileSize' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileSystemFileNumber' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileSystemFreeNodes' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileSystemFreeSize' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileSystemNodes' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileSystemNumber' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileSystemSize' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileType' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileTypeBlockSpecial' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileTypeCharacterSpecial' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileTypeDirectory' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileTypeRegular' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileTypeSocket' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileTypeSymbolicLink' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFileTypeUnknown' declared_type='NSString*' type='@' const='true'/>
<constant name='NSFoundationVersionNumber' declared_type='double' type='d'/>
<constant name='NSGenericException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSGlobalDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSGrammarCorrections' declared_type='NSString*' type='@' const='true'/>
<constant name='NSGrammarRange' declared_type='NSString*' type='@' const='true'/>
<constant name='NSGrammarUserDescription' declared_type='NSString*' type='@' const='true'/>
<constant name='NSGregorianCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieComment' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieCommentURL' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieDiscard' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieExpires' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieManagerAcceptPolicyChangedNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieManagerCookiesChangedNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieMaximumAge' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieOriginURL' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookiePath' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookiePort' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieSecure' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieValue' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPCookieVersion' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHTTPPropertyErrorPageDataKey' declared_type='NSString*' type='@'/>
<constant name='NSHTTPPropertyHTTPProxy' declared_type='NSString*' type='@'/>
<constant name='NSHTTPPropertyRedirectionHeadersKey' declared_type='NSString*' type='@'/>
<constant name='NSHTTPPropertyServerHTTPVersionKey' declared_type='NSString*' type='@'/>
<constant name='NSHTTPPropertyStatusCodeKey' declared_type='NSString*' type='@'/>
<constant name='NSHTTPPropertyStatusReasonKey' declared_type='NSString*' type='@'/>
<constant name='NSHangOnUncaughtException' declared_type='BOOL' type='B'/>
<constant name='NSHebrewCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSHourNameDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInconsistentArchiveException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSIntHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSIntMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true'/>
<constant name='NSIntMapValueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' const='true'/>
<constant name='NSIntegerHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSIntegerMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true'/>
<constant name='NSIntegerMapValueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' const='true'/>
<constant name='NSInternalInconsistencyException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInternationalCurrencyString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInvalidArchiveOperationException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInvalidArgumentException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInvalidReceivePortException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInvalidSendPortException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInvalidUnarchiveOperationException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInvocationOperationCancelledException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSInvocationOperationVoidResultException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSIsNilTransformerName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSIsNotNilTransformerName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSIslamicCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSIslamicCivilCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSJapaneseCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSKeepAllocationStatistics' declared_type='BOOL' type='B'/>
<constant name='NSKeyValueChangeIndexesKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSKeyValueChangeKindKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSKeyValueChangeNewKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSKeyValueChangeNotificationIsPriorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSKeyValueChangeOldKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSKeyedUnarchiveFromDataTransformerName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLaterTimeDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLoadedClasses' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocalNotificationCenterType' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleCalendar' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleCollationIdentifier' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleCountryCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleCurrencyCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleCurrencySymbol' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleDecimalSeparator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleExemplarCharacterSet' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleGroupingSeparator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleIdentifier' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleLanguageCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleMeasurementSystem' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleScriptCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleUsesMetricSystem' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocaleVariantCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocalizedDescriptionKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocalizedFailureReasonErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocalizedRecoveryOptionsErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSLocalizedRecoverySuggestionErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMachErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMallocException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMaximumKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryDidFinishGatheringNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryDidStartGatheringNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryDidUpdateNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryGatheringProgressNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryLocalComputerScope' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryNetworkScope' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryResultContentRelevanceAttribute' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMetadataQueryUserHomeScope' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMinimumKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSMonthNameArray' declared_type='NSString*' type='@' const='true'/>
<constant name='NSNegateBooleanTransformerName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSNegativeCurrencyFormatString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSNetServicesErrorCode' declared_type='NSString*' type='@' const='true'/>
<constant name='NSNetServicesErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSNextDayDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSNextNextDayDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSNonOwnedPointerHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSNonOwnedPointerMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true'/>
<constant name='NSNonOwnedPointerMapValueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' const='true'/>
<constant name='NSNonOwnedPointerOrNullMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true'/>
<constant name='NSNonRetainedObjectHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSNonRetainedObjectMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true'/>
<constant name='NSNonRetainedObjectMapValueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' const='true'/>
<constant name='NSOSStatusErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSObjectHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSObjectInaccessibleException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSObjectMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true'/>
<constant name='NSObjectMapValueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' const='true'/>
<constant name='NSObjectNotAvailableException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSOldStyleException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSOperationNotSupportedForKeyException' declared_type='NSString*' type='@'/>
<constant name='NSOwnedObjectIdentityHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSOwnedPointerHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSOwnedPointerMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true'/>
<constant name='NSOwnedPointerMapValueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' const='true'/>
<constant name='NSPOSIXErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSParseErrorException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSPointerToStructHashCallBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true'/>
<constant name='NSPortDidBecomeInvalidNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSPortReceiveException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSPortSendException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSPortTimeoutException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSPositiveCurrencyFormatString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSPriorDayDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSRangeException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSRecoveryAttempterErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSRegistrationDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSRunLoopCommonModes' declared_type='NSString*' type='@' const='true'/>
<constant name='NSShortDateFormatString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSShortMonthNameArray' declared_type='NSString*' type='@' const='true'/>
<constant name='NSShortTimeDateFormatString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSShortWeekDayNameArray' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamDataWrittenToMemoryStreamKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamFileCurrentOffsetKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyConfigurationKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyHostKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyPasswordKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyPortKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyUserKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyVersion4' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyVersion5' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSOCKSProxyVersionKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSocketSSLErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSocketSecurityLevelKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSocketSecurityLevelNegotiatedSSL' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSocketSecurityLevelNone' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSocketSecurityLevelSSLv2' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSocketSecurityLevelSSLv3' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStreamSocketSecurityLevelTLSv1' declared_type='NSString*' type='@' const='true'/>
<constant name='NSStringEncodingErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSSumKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSSystemTimeZoneDidChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSTaskDidTerminateNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSThisDayDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSThousandsSeparator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSThreadWillExitNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSTimeDateFormatString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSTimeFormatString' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLAuthenticationMethodDefault' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLAuthenticationMethodHTMLForm' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLAuthenticationMethodHTTPBasic' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLAuthenticationMethodHTTPDigest' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLCredentialStorageChangedNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLFileScheme' declared_type='NSString*' type='@'/>
<constant name='NSURLProtectionSpaceFTPProxy' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLProtectionSpaceHTTPProxy' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLProtectionSpaceHTTPSProxy' declared_type='NSString*' type='@' const='true'/>
<constant name='NSURLProtectionSpaceSOCKSProxy' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUnarchiveFromDataTransformerName' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndefinedKeyException' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUnderlyingErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndoManagerCheckpointNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndoManagerDidOpenUndoGroupNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndoManagerDidRedoChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndoManagerDidUndoChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndoManagerWillCloseUndoGroupNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndoManagerWillRedoChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUndoManagerWillUndoChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUnionOfArraysKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUnionOfObjectsKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUnionOfSetsKeyValueOperator' declared_type='NSString*' type='@' const='true'/>
<constant name='NSUserDefaultsDidChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSWeekDayNameArray' declared_type='NSString*' type='@' const='true'/>
<constant name='NSWillBecomeMultiThreadedNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='NSXMLParserErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='NSYearMonthWeekDesignations' declared_type='NSString*' type='@' const='true'/>
<constant name='NSZeroPoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}' const='true'/>
<constant name='NSZeroRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' const='true'/>
<constant name='NSZeroSize' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}' const='true'/>
<constant name='NSZombieEnabled' declared_type='BOOL' type='B'/>
<enum name='NSASCIIStringEncoding' value='1'/>
<enum name='NSAdminApplicationDirectory' value='4'/>
<enum name='NSAggregateExpressionType' value='14'/>
<enum name='NSAllApplicationsDirectory' value='100'/>
<enum name='NSAllDomainsMask' value='65535'/>
<enum name='NSAllLibrariesDirectory' value='101'/>
<enum name='NSAllPredicateModifier' value='1'/>
<enum name='NSAnchoredSearch' value='8'/>
<enum name='NSAndPredicateType' value='1'/>
<enum name='NSAnyPredicateModifier' value='2'/>
<enum name='NSApplicationDirectory' value='1'/>
<enum name='NSApplicationSupportDirectory' value='14'/>
<enum name='NSArgumentEvaluationScriptError' value='3'/>
<enum name='NSArgumentsWrongScriptError' value='6'/>
<enum name='NSAtomicWrite' value='1'/>
<enum name='NSBackwardsSearch' value='4'/>
<enum name='NSBeginsWithComparison' value='5'/>
<enum name='NSBeginsWithPredicateOperatorType' value='8'/>
<enum name='NSBetweenPredicateOperatorType' value='100'/>
<enum name='NSBundleExecutableArchitectureI386' value='7'/>
<enum name='NSBundleExecutableArchitecturePPC' value='18'/>
<enum name='NSBundleExecutableArchitecturePPC64' value='16777234'/>
<enum name='NSBundleExecutableArchitectureX86_64' value='16777223'/>
<enum name='NSCachesDirectory' value='13'/>
<enum name='NSCalculationDivideByZero' value='4'/>
<enum name='NSCalculationLossOfPrecision' value='1'/>
<enum name='NSCalculationNoError' value='0'/>
<enum name='NSCalculationOverflow' value='3'/>
<enum name='NSCalculationUnderflow' value='2'/>
<enum name='NSCannotCreateScriptCommandError' value='10'/>
<enum name='NSCaseInsensitivePredicateOption' value='1'/>
<enum name='NSCaseInsensitiveSearch' value='1'/>
<enum name='NSCollectorDisabledOption' value='2'/>
<enum name='NSConstantValueExpressionType' value='0'/>
<enum name='NSContainerSpecifierError' value='2'/>
<enum name='NSContainsComparison' value='7'/>
<enum name='NSContainsPredicateOperatorType' value='99'/>
<enum name='NSCoreServiceDirectory' value='10'/>
<enum name='NSCustomSelectorPredicateOperatorType' value='11'/>
<enum name='NSDateFormatterBehavior10_0' value='1000'/>
<enum name='NSDateFormatterBehavior10_4' value='1040'/>
<enum name='NSDateFormatterBehaviorDefault' value='0'/>
<enum name='NSDateFormatterFullStyle' value='4'/>
<enum name='NSDateFormatterLongStyle' value='3'/>
<enum name='NSDateFormatterMediumStyle' value='2'/>
<enum name='NSDateFormatterNoStyle' value='0'/>
<enum name='NSDateFormatterShortStyle' value='1'/>
<enum name='NSDayCalendarUnit' value='16'/>
<enum name='NSDecimalMaxSize' value='8'/>
<enum name='NSDecimalNoScale' value='32767'/>
<enum name='NSDemoApplicationDirectory' value='2'/>
<enum name='NSDesktopDirectory' value='12'/>
<enum name='NSDeveloperApplicationDirectory' value='3'/>
<enum name='NSDeveloperDirectory' value='6'/>
<enum name='NSDiacriticInsensitivePredicateOption' value='2'/>
<enum name='NSDiacriticInsensitiveSearch' value='128'/>
<enum name='NSDirectPredicateModifier' value='0'/>
<enum name='NSDocumentDirectory' value='9'/>
<enum name='NSDocumentationDirectory' value='8'/>
<enum name='NSDownloadsDirectory' value='15'/>
<enum name='NSEndsWithComparison' value='6'/>
<enum name='NSEndsWithPredicateOperatorType' value='9'/>
<enum name='NSEqualToComparison' value='0'/>
<enum name='NSEqualToPredicateOperatorType' value='4'/>
<enum name='NSEraCalendarUnit' value='2'/>
<enum name='NSEvaluatedObjectExpressionType' value='1'/>
<enum name='NSEverySubelement' value='1'/>
<enum name='NSExecutableArchitectureMismatchError' value='3585'/>
<enum name='NSExecutableErrorMaximum' value='3839'/>
<enum name='NSExecutableErrorMinimum' value='3584'/>
<enum name='NSExecutableLinkError' value='3588'/>
<enum name='NSExecutableLoadError' value='3587'/>
<enum name='NSExecutableNotLoadableError' value='3584'/>
<enum name='NSExecutableRuntimeMismatchError' value='3586'/>
<enum name='NSFileErrorMaximum' value='1023'/>
<enum name='NSFileErrorMinimum' value='0'/>
<enum name='NSFileLockingError' value='255'/>
<enum name='NSFileNoSuchFileError' value='4'/>
<enum name='NSFileReadCorruptFileError' value='259'/>
<enum name='NSFileReadInapplicableStringEncodingError' value='261'/>
<enum name='NSFileReadInvalidFileNameError' value='258'/>
<enum name='NSFileReadNoPermissionError' value='257'/>
<enum name='NSFileReadNoSuchFileError' value='260'/>
<enum name='NSFileReadTooLargeError' value='263'/>
<enum name='NSFileReadUnknownError' value='256'/>
<enum name='NSFileReadUnknownStringEncodingError' value='264'/>
<enum name='NSFileReadUnsupportedSchemeError' value='262'/>
<enum name='NSFileWriteInapplicableStringEncodingError' value='517'/>
<enum name='NSFileWriteInvalidFileNameError' value='514'/>
<enum name='NSFileWriteNoPermissionError' value='513'/>
<enum name='NSFileWriteOutOfSpaceError' value='640'/>
<enum name='NSFileWriteUnknownError' value='512'/>
<enum name='NSFileWriteUnsupportedSchemeError' value='518'/>
<enum name='NSForcedOrderingSearch' value='512'/>
<enum name='NSFormattingError' value='2048'/>
<enum name='NSFormattingErrorMaximum' value='2559'/>
<enum name='NSFormattingErrorMinimum' value='2048'/>
<enum name='NSFoundationVersionNumber10_0' value='397.39999999999998'/>
<enum name='NSFoundationVersionNumber10_1' value='425.00000000000000'/>
<enum name='NSFoundationVersionNumber10_1_1' value='425.00000000000000'/>
<enum name='NSFoundationVersionNumber10_1_2' value='425.00000000000000'/>
<enum name='NSFoundationVersionNumber10_1_3' value='425.00000000000000'/>
<enum name='NSFoundationVersionNumber10_1_4' value='425.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2' value='462.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2_1' value='462.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2_2' value='462.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2_3' value='462.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2_4' value='462.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2_5' value='462.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2_6' value='462.00000000000000'/>
<enum name='NSFoundationVersionNumber10_2_7' value='462.69999999999999'/>
<enum name='NSFoundationVersionNumber10_2_8' value='462.69999999999999'/>
<enum name='NSFoundationVersionNumber10_3' value='500.00000000000000'/>
<enum name='NSFoundationVersionNumber10_3_1' value='500.00000000000000'/>
<enum name='NSFoundationVersionNumber10_3_2' value='500.30000000000001'/>
<enum name='NSFoundationVersionNumber10_3_3' value='500.54000000000002'/>
<enum name='NSFoundationVersionNumber10_3_4' value='500.56000000000000'/>
<enum name='NSFoundationVersionNumber10_3_5' value='500.56000000000000'/>
<enum name='NSFoundationVersionNumber10_3_6' value='500.56000000000000'/>
<enum name='NSFoundationVersionNumber10_3_7' value='500.56000000000000'/>
<enum name='NSFoundationVersionNumber10_3_8' value='500.56000000000000'/>
<enum name='NSFoundationVersionNumber10_3_9' value='500.57999999999998'/>
<enum name='NSFoundationVersionNumber10_4' value='567.00000000000000'/>
<enum name='NSFoundationVersionNumber10_4_1' value='567.00000000000000'/>
<enum name='NSFoundationVersionNumber10_4_10' value='567.28999999999996'/>
<enum name='NSFoundationVersionNumber10_4_11' value='567.36000000000001'/>
<enum name='NSFoundationVersionNumber10_4_2' value='567.12000000000000'/>
<enum name='NSFoundationVersionNumber10_4_3' value='567.21000000000004'/>
<enum name='NSFoundationVersionNumber10_4_4_Intel' value='567.23000000000002'/>
<enum name='NSFoundationVersionNumber10_4_4_PowerPC' value='567.21000000000004'/>
<enum name='NSFoundationVersionNumber10_4_5' value='567.25000000000000'/>
<enum name='NSFoundationVersionNumber10_4_6' value='567.25999999999999'/>
<enum name='NSFoundationVersionNumber10_4_7' value='567.26999999999998'/>
<enum name='NSFoundationVersionNumber10_4_8' value='567.27999999999997'/>
<enum name='NSFoundationVersionNumber10_4_9' value='567.28999999999996'/>
<enum name='NSFoundationVersionNumber10_5' value='677.00000000000000'/>
<enum name='NSFoundationVersionNumber10_5_1' value='677.10000000000002'/>
<enum name='NSFoundationVersionNumber10_5_2' value='677.14999999999998'/>
<enum name='NSFoundationVersionNumber10_5_3' value='677.19000000000005'/>
<enum name='NSFoundationVersionNumber10_5_4' value='677.19000000000005'/>
<enum name='NSFoundationVersionWithFileManagerResourceForkSupport' value='412'/>
<enum name='NSFunctionExpressionType' value='4'/>
<enum name='NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES' value64='1'/>
<enum name='NSGreaterThanComparison' value='4'/>
<enum name='NSGreaterThanOrEqualToComparison' value='3'/>
<enum name='NSGreaterThanOrEqualToPredicateOperatorType' value='3'/>
<enum name='NSGreaterThanPredicateOperatorType' value='2'/>
<enum name='NSHPUXOperatingSystem' value='4'/>
<enum name='NSHTTPCookieAcceptPolicyAlways' value='0'/>
<enum name='NSHTTPCookieAcceptPolicyNever' value='1'/>
<enum name='NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain' value='2'/>
<enum name='NSHashTableCopyIn' value='65536'/>
<enum name='NSHashTableObjectPointerPersonality' value='512'/>
<enum name='NSHashTableStrongMemory' value='0'/>
<enum name='NSHashTableZeroingWeakMemory' value='1'/>
<enum name='NSHourCalendarUnit' value='32'/>
<enum name='NSINTEGER_DEFINED' value='1'/>
<enum name='NSISO2022JPStringEncoding' value='21'/>
<enum name='NSISOLatin1StringEncoding' value='5'/>
<enum name='NSISOLatin2StringEncoding' value='9'/>
<enum name='NSInPredicateOperatorType' value='10'/>
<enum name='NSIndexSubelement' value='0'/>
<enum name='NSIntegerMax' value64='9223372036854775807' value='2147483647'/>
<enum name='NSIntegerMin' value64='-9223372036854775808' value='-2147483648'/>
<enum name='NSInternalScriptError' value='8'/>
<enum name='NSInternalSpecifierError' value='5'/>
<enum name='NSIntersectSetExpressionType' value='6'/>
<enum name='NSInvalidIndexSpecifierError' value='4'/>
<enum name='NSJapaneseEUCStringEncoding' value='3'/>
<enum name='NSKeyPathExpressionType' value='3'/>
<enum name='NSKeySpecifierEvaluationScriptError' value='2'/>
<enum name='NSKeyValueChangeInsertion' value='2'/>
<enum name='NSKeyValueChangeRemoval' value='3'/>
<enum name='NSKeyValueChangeReplacement' value='4'/>
<enum name='NSKeyValueChangeSetting' value='1'/>
<enum name='NSKeyValueIntersectSetMutation' value='3'/>
<enum name='NSKeyValueMinusSetMutation' value='2'/>
<enum name='NSKeyValueObservingOptionInitial' value='4'/>
<enum name='NSKeyValueObservingOptionNew' value='1'/>
<enum name='NSKeyValueObservingOptionOld' value='2'/>
<enum name='NSKeyValueObservingOptionPrior' value='8'/>
<enum name='NSKeyValueSetSetMutation' value='4'/>
<enum name='NSKeyValueUnionSetMutation' value='1'/>
<enum name='NSKeyValueValidationError' value='1024'/>
<enum name='NSLessThanComparison' value='2'/>
<enum name='NSLessThanOrEqualToComparison' value='1'/>
<enum name='NSLessThanOrEqualToPredicateOperatorType' value='1'/>
<enum name='NSLessThanPredicateOperatorType' value='0'/>
<enum name='NSLibraryDirectory' value='5'/>
<enum name='NSLikePredicateOperatorType' value='7'/>
<enum name='NSLiteralSearch' value='2'/>
<enum name='NSLocalDomainMask' value='2'/>
<enum name='NSMACHOperatingSystem' value='5'/>
<enum name='NSMacOSRomanStringEncoding' value='30'/>
<enum name='NSMachPortDeallocateNone' value='0'/>
<enum name='NSMachPortDeallocateReceiveRight' value='2'/>
<enum name='NSMachPortDeallocateSendRight' value='1'/>
<enum name='NSMapTableCopyIn' value='65536'/>
<enum name='NSMapTableObjectPointerPersonality' value='512'/>
<enum name='NSMapTableStrongMemory' value='0'/>
<enum name='NSMapTableZeroingWeakMemory' value='1'/>
<enum name='NSMappedRead' value='1'/>
<enum name='NSMatchesPredicateOperatorType' value='6'/>
<enum name='NSMaxXEdge' value='2'/>
<enum name='NSMaxYEdge' value='3'/>
<enum name='NSMiddleSubelement' value='2'/>
<enum name='NSMinXEdge' value='0'/>
<enum name='NSMinYEdge' value='1'/>
<enum name='NSMinusSetExpressionType' value='7'/>
<enum name='NSMinuteCalendarUnit' value='64'/>
<enum name='NSMonthCalendarUnit' value='8'/>
<enum name='NSNEXTSTEPStringEncoding' value='2'/>
<enum name='NSNetServiceNoAutoRename' value='1'/>
<enum name='NSNetServicesActivityInProgress' value='-72003'/>
<enum name='NSNetServicesBadArgumentError' value='-72004'/>
<enum name='NSNetServicesCancelledError' value='-72005'/>
<enum name='NSNetServicesCollisionError' value='-72001'/>
<enum name='NSNetServicesInvalidError' value='-72006'/>
<enum name='NSNetServicesNotFoundError' value='-72002'/>
<enum name='NSNetServicesTimeoutError' value='-72007'/>
<enum name='NSNetServicesUnknownError' value='-72000'/>
<enum name='NSNetworkDomainMask' value='4'/>
<enum name='NSNoScriptError' value='0'/>
<enum name='NSNoSpecifierError' value='0'/>
<enum name='NSNoSubelement' value='4'/>
<enum name='NSNoTopLevelContainersSpecifierError' value='1'/>
<enum name='NSNonLossyASCIIStringEncoding' value='7'/>
<enum name='NSNotEqualToPredicateOperatorType' value='5'/>
<enum name='NSNotFound' value64='-1' value='2147483647'/>
<enum name='NSNotPredicateType' value='0'/>
<enum name='NSNotificationCoalescingOnName' value='1'/>
<enum name='NSNotificationCoalescingOnSender' value='2'/>
<enum name='NSNotificationDeliverImmediately' value='1'/>
<enum name='NSNotificationNoCoalescing' value='0'/>
<enum name='NSNotificationPostToAllSessions' value='2'/>
<enum name='NSNotificationSuspensionBehaviorCoalesce' value='2'/>
<enum name='NSNotificationSuspensionBehaviorDeliverImmediately' value='4'/>
<enum name='NSNotificationSuspensionBehaviorDrop' value='1'/>
<enum name='NSNotificationSuspensionBehaviorHold' value='3'/>
<enum name='NSNumberFormatterBehavior10_0' value='1000'/>
<enum name='NSNumberFormatterBehavior10_4' value='1040'/>
<enum name='NSNumberFormatterBehaviorDefault' value='0'/>
<enum name='NSNumberFormatterCurrencyStyle' value='2'/>
<enum name='NSNumberFormatterDecimalStyle' value='1'/>
<enum name='NSNumberFormatterNoStyle' value='0'/>
<enum name='NSNumberFormatterPadAfterPrefix' value='1'/>
<enum name='NSNumberFormatterPadAfterSuffix' value='3'/>
<enum name='NSNumberFormatterPadBeforePrefix' value='0'/>
<enum name='NSNumberFormatterPadBeforeSuffix' value='2'/>
<enum name='NSNumberFormatterPercentStyle' value='3'/>
<enum name='NSNumberFormatterRoundCeiling' value='0'/>
<enum name='NSNumberFormatterRoundDown' value='2'/>
<enum name='NSNumberFormatterRoundFloor' value='1'/>
<enum name='NSNumberFormatterRoundHalfDown' value='5'/>
<enum name='NSNumberFormatterRoundHalfEven' value='4'/>
<enum name='NSNumberFormatterRoundHalfUp' value='6'/>
<enum name='NSNumberFormatterRoundUp' value='3'/>
<enum name='NSNumberFormatterScientificStyle' value='4'/>
<enum name='NSNumberFormatterSpellOutStyle' value='5'/>
<enum name='NSNumericSearch' value='64'/>
<enum name='NSOSF1OperatingSystem' value='7'/>
<enum name='NSObjCArrayType' value='91'/>
<enum name='NSObjCBitfield' value='98'/>
<enum name='NSObjCBoolType' value='66'/>
<enum name='NSObjCCharType' value='99'/>
<enum name='NSObjCDoubleType' value='100'/>
<enum name='NSObjCFloatType' value='102'/>
<enum name='NSObjCLongType' value='108'/>
<enum name='NSObjCLonglongType' value='113'/>
<enum name='NSObjCNoType' value='0'/>
<enum name='NSObjCObjectType' value='64'/>
<enum name='NSObjCPointerType' value='94'/>
<enum name='NSObjCSelectorType' value='58'/>
<enum name='NSObjCShortType' value='115'/>
<enum name='NSObjCStringType' value='42'/>
<enum name='NSObjCStructType' value='123'/>
<enum name='NSObjCUnionType' value='40'/>
<enum name='NSObjCVoidType' value='118'/>
<enum name='NSObjectAutoreleasedEvent' value='3'/>
<enum name='NSObjectExtraRefDecrementedEvent' value='5'/>
<enum name='NSObjectExtraRefIncrementedEvent' value='4'/>
<enum name='NSObjectInternalRefDecrementedEvent' value='7'/>
<enum name='NSObjectInternalRefIncrementedEvent' value='6'/>
<enum name='NSOpenStepUnicodeReservedBase' value='62464'/>
<enum name='NSOperationNotSupportedForKeyScriptError' value='9'/>
<enum name='NSOperationNotSupportedForKeySpecifierError' value='6'/>
<enum name='NSOperationQueueDefaultMaxConcurrentOperationCount' value='-1'/>
<enum name='NSOperationQueuePriorityHigh' value='4'/>
<enum name='NSOperationQueuePriorityLow' value='-4'/>
<enum name='NSOperationQueuePriorityNormal' value='0'/>
<enum name='NSOperationQueuePriorityVeryHigh' value='8'/>
<enum name='NSOperationQueuePriorityVeryLow' value='-8'/>
<enum name='NSOrPredicateType' value='2'/>
<enum name='NSOrderedAscending' value='-1'/>
<enum name='NSOrderedDescending' value='1'/>
<enum name='NSOrderedSame' value='0'/>
<enum name='NSPointerFunctionsCStringPersonality' value='768'/>
<enum name='NSPointerFunctionsCopyIn' value='65536'/>
<enum name='NSPointerFunctionsIntegerPersonality' value='1280'/>
<enum name='NSPointerFunctionsMachVirtualMemory' value='4'/>
<enum name='NSPointerFunctionsMallocMemory' value='3'/>
<enum name='NSPointerFunctionsObjectPersonality' value='0'/>
<enum name='NSPointerFunctionsObjectPointerPersonality' value='512'/>
<enum name='NSPointerFunctionsOpaqueMemory' value='2'/>
<enum name='NSPointerFunctionsOpaquePersonality' value='256'/>
<enum name='NSPointerFunctionsStrongMemory' value='0'/>
<enum name='NSPointerFunctionsStructPersonality' value='1024'/>
<enum name='NSPointerFunctionsZeroingWeakMemory' value='1'/>
<enum name='NSPositionAfter' value='0'/>
<enum name='NSPositionBefore' value='1'/>
<enum name='NSPositionBeginning' value='2'/>
<enum name='NSPositionEnd' value='3'/>
<enum name='NSPositionReplace' value='4'/>
<enum name='NSPostASAP' value='2'/>
<enum name='NSPostNow' value='3'/>
<enum name='NSPostWhenIdle' value='1'/>
<enum name='NSPropertyListBinaryFormat_v1_0' value='200'/>
<enum name='NSPropertyListImmutable' value='0'/>
<enum name='NSPropertyListMutableContainers' value='1'/>
<enum name='NSPropertyListMutableContainersAndLeaves' value='2'/>
<enum name='NSPropertyListOpenStepFormat' value='1'/>
<enum name='NSPropertyListXMLFormat_v1_0' value='100'/>
<enum name='NSRandomSubelement' value='3'/>
<enum name='NSReceiverEvaluationScriptError' value='1'/>
<enum name='NSReceiversCantHandleCommandScriptError' value='4'/>
<enum name='NSRelativeAfter' value='0'/>
<enum name='NSRelativeBefore' value='1'/>
<enum name='NSRequiredArgumentsMissingScriptError' value='5'/>
<enum name='NSRoundBankers' value='3'/>
<enum name='NSRoundDown' value='1'/>
<enum name='NSRoundPlain' value='0'/>
<enum name='NSRoundUp' value='2'/>
<enum name='NSSaveOptionsAsk' value='2'/>
<enum name='NSSaveOptionsNo' value='1'/>
<enum name='NSSaveOptionsYes' value='0'/>
<enum name='NSScannedOption' value='1'/>
<enum name='NSSecondCalendarUnit' value='128'/>
<enum name='NSShiftJISStringEncoding' value='8'/>
<enum name='NSSolarisOperatingSystem' value='3'/>
<enum name='NSStreamEventEndEncountered' value='16'/>
<enum name='NSStreamEventErrorOccurred' value='8'/>
<enum name='NSStreamEventHasBytesAvailable' value='2'/>
<enum name='NSStreamEventHasSpaceAvailable' value='4'/>
<enum name='NSStreamEventNone' value='0'/>
<enum name='NSStreamEventOpenCompleted' value='1'/>
<enum name='NSStreamStatusAtEnd' value='5'/>
<enum name='NSStreamStatusClosed' value='6'/>
<enum name='NSStreamStatusError' value='7'/>
<enum name='NSStreamStatusNotOpen' value='0'/>
<enum name='NSStreamStatusOpen' value='2'/>
<enum name='NSStreamStatusOpening' value='1'/>
<enum name='NSStreamStatusReading' value='3'/>
<enum name='NSStreamStatusWriting' value='4'/>
<enum name='NSStringEncodingConversionAllowLossy' value='1'/>
<enum name='NSStringEncodingConversionExternalRepresentation' value='2'/>
<enum name='NSSubqueryExpressionType' value='13'/>
<enum name='NSSunOSOperatingSystem' value='6'/>
<enum name='NSSymbolStringEncoding' value='6'/>
<enum name='NSSystemDomainMask' value='8'/>
<enum name='NSTimeIntervalSince1970' value='978307200.00000000'/>
<enum name='NSTimeZoneNameStyleDaylightSaving' value='2'/>
<enum name='NSTimeZoneNameStyleShortDaylightSaving' value='3'/>
<enum name='NSTimeZoneNameStyleShortStandard' value='1'/>
<enum name='NSTimeZoneNameStyleStandard' value='0'/>
<enum name='NSUIntegerMax' value64='18446744073709551615' value='4294967295'/>
<enum name='NSURLCacheStorageAllowed' value='0'/>
<enum name='NSURLCacheStorageAllowedInMemoryOnly' value='1'/>
<enum name='NSURLCacheStorageNotAllowed' value='2'/>
<enum name='NSURLCredentialPersistenceForSession' value='1'/>
<enum name='NSURLCredentialPersistenceNone' value='0'/>
<enum name='NSURLCredentialPersistencePermanent' value='2'/>
<enum name='NSURLErrorBadServerResponse' value='-1011'/>
<enum name='NSURLErrorBadURL' value='-1000'/>
<enum name='NSURLErrorCancelled' value='-999'/>
<enum name='NSURLErrorCannotCloseFile' value='-3002'/>
<enum name='NSURLErrorCannotConnectToHost' value='-1004'/>
<enum name='NSURLErrorCannotCreateFile' value='-3000'/>
<enum name='NSURLErrorCannotDecodeContentData' value='-1016'/>
<enum name='NSURLErrorCannotDecodeRawData' value='-1015'/>
<enum name='NSURLErrorCannotFindHost' value='-1003'/>
<enum name='NSURLErrorCannotLoadFromNetwork' value='-2000'/>
<enum name='NSURLErrorCannotMoveFile' value='-3005'/>
<enum name='NSURLErrorCannotOpenFile' value='-3001'/>
<enum name='NSURLErrorCannotParseResponse' value='-1017'/>
<enum name='NSURLErrorCannotRemoveFile' value='-3004'/>
<enum name='NSURLErrorCannotWriteToFile' value='-3003'/>
<enum name='NSURLErrorClientCertificateRejected' value='-1205'/>
<enum name='NSURLErrorDNSLookupFailed' value='-1006'/>
<enum name='NSURLErrorDataLengthExceedsMaximum' value='-1103'/>
<enum name='NSURLErrorDownloadDecodingFailedMidStream' value='-3006'/>
<enum name='NSURLErrorDownloadDecodingFailedToComplete' value='-3007'/>
<enum name='NSURLErrorFileDoesNotExist' value='-1100'/>
<enum name='NSURLErrorFileIsDirectory' value='-1101'/>
<enum name='NSURLErrorHTTPTooManyRedirects' value='-1007'/>
<enum name='NSURLErrorNetworkConnectionLost' value='-1005'/>
<enum name='NSURLErrorNoPermissionsToReadFile' value='-1102'/>
<enum name='NSURLErrorNotConnectedToInternet' value='-1009'/>
<enum name='NSURLErrorRedirectToNonExistentLocation' value='-1010'/>
<enum name='NSURLErrorResourceUnavailable' value='-1008'/>
<enum name='NSURLErrorSecureConnectionFailed' value='-1200'/>
<enum name='NSURLErrorServerCertificateHasBadDate' value='-1201'/>
<enum name='NSURLErrorServerCertificateHasUnknownRoot' value='-1203'/>
<enum name='NSURLErrorServerCertificateNotYetValid' value='-1204'/>
<enum name='NSURLErrorServerCertificateUntrusted' value='-1202'/>
<enum name='NSURLErrorTimedOut' value='-1001'/>
<enum name='NSURLErrorUnknown' value='-1'/>
<enum name='NSURLErrorUnsupportedURL' value='-1002'/>
<enum name='NSURLErrorUserAuthenticationRequired' value='-1013'/>
<enum name='NSURLErrorUserCancelledAuthentication' value='-1012'/>
<enum name='NSURLErrorZeroByteResource' value='-1014'/>
<enum name='NSURLHandleLoadFailed' value='3'/>
<enum name='NSURLHandleLoadInProgress' value='2'/>
<enum name='NSURLHandleLoadSucceeded' value='1'/>
<enum name='NSURLHandleNotLoaded' value='0'/>
<enum name='NSURLRequestReloadIgnoringCacheData' value='1'/>
<enum name='NSURLRequestReloadIgnoringLocalAndRemoteCacheData' value='4'/>
<enum name='NSURLRequestReloadIgnoringLocalCacheData' value='1'/>
<enum name='NSURLRequestReloadRevalidatingCacheData' value='5'/>
<enum name='NSURLRequestReturnCacheDataDontLoad' value='3'/>
<enum name='NSURLRequestReturnCacheDataElseLoad' value='2'/>
<enum name='NSURLRequestUseProtocolCachePolicy' value='0'/>
<enum name='NSUTF16BigEndianStringEncoding' value='-1879047936'/>
<enum name='NSUTF16LittleEndianStringEncoding' value='-1811939072'/>
<enum name='NSUTF16StringEncoding' value='10'/>
<enum name='NSUTF32BigEndianStringEncoding' value='-1744830208'/>
<enum name='NSUTF32LittleEndianStringEncoding' value='-1677721344'/>
<enum name='NSUTF32StringEncoding' value='-1946156800'/>
<enum name='NSUTF8StringEncoding' value='4'/>
<enum name='NSUncachedRead' value='2'/>
<enum name='NSUndefinedDateComponent' value64='-1' value='2147483647'/>
<enum name='NSUndoCloseGroupingRunLoopOrdering' value='350000'/>
<enum name='NSUnicodeStringEncoding' value='10'/>
<enum name='NSUnionSetExpressionType' value='5'/>
<enum name='NSUnknownKeyScriptError' value='7'/>
<enum name='NSUnknownKeySpecifierError' value='3'/>
<enum name='NSUserCancelledError' value='3072'/>
<enum name='NSUserDirectory' value='7'/>
<enum name='NSUserDomainMask' value='1'/>
<enum name='NSValidationErrorMaximum' value='2047'/>
<enum name='NSValidationErrorMinimum' value='1024'/>
<enum name='NSVariableExpressionType' value='2'/>
<enum name='NSWeekCalendarUnit' value='256'/>
<enum name='NSWeekdayCalendarUnit' value='512'/>
<enum name='NSWeekdayOrdinalCalendarUnit' value='1024'/>
<enum name='NSWidthInsensitiveSearch' value='256'/>
<enum name='NSWindows95OperatingSystem' value='2'/>
<enum name='NSWindowsCP1250StringEncoding' value='15'/>
<enum name='NSWindowsCP1251StringEncoding' value='11'/>
<enum name='NSWindowsCP1252StringEncoding' value='12'/>
<enum name='NSWindowsCP1253StringEncoding' value='13'/>
<enum name='NSWindowsCP1254StringEncoding' value='14'/>
<enum name='NSWindowsNTOperatingSystem' value='1'/>
<enum name='NSWrapCalendarComponents' value='1'/>
<enum name='NSXMLAttributeCDATAKind' value='6'/>
<enum name='NSXMLAttributeDeclarationKind' value='10'/>
<enum name='NSXMLAttributeEntitiesKind' value='11'/>
<enum name='NSXMLAttributeEntityKind' value='10'/>
<enum name='NSXMLAttributeEnumerationKind' value='14'/>
<enum name='NSXMLAttributeIDKind' value='7'/>
<enum name='NSXMLAttributeIDRefKind' value='8'/>
<enum name='NSXMLAttributeIDRefsKind' value='9'/>
<enum name='NSXMLAttributeKind' value='3'/>
<enum name='NSXMLAttributeNMTokenKind' value='12'/>
<enum name='NSXMLAttributeNMTokensKind' value='13'/>
<enum name='NSXMLAttributeNotationKind' value='15'/>
<enum name='NSXMLCommentKind' value='6'/>
<enum name='NSXMLDTDKind' value='8'/>
<enum name='NSXMLDocumentHTMLKind' value='2'/>
<enum name='NSXMLDocumentIncludeContentTypeDeclaration' value='262144'/>
<enum name='NSXMLDocumentKind' value='1'/>
<enum name='NSXMLDocumentTextKind' value='3'/>
<enum name='NSXMLDocumentTidyHTML' value='512'/>
<enum name='NSXMLDocumentTidyXML' value='1024'/>
<enum name='NSXMLDocumentValidate' value='8192'/>
<enum name='NSXMLDocumentXHTMLKind' value='1'/>
<enum name='NSXMLDocumentXInclude' value='65536'/>
<enum name='NSXMLDocumentXMLKind' value='0'/>
<enum name='NSXMLElementDeclarationAnyKind' value='18'/>
<enum name='NSXMLElementDeclarationElementKind' value='20'/>
<enum name='NSXMLElementDeclarationEmptyKind' value='17'/>
<enum name='NSXMLElementDeclarationKind' value='11'/>
<enum name='NSXMLElementDeclarationMixedKind' value='19'/>
<enum name='NSXMLElementDeclarationUndefinedKind' value='16'/>
<enum name='NSXMLElementKind' value='2'/>
<enum name='NSXMLEntityDeclarationKind' value='9'/>
<enum name='NSXMLEntityGeneralKind' value='1'/>
<enum name='NSXMLEntityParameterKind' value='4'/>
<enum name='NSXMLEntityParsedKind' value='2'/>
<enum name='NSXMLEntityPredefined' value='5'/>
<enum name='NSXMLEntityUnparsedKind' value='3'/>
<enum name='NSXMLInvalidKind' value='0'/>
<enum name='NSXMLNamespaceKind' value='4'/>
<enum name='NSXMLNodeCompactEmptyElement' value='4'/>
<enum name='NSXMLNodeExpandEmptyElement' value='2'/>
<enum name='NSXMLNodeIsCDATA' value='1'/>
<enum name='NSXMLNodeOptionsNone' value='0'/>
<enum name='NSXMLNodePreserveAll' value='-1048546'/>
<enum name='NSXMLNodePreserveAttributeOrder' value='2097152'/>
<enum name='NSXMLNodePreserveCDATA' value='16777216'/>
<enum name='NSXMLNodePreserveCharacterReferences' value='134217728'/>
<enum name='NSXMLNodePreserveDTD' value='67108864'/>
<enum name='NSXMLNodePreserveEmptyElements' value='6'/>
<enum name='NSXMLNodePreserveEntities' value='4194304'/>
<enum name='NSXMLNodePreserveNamespaceOrder' value='1048576'/>
<enum name='NSXMLNodePreservePrefixes' value='8388608'/>
<enum name='NSXMLNodePreserveQuotes' value='24'/>
<enum name='NSXMLNodePreserveWhitespace' value='33554432'/>
<enum name='NSXMLNodePrettyPrint' value='131072'/>
<enum name='NSXMLNodeUseDoubleQuotes' value='16'/>
<enum name='NSXMLNodeUseSingleQuotes' value='8'/>
<enum name='NSXMLNotationDeclarationKind' value='12'/>
<enum name='NSXMLParserAttributeHasNoValueError' value='41'/>
<enum name='NSXMLParserAttributeListNotFinishedError' value='51'/>
<enum name='NSXMLParserAttributeListNotStartedError' value='50'/>
<enum name='NSXMLParserAttributeNotFinishedError' value='40'/>
<enum name='NSXMLParserAttributeNotStartedError' value='39'/>
<enum name='NSXMLParserAttributeRedefinedError' value='42'/>
<enum name='NSXMLParserCDATANotFinishedError' value='63'/>
<enum name='NSXMLParserCharacterRefAtEOFError' value='10'/>
<enum name='NSXMLParserCharacterRefInDTDError' value='13'/>
<enum name='NSXMLParserCharacterRefInEpilogError' value='12'/>
<enum name='NSXMLParserCharacterRefInPrologError' value='11'/>
<enum name='NSXMLParserCommentContainsDoubleHyphenError' value='80'/>
<enum name='NSXMLParserCommentNotFinishedError' value='45'/>
<enum name='NSXMLParserConditionalSectionNotFinishedError' value='59'/>
<enum name='NSXMLParserConditionalSectionNotStartedError' value='58'/>
<enum name='NSXMLParserDOCTYPEDeclNotFinishedError' value='61'/>
<enum name='NSXMLParserDelegateAbortedParseError' value='512'/>
<enum name='NSXMLParserDocumentStartError' value='3'/>
<enum name='NSXMLParserElementContentDeclNotFinishedError' value='55'/>
<enum name='NSXMLParserElementContentDeclNotStartedError' value='54'/>
<enum name='NSXMLParserEmptyDocumentError' value='4'/>
<enum name='NSXMLParserEncodingNotSupportedError' value='32'/>
<enum name='NSXMLParserEntityBoundaryError' value='90'/>
<enum name='NSXMLParserEntityIsExternalError' value='29'/>
<enum name='NSXMLParserEntityIsParameterError' value='30'/>
<enum name='NSXMLParserEntityNotFinishedError' value='37'/>
<enum name='NSXMLParserEntityNotStartedError' value='36'/>
<enum name='NSXMLParserEntityRefAtEOFError' value='14'/>
<enum name='NSXMLParserEntityRefInDTDError' value='17'/>
<enum name='NSXMLParserEntityRefInEpilogError' value='16'/>
<enum name='NSXMLParserEntityRefInPrologError' value='15'/>
<enum name='NSXMLParserEntityRefLoopError' value='89'/>
<enum name='NSXMLParserEntityReferenceMissingSemiError' value='23'/>
<enum name='NSXMLParserEntityReferenceWithoutNameError' value='22'/>
<enum name='NSXMLParserEntityValueRequiredError' value='84'/>
<enum name='NSXMLParserEqualExpectedError' value='75'/>
<enum name='NSXMLParserExternalStandaloneEntityError' value='82'/>
<enum name='NSXMLParserExternalSubsetNotFinishedError' value='60'/>
<enum name='NSXMLParserExtraContentError' value='86'/>
<enum name='NSXMLParserGTRequiredError' value='73'/>
<enum name='NSXMLParserInternalError' value='1'/>
<enum name='NSXMLParserInvalidCharacterError' value='9'/>
<enum name='NSXMLParserInvalidCharacterInEntityError' value='87'/>
<enum name='NSXMLParserInvalidCharacterRefError' value='8'/>
<enum name='NSXMLParserInvalidConditionalSectionError' value='83'/>
<enum name='NSXMLParserInvalidDecimalCharacterRefError' value='7'/>
<enum name='NSXMLParserInvalidEncodingError' value='81'/>
<enum name='NSXMLParserInvalidEncodingNameError' value='79'/>
<enum name='NSXMLParserInvalidHexCharacterRefError' value='6'/>
<enum name='NSXMLParserInvalidURIError' value='91'/>
<enum name='NSXMLParserLTRequiredError' value='72'/>
<enum name='NSXMLParserLTSlashRequiredError' value='74'/>
<enum name='NSXMLParserLessThanSymbolInAttributeError' value='38'/>
<enum name='NSXMLParserLiteralNotFinishedError' value='44'/>
<enum name='NSXMLParserLiteralNotStartedError' value='43'/>
<enum name='NSXMLParserMisplacedCDATAEndStringError' value='62'/>
<enum name='NSXMLParserMisplacedXMLDeclarationError' value='64'/>
<enum name='NSXMLParserMixedContentDeclNotFinishedError' value='53'/>
<enum name='NSXMLParserMixedContentDeclNotStartedError' value='52'/>
<enum name='NSXMLParserNAMERequiredError' value='68'/>
<enum name='NSXMLParserNMTOKENRequiredError' value='67'/>
<enum name='NSXMLParserNamespaceDeclarationError' value='35'/>
<enum name='NSXMLParserNoDTDError' value='94'/>
<enum name='NSXMLParserNotWellBalancedError' value='85'/>
<enum name='NSXMLParserNotationNotFinishedError' value='49'/>
<enum name='NSXMLParserNotationNotStartedError' value='48'/>
<enum name='NSXMLParserOutOfMemoryError' value='2'/>
<enum name='NSXMLParserPCDATARequiredError' value='69'/>
<enum name='NSXMLParserParsedEntityRefAtEOFError' value='18'/>
<enum name='NSXMLParserParsedEntityRefInEpilogError' value='20'/>
<enum name='NSXMLParserParsedEntityRefInInternalError' value='88'/>
<enum name='NSXMLParserParsedEntityRefInInternalSubsetError' value='21'/>
<enum name='NSXMLParserParsedEntityRefInPrologError' value='19'/>
<enum name='NSXMLParserParsedEntityRefMissingSemiError' value='25'/>
<enum name='NSXMLParserParsedEntityRefNoNameError' value='24'/>
<enum name='NSXMLParserPrematureDocumentEndError' value='5'/>
<enum name='NSXMLParserProcessingInstructionNotFinishedError' value='47'/>
<enum name='NSXMLParserProcessingInstructionNotStartedError' value='46'/>
<enum name='NSXMLParserPublicIdentifierRequiredError' value='71'/>
<enum name='NSXMLParserSeparatorRequiredError' value='66'/>
<enum name='NSXMLParserSpaceRequiredError' value='65'/>
<enum name='NSXMLParserStandaloneValueError' value='78'/>
<enum name='NSXMLParserStringNotClosedError' value='34'/>
<enum name='NSXMLParserStringNotStartedError' value='33'/>
<enum name='NSXMLParserTagNameMismatchError' value='76'/>
<enum name='NSXMLParserURIFragmentError' value='92'/>
<enum name='NSXMLParserURIRequiredError' value='70'/>
<enum name='NSXMLParserUndeclaredEntityError' value='26'/>
<enum name='NSXMLParserUnfinishedTagError' value='77'/>
<enum name='NSXMLParserUnknownEncodingError' value='31'/>
<enum name='NSXMLParserUnparsedEntityError' value='28'/>
<enum name='NSXMLParserXMLDeclNotFinishedError' value='57'/>
<enum name='NSXMLParserXMLDeclNotStartedError' value='56'/>
<enum name='NSXMLProcessingInstructionKind' value='5'/>
<enum name='NSXMLTextKind' value='7'/>
<enum name='NSYearCalendarUnit' value='4'/>
<enum name='NS_BigEndian' value='2'/>
<enum name='NS_LittleEndian' value='1'/>
<enum name='NS_UNICHAR_IS_EIGHT_BIT' value='0'/>
<enum name='NS_UnknownByteOrder' value='0'/>
<function name='NSAllHashTableObjects'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='NSAllMapTableKeys'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='NSAllMapTableValues'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='NSAllocateCollectable'>
<arg name='size' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSAllocateMemoryPages'>
<arg name='bytes' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSAllocateObject'>
<arg name='aClass' declared_type='Class' type='#'/>
<arg name='extraBytes' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='id' type='@'/>
</function>
<function name='NSClassFromString'>
<arg name='aClassName' declared_type='NSString*' type='@'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='NSCompareHashTables'>
<arg name='table1' declared_type='NSHashTable*' type='@'/>
<arg name='table2' declared_type='NSHashTable*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSCompareMapTables'>
<arg name='table1' declared_type='NSMapTable*' type='@'/>
<arg name='table2' declared_type='NSMapTable*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSContainsRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='bRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSConvertHostDoubleToSwapped' inline='true'>
<arg name='x' declared_type='double' type='d'/>
<retval declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
</function>
<function name='NSConvertHostFloatToSwapped' inline='true'>
<arg name='x' declared_type='float' type='f'/>
<retval declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
</function>
<function name='NSConvertSwappedDoubleToHost' inline='true'>
<arg name='x' declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='NSConvertSwappedFloatToHost' inline='true'>
<arg name='x' declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='NSCopyHashTableWithZone'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='NSHashTable*' type='@'/>
</function>
<function name='NSCopyMapTableWithZone'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='NSMapTable*' type='@'/>
</function>
<function name='NSCopyMemoryPages'>
<arg name='source' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<arg name='dest' declared_type='void*' type='^v' type_modifier='n'/>
<arg name='bytes' declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSCopyObject'>
<arg name='object' declared_type='id' type='@'/>
<arg name='extraBytes' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='id' type='@'/>
</function>
<function name='NSCountFrames'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSCountHashTable'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSCountMapTable'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSCreateHashTable'>
<arg name='callBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='NSHashTable*' type='@'/>
</function>
<function name='NSCreateHashTableWithZone'>
<arg name='callBacks' declared_type='NSHashTableCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}'/>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='NSHashTable*' type='@'/>
</function>
<function name='NSCreateMapTable'>
<arg name='keyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<arg name='valueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}'/>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='NSMapTable*' type='@'/>
</function>
<function name='NSCreateMapTableWithZone'>
<arg name='keyCallBacks' declared_type='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}'/>
<arg name='valueCallBacks' declared_type='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}'/>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='NSMapTable*' type='@'/>
</function>
<function name='NSCreateZone'>
<arg name='startSize' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='granularity' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='canFree' declared_type='BOOL' type='B'/>
<retval declared_type='NSZone*' type='^{_NSZone=}'/>
</function>
<function name='NSDeallocateMemoryPages'>
<arg name='ptr' declared_type='void*' type='^v' type_modifier='n'/>
<arg name='bytes' declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSDeallocateObject'>
<arg name='object' declared_type='id' type='@'/>
</function>
<function name='NSDecimalAdd'>
<arg name='result' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='leftOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='rightOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
<retval declared_type='NSCalculationError' type='I' type64='Q'/>
</function>
<function name='NSDecimalCompact'>
<arg name='number' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
</function>
<function name='NSDecimalCompare'>
<arg name='leftOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='rightOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</function>
<function name='NSDecimalCopy'>
<arg name='destination' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='source' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
</function>
<function name='NSDecimalDivide'>
<arg name='result' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='leftOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='rightOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
<retval declared_type='NSCalculationError' type='I' type64='Q'/>
</function>
<function name='NSDecimalIsNotANumber' inline='true'>
<arg name='dcm' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSDecimalMultiply'>
<arg name='result' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='leftOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='rightOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
<retval declared_type='NSCalculationError' type='I' type64='Q'/>
</function>
<function name='NSDecimalMultiplyByPowerOf10'>
<arg name='result' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='number' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='power' declared_type='short' type='s'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
<retval declared_type='NSCalculationError' type='I' type64='Q'/>
</function>
<function name='NSDecimalNormalize'>
<arg name='number1' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='number2' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
<retval declared_type='NSCalculationError' type='I' type64='Q'/>
</function>
<function name='NSDecimalPower'>
<arg name='result' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='number' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='power' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
<retval declared_type='NSCalculationError' type='I' type64='Q'/>
</function>
<function name='NSDecimalRound'>
<arg name='result' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='number' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='scale' declared_type='NSInteger' type='i' type64='q'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
</function>
<function name='NSDecimalString'>
<arg name='dcm' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='locale' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSDecimalSubtract'>
<arg name='result' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' type_modifier='n'/>
<arg name='leftOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='rightOperand' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' type_modifier='n'/>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q'/>
<retval declared_type='NSCalculationError' type='I' type64='Q'/>
</function>
<function name='NSDecrementExtraRefCountWasZero'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSDefaultMallocZone'>
<retval declared_type='NSZone*' type='^{_NSZone=}'/>
</function>
<function name='NSDivideRect'>
<arg name='inRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='slice' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o'/>
<arg name='rem' declared_type='NSRect*' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o'/>
<arg name='amount' declared_type='CGFloat' type='f' type64='d'/>
<arg name='edge' declared_type='NSRectEdge' type='i' type64='Q'/>
</function>
<function name='NSEndHashTableEnumeration'>
<arg name='enumerator' declared_type='NSHashEnumerator*' type='^{_NSMapEnumerator=II^v}' type64='^{_NSMapEnumerator=QQ^v}' type_modifier='n'/>
</function>
<function name='NSEndMapTableEnumeration'>
<arg name='enumerator' declared_type='NSMapEnumerator*' type='^{_NSMapEnumerator=II^v}' type64='^{_NSMapEnumerator=QQ^v}' type_modifier='n'/>
</function>
<function name='NSEnumerateHashTable'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<retval declared_type='NSHashEnumerator' type='{_NSMapEnumerator=II^v}' type64='{_NSMapEnumerator=QQ^v}'/>
</function>
<function name='NSEnumerateMapTable'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<retval declared_type='NSMapEnumerator' type='{_NSMapEnumerator=II^v}' type64='{_NSMapEnumerator=QQ^v}'/>
</function>
<function name='NSEqualPoints'>
<arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg name='bPoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSEqualRanges' inline='true'>
<arg name='range1' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg name='range2' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSEqualRects'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='bRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSEqualSizes'>
<arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg name='bSize' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSExtraRefCount'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSFileTypeForHFSTypeCode'>
<arg name='hfsFileTypeCode' declared_type='OSType' type='L' type64='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFrameAddress'>
<arg name='frame' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSFreeHashTable'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
</function>
<function name='NSFreeMapTable'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
</function>
<function name='NSFullUserName'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSGetSizeAndAlignment'>
<arg name='typePtr' declared_type='char*' type='*' const='true' type_modifier='o'/>
<arg name='sizep' declared_type='NSUInteger*' type='^I' type64='^Q' type_modifier='o'/>
<arg name='alignp' declared_type='NSUInteger*' type='^I' type64='^Q' type_modifier='o'/>
<retval declared_type='char*' type='*' const='true'/>
</function>
<function name='NSGetUncaughtExceptionHandler'>
<retval function_pointer='true' declared_type='NSUncaughtExceptionHandler*' type='^?'>
<arg declared_type='NSException*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NSHFSTypeCodeFromFileType'>
<arg name='fileTypeString' declared_type='NSString*' type='@'/>
<retval declared_type='OSType' type='L' type64='I'/>
</function>
<function name='NSHFSTypeOfFile'>
<arg name='fullFilePath' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSHashGet'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<arg name='pointer' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSHashInsert'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<arg name='pointer' declared_type='void*' type='^v' const='true' type_modifier='n'/>
</function>
<function name='NSHashInsertIfAbsent'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<arg name='pointer' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSHashInsertKnownAbsent'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<arg name='pointer' declared_type='void*' type='^v' const='true' type_modifier='n'/>
</function>
<function name='NSHashRemove'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<arg name='pointer' declared_type='void*' type='^v' const='true' type_modifier='n'/>
</function>
<function name='NSHeight' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSHomeDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSHomeDirectoryForUser'>
<arg name='userName' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSHostByteOrder' inline='true'>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='NSIncrementExtraRefCount'>
<arg name='object' declared_type='id' type='@'/>
</function>
<function name='NSInsetRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='dX' declared_type='CGFloat' type='f' type64='d'/>
<arg name='dY' declared_type='CGFloat' type='f' type64='d'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSIntegralRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSIntersectionRange'>
<arg name='range1' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg name='range2' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='NSIntersectionRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='bRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSIntersectsRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='bRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSIsEmptyRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSIsFreedObject'>
<arg name='anObject' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSLocationInRange' inline='true'>
<arg name='loc' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSLog' variadic='true'>
<arg printf_format='true' name='format' declared_type='NSString*' type='@'/>
</function>
<function name='NSLogPageSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSLogv'>
<arg name='format' declared_type='NSString*' type='@'/>
<arg name='args' declared_type='va_list' type='*' type64='[1{?=II^v^v}]'/>
</function>
<function name='NSMakeCollectable' inline='true'>
<arg name='cf' declared_type='CFTypeRef' type='@'/>
<retval declared_type='id' type='@'/>
</function>
<function name='NSMakePoint' inline='true'>
<arg name='x' declared_type='CGFloat' type='f' type64='d'/>
<arg name='y' declared_type='CGFloat' type='f' type64='d'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='NSMakeRange' inline='true'>
<arg name='loc' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='len' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='NSMakeRect' inline='true'>
<arg name='x' declared_type='CGFloat' type='f' type64='d'/>
<arg name='y' declared_type='CGFloat' type='f' type64='d'/>
<arg name='w' declared_type='CGFloat' type='f' type64='d'/>
<arg name='h' declared_type='CGFloat' type='f' type64='d'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSMakeSize' inline='true'>
<arg name='w' declared_type='CGFloat' type='f' type64='d'/>
<arg name='h' declared_type='CGFloat' type='f' type64='d'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='NSMapGet'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<arg name='key' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSMapInsert'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<arg name='key' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<arg name='value' declared_type='void*' type='^v' const='true' type_modifier='n'/>
</function>
<function name='NSMapInsertIfAbsent'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<arg name='key' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<arg name='value' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSMapInsertKnownAbsent'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<arg name='key' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<arg name='value' declared_type='void*' type='^v' const='true' type_modifier='n'/>
</function>
<function name='NSMapMember'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<arg name='key' declared_type='void*' type='^v' const='true' type_modifier='n'/>
<arg name='originalKey' declared_type='void**' type='^^v' type_modifier='o'/>
<arg name='value' declared_type='void**' type='^^v' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSMapRemove'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<arg name='key' declared_type='void*' type='^v' const='true' type_modifier='n'/>
</function>
<function name='NSMaxRange' inline='true'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSMaxX' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSMaxY' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSMidX' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSMidY' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSMinX' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSMinY' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSMouseInRect'>
<arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='flipped' declared_type='BOOL' type='B'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSNextHashEnumeratorItem'>
<arg name='enumerator' declared_type='NSHashEnumerator*' type='^{_NSMapEnumerator=II^v}' type64='^{_NSMapEnumerator=QQ^v}' type_modifier='n'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSNextMapEnumeratorPair'>
<arg name='enumerator' declared_type='NSMapEnumerator*' type='^{_NSMapEnumerator=II^v}' type64='^{_NSMapEnumerator=QQ^v}' type_modifier='n'/>
<arg name='key' declared_type='void**' type='^^v' type_modifier='o'/>
<arg name='value' declared_type='void**' type='^^v' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSOffsetRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='dX' declared_type='CGFloat' type='f' type64='d'/>
<arg name='dY' declared_type='CGFloat' type='f' type64='d'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSOpenStepRootDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSPageSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSPointFromCGPoint' inline='true'>
<arg name='cgpoint' declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='NSPointFromString'>
<arg name='aString' declared_type='NSString*' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='NSPointInRect'>
<arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSPointToCGPoint' inline='true'>
<arg name='nspoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='NSProtocolFromString'>
<arg name='namestr' declared_type='NSString*' type='@'/>
<retval declared_type='Protocol*' type='@'/>
</function>
<function name='NSRangeFromString'>
<arg name='aString' declared_type='NSString*' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='NSRealMemoryAvailable'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSReallocateCollectable'>
<arg name='ptr' declared_type='void*' type='^v' type_modifier='n'/>
<arg name='size' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSRecordAllocationEvent'>
<arg name='eventType' declared_type='int' type='i'/>
<arg name='object' declared_type='id' type='@'/>
</function>
<function name='NSRectFromCGRect' inline='true'>
<arg name='cgrect' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSRectFromString'>
<arg name='aString' declared_type='NSString*' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSRectToCGRect' inline='true'>
<arg name='nsrect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSRecycleZone'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
</function>
<function name='NSResetHashTable'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
</function>
<function name='NSResetMapTable'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
</function>
<function name='NSReturnAddress'>
<arg name='frame' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSRoundDownToMultipleOfPageSize'>
<arg name='bytes' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSRoundUpToMultipleOfPageSize'>
<arg name='bytes' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</function>
<function name='NSSearchPathForDirectoriesInDomains'>
<arg name='directory' declared_type='NSSearchPathDirectory' type='I' type64='Q'/>
<arg name='domainMask' declared_type='NSSearchPathDomainMask' type='I' type64='Q'/>
<arg name='expandTilde' declared_type='BOOL' type='B'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='NSSelectorFromString'>
<arg name='aSelectorName' declared_type='NSString*' type='@'/>
<retval declared_type='SEL' type=':'/>
</function>
<function name='NSSetUncaughtExceptionHandler'>
<arg name='dummy' function_pointer='true' declared_type='NSUncaughtExceptionHandler*' type='^?' type_modifier='n'>
<arg declared_type='NSException*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
</function>
<function name='NSSetZoneName'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<arg name='name' declared_type='NSString*' type='@'/>
</function>
<function name='NSShouldRetainWithZone'>
<arg name='anObject' declared_type='id' type='@'/>
<arg name='requestedZone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSSizeFromCGSize' inline='true'>
<arg name='cgsize' declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='NSSizeFromString'>
<arg name='aString' declared_type='NSString*' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='NSSizeToCGSize' inline='true'>
<arg name='nssize' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='NSStringFromClass'>
<arg name='aClass' declared_type='Class' type='#'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromHashTable'>
<arg name='table' declared_type='NSHashTable*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromMapTable'>
<arg name='table' declared_type='NSMapTable*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromPoint'>
<arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromProtocol'>
<arg name='proto' declared_type='Protocol*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromRange'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromSelector'>
<arg name='aSelector' declared_type='SEL' type=':'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSStringFromSize'>
<arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSSwapBigDoubleToHost' inline='true'>
<arg name='x' declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='NSSwapBigFloatToHost' inline='true'>
<arg name='x' declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='NSSwapBigIntToHost' inline='true'>
<arg name='x' declared_type='unsigned int' type='I'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='NSSwapBigLongLongToHost' inline='true'>
<arg name='x' declared_type='unsigned long long' type='Q'/>
<retval declared_type='unsigned long long' type='Q'/>
</function>
<function name='NSSwapBigLongToHost' inline='true'>
<arg name='x' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</function>
<function name='NSSwapBigShortToHost' inline='true'>
<arg name='x' declared_type='unsigned short' type='S'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='NSSwapDouble' inline='true'>
<arg name='x' declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
<retval declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
</function>
<function name='NSSwapFloat' inline='true'>
<arg name='x' declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
<retval declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
</function>
<function name='NSSwapHostDoubleToBig' inline='true'>
<arg name='x' declared_type='double' type='d'/>
<retval declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
</function>
<function name='NSSwapHostDoubleToLittle' inline='true'>
<arg name='x' declared_type='double' type='d'/>
<retval declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
</function>
<function name='NSSwapHostFloatToBig' inline='true'>
<arg name='x' declared_type='float' type='f'/>
<retval declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
</function>
<function name='NSSwapHostFloatToLittle' inline='true'>
<arg name='x' declared_type='float' type='f'/>
<retval declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
</function>
<function name='NSSwapHostIntToBig' inline='true'>
<arg name='x' declared_type='unsigned int' type='I'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='NSSwapHostIntToLittle' inline='true'>
<arg name='x' declared_type='unsigned int' type='I'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='NSSwapHostLongLongToBig' inline='true'>
<arg name='x' declared_type='unsigned long long' type='Q'/>
<retval declared_type='unsigned long long' type='Q'/>
</function>
<function name='NSSwapHostLongLongToLittle' inline='true'>
<arg name='x' declared_type='unsigned long long' type='Q'/>
<retval declared_type='unsigned long long' type='Q'/>
</function>
<function name='NSSwapHostLongToBig' inline='true'>
<arg name='x' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</function>
<function name='NSSwapHostLongToLittle' inline='true'>
<arg name='x' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</function>
<function name='NSSwapHostShortToBig' inline='true'>
<arg name='x' declared_type='unsigned short' type='S'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='NSSwapHostShortToLittle' inline='true'>
<arg name='x' declared_type='unsigned short' type='S'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='NSSwapInt' inline='true'>
<arg name='inv' declared_type='unsigned int' type='I'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='NSSwapLittleDoubleToHost' inline='true'>
<arg name='x' declared_type='NSSwappedDouble' type='{_NSSwappedDouble=Q}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='NSSwapLittleFloatToHost' inline='true'>
<arg name='x' declared_type='NSSwappedFloat' type='{_NSSwappedFloat=I}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='NSSwapLittleIntToHost' inline='true'>
<arg name='x' declared_type='unsigned int' type='I'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='NSSwapLittleLongLongToHost' inline='true'>
<arg name='x' declared_type='unsigned long long' type='Q'/>
<retval declared_type='unsigned long long' type='Q'/>
</function>
<function name='NSSwapLittleLongToHost' inline='true'>
<arg name='x' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</function>
<function name='NSSwapLittleShortToHost' inline='true'>
<arg name='x' declared_type='unsigned short' type='S'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='NSSwapLong' inline='true'>
<arg name='inv' declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</function>
<function name='NSSwapLongLong' inline='true'>
<arg name='inv' declared_type='unsigned long long' type='Q'/>
<retval declared_type='unsigned long long' type='Q'/>
</function>
<function name='NSSwapShort' inline='true'>
<arg name='inv' declared_type='unsigned short' type='S'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='NSTemporaryDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSUnionRange'>
<arg name='range1' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg name='range2' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='NSUnionRect'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg name='bRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSUserName'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSWidth' inline='true'>
<arg name='aRect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function name='NSZoneCalloc'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<arg name='numElems' declared_type='NSUInteger' type='I' type64='Q'/>
<arg name='byteSize' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSZoneFree'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<arg name='ptr' declared_type='void*' type='^v' type_modifier='n'/>
</function>
<function name='NSZoneFromPointer'>
<arg name='ptr' declared_type='void*' type='^v' type_modifier='n'/>
<retval declared_type='NSZone*' type='^{_NSZone=}'/>
</function>
<function name='NSZoneMalloc'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<arg name='size' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NSZoneName'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSZoneRealloc'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' type_modifier='n'/>
<arg name='ptr' declared_type='void*' type='^v' type_modifier='n'/>
<arg name='size' declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NXReadNSObjectFromCoder'>
<arg name='decoder' declared_type='NSCoder*' type='@'/>
<retval declared_type='NSObject*' type='@'/>
</function>
<class name='NSAffineTransform'>
<method selector='appendTransform:'>
<arg name='transform' declared_type='NSAffineTransform*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTransform:'>
<arg name='transform' declared_type='NSAffineTransform*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prependTransform:'>
<arg name='transform' declared_type='NSAffineTransform*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateByDegrees:'>
<arg name='angle' declared_type='CGFloat' type='f' type64='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateByRadians:'>
<arg name='angle' declared_type='CGFloat' type='f' type64='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleBy:'>
<arg name='scale' declared_type='CGFloat' type='f' type64='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleXBy:yBy:'>
<arg name='scaleX' declared_type='CGFloat' type='f' type64='d' index='0'/>
<arg name='scaleY' declared_type='CGFloat' type='f' type64='d' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransformStruct:'>
<arg name='transformStruct' declared_type='NSAffineTransformStruct' type='{_NSAffineTransformStruct=ffffff}' type64='{_NSAffineTransformStruct=dddddd}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='transform'>
<retval declared_type='NSAffineTransform*' type='@'/>
</method>
<method selector='transformPoint:'>
<arg name='aPoint' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}' index='0'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='transformSize:'>
<arg name='aSize' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}' index='0'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='transformStruct'>
<retval declared_type='NSAffineTransformStruct' type='{_NSAffineTransformStruct=ffffff}' type64='{_NSAffineTransformStruct=dddddd}'/>
</method>
<method selector='translateXBy:yBy:'>
<arg name='deltaX' declared_type='CGFloat' type='f' type64='d' index='0'/>
<arg name='deltaY' declared_type='CGFloat' type='f' type64='d' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSAppleEventDescriptor'>
<method selector='aeDesc'>
<retval declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true'/>
</method>
<method class_method='true' selector='appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
<arg name='eventClass' declared_type='AEEventClass' type='L' type64='I' index='0'/>
<arg name='eventID' declared_type='AEEventID' type='L' type64='I' index='1'/>
<arg name='targetDescriptor' declared_type='NSAppleEventDescriptor*' type='@' index='2'/>
<arg name='returnID' declared_type='AEReturnID' type='s' index='3'/>
<arg name='transactionID' declared_type='AETransactionID' type='l' type64='i' index='4'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='attributeDescriptorForKeyword:'>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='booleanValue'>
<retval declared_type='Boolean' type='B'/>
</method>
<method selector='coerceToDescriptorType:'>
<arg name='descriptorType' declared_type='DescType' type='L' type64='I' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='descriptorAtIndex:'>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='descriptorForKeyword:'>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='descriptorType'>
<retval declared_type='DescType' type='L' type64='I'/>
</method>
<method class_method='true' selector='descriptorWithBoolean:'>
<arg name='boolean' declared_type='Boolean' type='B' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='descriptorWithDescriptorType:bytes:length:'>
<arg name='descriptorType' declared_type='DescType' type='L' type64='I' index='0'/>
<arg name='bytes' declared_type='void*' type='^v' const='true' index='1'/>
<arg name='byteCount' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='descriptorWithDescriptorType:data:'>
<arg name='descriptorType' declared_type='DescType' type='L' type64='I' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='descriptorWithEnumCode:'>
<arg name='enumerator' declared_type='OSType' type='L' type64='I' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='descriptorWithInt32:'>
<arg name='signedInt' declared_type='SInt32' type='l' type64='i' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='descriptorWithString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='descriptorWithTypeCode:'>
<arg name='typeCode' declared_type='OSType' type='L' type64='I' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='enumCodeValue'>
<retval declared_type='OSType' type='L' type64='I'/>
</method>
<method selector='eventClass'>
<retval declared_type='AEEventClass' type='L' type64='I'/>
</method>
<method selector='eventID'>
<retval declared_type='AEEventID' type='L' type64='I'/>
</method>
<method selector='initListDescriptor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initRecordDescriptor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAEDescNoCopy:'>
<arg name='aeDesc' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDescriptorType:bytes:length:'>
<arg name='descriptorType' declared_type='DescType' type='L' type64='I' index='0'/>
<arg name='bytes' declared_type='void*' type='^v' const='true' index='1'/>
<arg name='byteCount' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDescriptorType:data:'>
<arg name='descriptorType' declared_type='DescType' type='L' type64='I' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
<arg name='eventClass' declared_type='AEEventClass' type='L' type64='I' index='0'/>
<arg name='eventID' declared_type='AEEventID' type='L' type64='I' index='1'/>
<arg name='targetDescriptor' declared_type='NSAppleEventDescriptor*' type='@' index='2'/>
<arg name='returnID' declared_type='AEReturnID' type='s' index='3'/>
<arg name='transactionID' declared_type='AETransactionID' type='l' type64='i' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertDescriptor:atIndex:'>
<arg name='descriptor' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='int32Value'>
<retval declared_type='SInt32' type='l' type64='i'/>
</method>
<method selector='keywordForDescriptorAtIndex:'>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='AEKeyword' type='L' type64='I'/>
</method>
<method class_method='true' selector='listDescriptor'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='nullDescriptor'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='paramDescriptorForKeyword:'>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method class_method='true' selector='recordDescriptor'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='removeDescriptorAtIndex:'>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeDescriptorWithKeyword:'>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeParamDescriptorWithKeyword:'>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='returnID'>
<retval declared_type='AEReturnID' type='s'/>
</method>
<method selector='setAttributeDescriptor:forKeyword:'>
<arg name='descriptor' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDescriptor:forKeyword:'>
<arg name='descriptor' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParamDescriptor:forKeyword:'>
<arg name='descriptor' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<arg name='keyword' declared_type='AEKeyword' type='L' type64='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='transactionID'>
<retval declared_type='AETransactionID' type='l' type64='i'/>
</method>
<method selector='typeCodeValue'>
<retval declared_type='OSType' type='L' type64='I'/>
</method>
</class>
<class name='NSAppleEventManager'>
<method selector='appleEventForSuspensionID:'>
<arg name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' type='^{__NSAppleEventManagerSuspension=}' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='currentAppleEvent'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='currentReplyAppleEvent'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='dispatchRawAppleEvent:withRawReply:handlerRefCon:'>
<arg name='theAppleEvent' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true' index='0'/>
<arg name='theReply' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' index='1'/>
<arg name='handlerRefCon' declared_type='SRefCon' type='l' type64='^v' index='2'/>
<retval declared_type='OSErr' type='s'/>
</method>
<method selector='removeEventHandlerForEventClass:andEventID:'>
<arg name='eventClass' declared_type='AEEventClass' type='L' type64='I' index='0'/>
<arg name='eventID' declared_type='AEEventID' type='L' type64='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replyAppleEventForSuspensionID:'>
<arg name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' type='^{__NSAppleEventManagerSuspension=}' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='resumeWithSuspensionID:'>
<arg name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' type='^{__NSAppleEventManagerSuspension=}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentAppleEventAndReplyEventWithSuspensionID:'>
<arg name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' type='^{__NSAppleEventManagerSuspension=}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEventHandler:andSelector:forEventClass:andEventID:'>
<arg name='handler' declared_type='id' type='@' index='0'/>
<arg name='handleEventSelector' declared_type='SEL' type=':' index='1'/>
<arg name='eventClass' declared_type='AEEventClass' type='L' type64='I' index='2'/>
<arg name='eventID' declared_type='AEEventID' type='L' type64='I' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedAppleEventManager'>
<retval declared_type='NSAppleEventManager*' type='@'/>
</method>
<method selector='suspendCurrentAppleEvent'>
<retval declared_type='NSAppleEventManagerSuspensionID' type='^{__NSAppleEventManagerSuspension=}'/>
</method>
</class>
<class name='NSAppleScript'>
<method selector='compileAndReturnError:'>
<arg name='errorInfo' declared_type='NSDictionary**' type='^@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeAndReturnError:'>
<arg name='errorInfo' declared_type='NSDictionary**' type='^@' index='0'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='executeAppleEvent:error:'>
<arg name='event' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<arg name='errorInfo' declared_type='NSDictionary**' type='^@' index='1'/>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='errorInfo' declared_type='NSDictionary**' type='^@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSource:'>
<arg name='source' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isCompiled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='source'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<arg name='rootObject' declared_type='id' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='archivedDataWithRootObject:'>
<arg name='rootObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='archiverData'>
<retval declared_type='NSMutableData*' type='@'/>
</method>
<method selector='classNameEncodedForTrueClassName:'>
<arg name='trueName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='encodeClassName:intoClassName:'>
<arg name='trueName' declared_type='NSString*' type='@' index='0'/>
<arg name='inArchiveName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeConditionalObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRootObject:'>
<arg name='rootObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initForWritingWithMutableData:'>
<arg name='mdata' declared_type='NSMutableData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='replaceObject:withObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<arg name='newObject' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSArray'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<arg name='options' declared_type='NSKeyValueObservingOptions' type='I' type64='Q' index='2'/>
<arg name='context' declared_type='void*' type='^v' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObserver:toObjectsAtIndexes:forKeyPath:options:context:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='1'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='2'/>
<arg name='options' declared_type='NSKeyValueObservingOptions' type='I' type64='Q' index='3'/>
<arg name='context' declared_type='void*' type='^v' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='array'>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayByAddingObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='arrayByAddingObjectsFromArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='arrayWithArray:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='arrayWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='arrayWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='arrayWithObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' variadic='true' selector='arrayWithObjects:'>
<arg name='arrayWithObjects' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='arrayWithObjects:count:'>
<arg name='objects' declared_type='id*' type='^@' const='true' index='0'/>
<arg name='cnt' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='componentsJoinedByString:'>
<arg name='separator' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='containsObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<arg name='level' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filteredArrayUsingPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='firstObjectCommonWithArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='getObjects:'>
<arg name='objects' declared_type='id*' type='^@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjects:range:'>
<arg name='objects' declared_type='id*' type='^@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexOfObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexOfObject:inRange:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexOfObjectIdenticalTo:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexOfObjectIdenticalTo:inRange:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithArray:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithArray:copyItems:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<arg name='flag' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='initWithObjects:'>
<arg name='initWithObjects' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithObjects:count:'>
<arg name='objects' declared_type='id*' type='^@' const='true' index='0'/>
<arg name='cnt' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='argument' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='objectsAtIndexes:'>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pathsMatchingExtensions:'>
<arg name='filterTypes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='1'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='setValue:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortedArrayHint'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='sortedArrayUsingDescriptors:'>
<arg name='sortDescriptors' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedArrayUsingFunction:context:'>
<arg name='comparator' function_pointer='true' declared_type='NSInteger *id, id, void*' type='^?' index='0' type_modifier='n'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</arg>
<arg name='context' declared_type='void*' type='^v' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedArrayUsingFunction:context:hint:'>
<arg name='comparator' function_pointer='true' declared_type='NSInteger *id, id, void*' type='^?' index='0' type_modifier='n'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</arg>
<arg name='context' declared_type='void*' type='^v' index='1'/>
<arg name='hint' declared_type='NSData*' type='@' index='2'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedArrayUsingSelector:'>
<arg name='comparator' declared_type='SEL' type=':' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='subarrayWithRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='valueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='writeToFile:atomically:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='useAuxiliaryFile' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='atomically' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSAssertionHandler'>
<method class_method='true' selector='currentHandler'>
<retval declared_type='NSAssertionHandler*' type='@'/>
</method>
<method variadic='true' selector='handleFailureInFunction:file:lineNumber:description:'>
<arg name='functionName' declared_type='NSString*' type='@' index='0'/>
<arg name='fileName' declared_type='NSString*' type='@' index='1'/>
<arg name='line' declared_type='NSInteger' type='i' type64='q' index='2'/>
<arg name='description' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' selector='handleFailureInMethod:object:file:lineNumber:description:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<arg name='fileName' declared_type='NSString*' type='@' index='2'/>
<arg name='line' declared_type='NSInteger' type='i' type64='q' index='3'/>
<arg name='description' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='attribute:atIndex:effectiveRange:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<arg name='location' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='range' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='attribute:atIndex:longestEffectiveRange:inRange:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<arg name='location' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='range' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='2'/>
<arg name='rangeLimit' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='attributedSubstringFromRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='attributesAtIndex:effectiveRange:'>
<arg name='location' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='range' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='1'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='attributesAtIndex:longestEffectiveRange:inRange:'>
<arg name='location' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='range' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='1'/>
<arg name='rangeLimit' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithAttributedString:'>
<arg name='attrStr' declared_type='NSAttributedString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:attributes:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<arg name='attrs' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToAttributedString:'>
<arg name='other' declared_type='NSAttributedString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='length'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSAutoreleasePool'>
<method class_method='true' selector='addObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='autoreleasedObjectCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='drain'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='enableFreedObjectCheck:'>
<arg name='enable' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='enableRelease:'>
<arg name='enable' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='poolCountHighWaterMark'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='poolCountHighWaterResolution'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='resetTotalAutoreleasedObjects'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPoolCountHighWaterMark:'>
<arg name='count' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPoolCountHighWaterResolution:'>
<arg name='res' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showPools'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='topAutoreleasePoolCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='totalAutoreleasedObjects'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='NSBundle'>
<method class_method='true' selector='allBundles'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='allFrameworks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='builtInPlugInsPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='bundleForClass:'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='bundleIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bundlePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='bundleWithIdentifier:'>
<arg name='identifier' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method class_method='true' selector='bundleWithPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='classNamed:'>
<arg name='className' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='developmentLocalization'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='executableArchitectures'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='executablePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='infoDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadAndReturnError:'>
<arg name='error' declared_type='NSError**' type='^@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='localizedInfoDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='localizedStringForKey:value:table:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='value' declared_type='NSString*' type='@' index='1'/>
<arg name='tableName' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='mainBundle'>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='objectForInfoDictionaryKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pathForAuxiliaryExecutable:'>
<arg name='executableName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathForResource:ofType:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='ext' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathForResource:ofType:inDirectory:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='ext' declared_type='NSString*' type='@' index='1'/>
<arg name='subpath' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='pathForResource:ofType:inDirectory:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='ext' declared_type='NSString*' type='@' index='1'/>
<arg name='bundlePath' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathForResource:ofType:inDirectory:forLocalization:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='ext' declared_type='NSString*' type='@' index='1'/>
<arg name='subpath' declared_type='NSString*' type='@' index='2'/>
<arg name='localizationName' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='pathsForResourcesOfType:inDirectory:'>
<arg name='ext' declared_type='NSString*' type='@' index='0'/>
<arg name='bundlePath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:'>
<arg name='ext' declared_type='NSString*' type='@' index='0'/>
<arg name='subpath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:forLocalization:'>
<arg name='ext' declared_type='NSString*' type='@' index='0'/>
<arg name='subpath' declared_type='NSString*' type='@' index='1'/>
<arg name='localizationName' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='preferredLocalizations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='preferredLocalizationsFromArray:'>
<arg name='localizationsArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='preferredLocalizationsFromArray:forPreferences:'>
<arg name='localizationsArray' declared_type='NSArray*' type='@' index='0'/>
<arg name='preferencesArray' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='preflightAndReturnError:'>
<arg name='error' declared_type='NSError**' type='^@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='principalClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='privateFrameworksPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='resourcePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sharedFrameworksPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sharedSupportPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='unload'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSCachedURLResponse'>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='initWithResponse:data:'>
<arg name='response' declared_type='NSURLResponse*' type='@' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithResponse:data:userInfo:storagePolicy:'>
<arg name='response' declared_type='NSURLResponse*' type='@' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<arg name='userInfo' declared_type='NSDictionary*' type='@' index='2'/>
<arg name='storagePolicy' declared_type='NSURLCacheStoragePolicy' type='I' type64='Q' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='storagePolicy'>
<retval declared_type='NSURLCacheStoragePolicy' type='I' type64='Q'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSCalendar'>
<method class_method='true' selector='autoupdatingCurrentCalendar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='calendarIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='components:fromDate:'>
<arg name='unitFlags' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='date' declared_type='NSDate*' type='@' index='1'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='components:fromDate:toDate:options:'>
<arg name='unitFlags' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='startingDate' declared_type='NSDate*' type='@' index='1'/>
<arg name='resultDate' declared_type='NSDate*' type='@' index='2'/>
<arg name='opts' declared_type='NSUInteger' type='I' type64='Q' index='3'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method class_method='true' selector='currentCalendar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dateByAddingComponents:toDate:options:'>
<arg name='comps' declared_type='NSDateComponents*' type='@' index='0'/>
<arg name='date' declared_type='NSDate*' type='@' index='1'/>
<arg name='opts' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromComponents:'>
<arg name='comps' declared_type='NSDateComponents*' type='@' index='0'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='firstWeekday'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithCalendarIdentifier:'>
<arg name='ident' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='maximumRangeOfUnit:'>
<arg name='unit' declared_type='NSCalendarUnit' type='I' type64='Q' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='minimumDaysInFirstWeek'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumRangeOfUnit:'>
<arg name='unit' declared_type='NSCalendarUnit' type='I' type64='Q' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='ordinalityOfUnit:inUnit:forDate:'>
<arg name='smaller' declared_type='NSCalendarUnit' type='I' type64='Q' index='0'/>
<arg name='larger' declared_type='NSCalendarUnit' type='I' type64='Q' index='1'/>
<arg name='date' declared_type='NSDate*' type='@' index='2'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rangeOfUnit:inUnit:forDate:'>
<arg name='smaller' declared_type='NSCalendarUnit' type='I' type64='Q' index='0'/>
<arg name='larger' declared_type='NSCalendarUnit' type='I' type64='Q' index='1'/>
<arg name='date' declared_type='NSDate*' type='@' index='2'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfUnit:startDate:interval:forDate:'>
<arg name='unit' declared_type='NSCalendarUnit' type='I' type64='Q' index='0'/>
<arg name='datep' declared_type='NSDate**' type='^@' index='1'/>
<arg name='tip' declared_type='NSTimeInterval*' type='^d' index='2'/>
<arg name='date' declared_type='NSDate*' type='@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFirstWeekday:'>
<arg name='weekday' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg name='locale' declared_type='NSLocale*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumDaysInFirstWeek:'>
<arg name='mdw' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg name='tz' declared_type='NSTimeZone*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
</class>
<class name='NSCalendarDate'>
<method class_method='true' selector='calendarDate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='calendarFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dateByAddingYears:months:days:hours:minutes:seconds:'>
<arg name='year' declared_type='NSInteger' type='i' type64='q' index='0'/>
<arg name='month' declared_type='NSInteger' type='i' type64='q' index='1'/>
<arg name='day' declared_type='NSInteger' type='i' type64='q' index='2'/>
<arg name='hour' declared_type='NSInteger' type='i' type64='q' index='3'/>
<arg name='minute' declared_type='NSInteger' type='i' type64='q' index='4'/>
<arg name='second' declared_type='NSInteger' type='i' type64='q' index='5'/>
<retval declared_type='NSCalendarDate*' type='@'/>
</method>
<method class_method='true' selector='dateWithString:calendarFormat:'>
<arg name='description' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dateWithString:calendarFormat:locale:'>
<arg name='description' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='NSString*' type='@' index='1'/>
<arg name='locale' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dateWithYear:month:day:hour:minute:second:timeZone:'>
<arg name='year' declared_type='NSInteger' type='i' type64='q' index='0'/>
<arg name='month' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='day' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<arg name='hour' declared_type='NSUInteger' type='I' type64='Q' index='3'/>
<arg name='minute' declared_type='NSUInteger' type='I' type64='Q' index='4'/>
<arg name='second' declared_type='NSUInteger' type='I' type64='Q' index='5'/>
<arg name='aTimeZone' declared_type='NSTimeZone*' type='@' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='dayOfCommonEra'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dayOfMonth'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dayOfWeek'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dayOfYear'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithCalendarFormat:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithCalendarFormat:locale:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<arg name='locale' declared_type='id' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hourOfDay'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithString:'>
<arg name='description' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:calendarFormat:'>
<arg name='description' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:calendarFormat:locale:'>
<arg name='description' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='NSString*' type='@' index='1'/>
<arg name='locale' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithYear:month:day:hour:minute:second:timeZone:'>
<arg name='year' declared_type='NSInteger' type='i' type64='q' index='0'/>
<arg name='month' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='day' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<arg name='hour' declared_type='NSUInteger' type='I' type64='Q' index='3'/>
<arg name='minute' declared_type='NSUInteger' type='I' type64='Q' index='4'/>
<arg name='second' declared_type='NSUInteger' type='I' type64='Q' index='5'/>
<arg name='aTimeZone' declared_type='NSTimeZone*' type='@' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='minuteOfHour'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthOfYear'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='secondOfMinute'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setCalendarFormat:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg name='aTimeZone' declared_type='NSTimeZone*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='yearOfCommonEra'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='years:months:days:hours:minutes:seconds:sinceDate:'>
<arg name='yp' declared_type='NSInteger*' type='^i' type64='^q' index='0'/>
<arg name='mop' declared_type='NSInteger*' type='^i' type64='^q' index='1'/>
<arg name='dp' declared_type='NSInteger*' type='^i' type64='^q' index='2'/>
<arg name='hp' declared_type='NSInteger*' type='^i' type64='^q' index='3'/>
<arg name='mip' declared_type='NSInteger*' type='^i' type64='^q' index='4'/>
<arg name='sp' declared_type='NSInteger*' type='^i' type64='^q' index='5'/>
<arg name='date' declared_type='NSCalendarDate*' type='@' index='6'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCharacterSet'>
<method class_method='true' selector='alphanumericCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bitmapRepresentation'>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='capitalizedLetterCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='characterIsMember:'>
<arg name='aCharacter' declared_type='unichar' type='S' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='characterSetWithBitmapRepresentation:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='characterSetWithCharactersInString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='characterSetWithContentsOfFile:'>
<arg name='fName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='characterSetWithRange:'>
<arg name='aRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='controlCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='decimalDigitCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='decomposableCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasMemberInPlane:'>
<arg name='thePlane' declared_type='uint8_t' type='C' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='illegalCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='invertedSet'>
<retval declared_type='NSCharacterSet*' type='@'/>
</method>
<method selector='isSupersetOfSet:'>
<arg name='theOtherSet' declared_type='NSCharacterSet*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='letterCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='longCharacterIsMember:'>
<arg name='theLongChar' declared_type='UTF32Char' type='L' type64='I' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='lowercaseLetterCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='newlineCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='nonBaseCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='punctuationCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='symbolCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uppercaseLetterCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='whitespaceAndNewlineCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='whitespaceCharacterSet'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSClassDescription'>
<method selector='attributeKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='classDescriptionForClass:'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='NSClassDescription*' type='@'/>
</method>
<method class_method='true' selector='invalidateClassDescriptionCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='inverseForRelationshipKey:'>
<arg name='relationshipKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='registerClassDescription:forClass:'>
<arg name='description' declared_type='NSClassDescription*' type='@' index='0'/>
<arg name='aClass' declared_type='Class' type='#' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toManyRelationshipKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='toOneRelationshipKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSCloneCommand'>
<method selector='keySpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg name='receiversRef' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCloseCommand'>
<method selector='saveOptions'>
<retval declared_type='NSSaveOptions' type='I' type64='Q'/>
</method>
</class>
<class name='NSCoder'>
<method selector='allowsKeyedCoding'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='decodeArrayOfObjCType:count:at:'>
<arg name='itemType' declared_type='char*' type='*' const='true' index='0'/>
<arg name='count' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='array' declared_type='void*' type='^v' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='decodeBoolForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='lengthp' declared_type='NSUInteger*' type='^I' type64='^Q' index='1'/>
<retval declared_type='uint8_t*' type='*' const='true'/>
</method>
<method selector='decodeBytesWithReturnedLength:'>
<arg name='lengthp' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='decodeDataObject'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='decodeFloatForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='decodeIntForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='decodeIntegerForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='decodeNXObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='decodeObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='decodeObjectForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='decodePoint'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='decodePointForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='decodePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='decodeRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='decodeRectForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='decodeSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='decodeSizeForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='decodeValueOfObjCType:at:'>
<arg name='type' declared_type='char*' type='*' const='true' index='0'/>
<arg name='data' declared_type='void*' type='^v' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method ignore='true' variadic='true' suggestion='Call decodeValueOfObjCType:at: several times.' selector='decodeValuesOfObjCTypes:'>
<arg name='decodeValuesOfObjCTypes' declared_type='char*' type='*' const='true' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeArrayOfObjCType:count:at:'>
<arg name='type' declared_type='char*' type='*' const='true' index='0'/>
<arg name='count' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='array' declared_type='void*' type='^v' const='true' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeBool:forKey:'>
<arg name='boolv' declared_type='BOOL' type='B' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeBycopyObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeByrefObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeBytes:length:'>
<arg name='byteaddr' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg name='bytesp' declared_type='uint8_t*' type='*' const='true' index='0'/>
<arg name='lenv' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeConditionalObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg name='objv' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeDataObject:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg name='realv' declared_type='double' type='d' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg name='realv' declared_type='float' type='f' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg name='intv' declared_type='int32_t' type='i' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg name='intv' declared_type='int64_t' type='q' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeInt:forKey:'>
<arg name='intv' declared_type='int' type='i' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeInteger:forKey:'>
<arg name='intv' declared_type='NSInteger' type='i' type64='q' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeNXObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeObject:forKey:'>
<arg name='objv' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodePoint:'>
<arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodePoint:forKey:'>
<arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodePropertyList:'>
<arg name='aPropertyList' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRect:'>
<arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRect:forKey:'>
<arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRootObject:'>
<arg name='rootObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeSize:'>
<arg name='size' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeSize:forKey:'>
<arg name='size' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeValueOfObjCType:at:'>
<arg name='type' declared_type='char*' type='*' const='true' index='0'/>
<arg name='addr' declared_type='void*' type='^v' const='true' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method ignore='true' variadic='true' suggestion='Call encodeValueOfObjCType:at: several times.' selector='encodeValuesOfObjCTypes:'>
<arg name='encodeValuesOfObjCTypes' declared_type='char*' type='*' const='true' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectZone'>
<retval declared_type='NSZone*' type='^{_NSZone=}'/>
</method>
<method selector='setObjectZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='systemVersion'>
<retval declared_type='unsigned' type='I'/>
</method>
<method selector='versionForClassName:'>
<arg name='className' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSComparisonPredicate'>
<method selector='comparisonPredicateModifier'>
<retval declared_type='NSComparisonPredicateModifier' type='I' type64='Q'/>
</method>
<method selector='customSelector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='initWithLeftExpression:rightExpression:customSelector:'>
<arg name='lhs' declared_type='NSExpression*' type='@' index='0'/>
<arg name='rhs' declared_type='NSExpression*' type='@' index='1'/>
<arg name='selector' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLeftExpression:rightExpression:modifier:type:options:'>
<arg name='lhs' declared_type='NSExpression*' type='@' index='0'/>
<arg name='rhs' declared_type='NSExpression*' type='@' index='1'/>
<arg name='modifier' declared_type='NSComparisonPredicateModifier' type='I' type64='Q' index='2'/>
<arg name='type' declared_type='NSPredicateOperatorType' type='I' type64='Q' index='3'/>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='leftExpression'>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='predicateOperatorType'>
<retval declared_type='NSPredicateOperatorType' type='I' type64='Q'/>
</method>
<method class_method='true' selector='predicateWithLeftExpression:rightExpression:customSelector:'>
<arg name='lhs' declared_type='NSExpression*' type='@' index='0'/>
<arg name='rhs' declared_type='NSExpression*' type='@' index='1'/>
<arg name='selector' declared_type='SEL' type=':' index='2'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method class_method='true' selector='predicateWithLeftExpression:rightExpression:modifier:type:options:'>
<arg name='lhs' declared_type='NSExpression*' type='@' index='0'/>
<arg name='rhs' declared_type='NSExpression*' type='@' index='1'/>
<arg name='modifier' declared_type='NSComparisonPredicateModifier' type='I' type64='Q' index='2'/>
<arg name='type' declared_type='NSPredicateOperatorType' type='I' type64='Q' index='3'/>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q' index='4'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='rightExpression'>
<retval declared_type='NSExpression*' type='@'/>
</method>
</class>
<class name='NSCompoundPredicate'>
<method class_method='true' selector='andPredicateWithSubpredicates:'>
<arg name='subpredicates' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='compoundPredicateType'>
<retval declared_type='NSCompoundPredicateType' type='I' type64='Q'/>
</method>
<method selector='initWithType:subpredicates:'>
<arg name='type' declared_type='NSCompoundPredicateType' type='I' type64='Q' index='0'/>
<arg name='subpredicates' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='notPredicateWithSubpredicate:'>
<arg name='predicate' declared_type='NSPredicate*' type='@' index='0'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method class_method='true' selector='orPredicateWithSubpredicates:'>
<arg name='subpredicates' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='subpredicates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSCondition'>
<method selector='broadcast'>
<retval declared_type='void' type='v'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg name='n' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='signal'>
<retval declared_type='void' type='v'/>
</method>
<method selector='wait'>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitUntilDate:'>
<arg name='limit' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSConditionLock'>
<method selector='condition'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithCondition:'>
<arg name='condition' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lockBeforeDate:'>
<arg name='limit' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lockWhenCondition:'>
<arg name='condition' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockWhenCondition:beforeDate:'>
<arg name='condition' declared_type='NSInteger' type='i' type64='q' index='0'/>
<arg name='limit' declared_type='NSDate*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg name='n' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tryLock'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tryLockWhenCondition:'>
<arg name='condition' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unlockWithCondition:'>
<arg name='condition' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSConnection'>
<method selector='addRequestMode:'>
<arg name='rmode' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRunLoop:'>
<arg name='runloop' declared_type='NSRunLoop*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='allConnections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='connectionWithReceivePort:sendPort:'>
<arg name='receivePort' declared_type='NSPort*' type='@' index='0'/>
<arg name='sendPort' declared_type='NSPort*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='connectionWithRegisteredName:host:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='hostName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='connectionWithRegisteredName:host:usingNameServer:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='hostName' declared_type='NSString*' type='@' index='1'/>
<arg name='server' declared_type='NSPortNameServer*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentConversation'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='defaultConnection'>
<retval declared_type='NSConnection*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='enableMultipleThreads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='independentConversationQueueing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithReceivePort:sendPort:'>
<arg name='receivePort' declared_type='NSPort*' type='@' index='0'/>
<arg name='sendPort' declared_type='NSPort*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='multipleThreadsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='receivePort'>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='registerName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='registerName:withNameServer:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='server' declared_type='NSPortNameServer*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='remoteObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeRequestMode:'>
<arg name='rmode' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRunLoop:'>
<arg name='runloop' declared_type='NSRunLoop*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replyTimeout'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='requestModes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='requestTimeout'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rootProxy'>
<retval declared_type='NSDistantObject*' type='@'/>
</method>
<method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='hostName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSDistantObject*' type='@'/>
</method>
<method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:usingNameServer:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='hostName' declared_type='NSString*' type='@' index='1'/>
<arg name='server' declared_type='NSPortNameServer*' type='@' index='2'/>
<retval declared_type='NSDistantObject*' type='@'/>
</method>
<method selector='runInNewThread'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPort'>
<retval declared_type='NSPort*' type='@'/>
</method>
<method class_method='true' selector='serviceConnectionWithName:rootObject:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='root' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='serviceConnectionWithName:rootObject:usingNameServer:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='root' declared_type='id' type='@' index='1'/>
<arg name='server' declared_type='NSPortNameServer*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndependentConversationQueueing:'>
<arg name='yorn' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReplyTimeout:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestTimeout:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRootObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statistics'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSCountedSet'>
<method selector='addObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='countForObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithArray:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCapacity:'>
<arg name='numItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSet:'>
<arg name='set' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='removeObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCreateCommand'>
<method selector='createClassDescription'>
<retval declared_type='NSScriptClassDescription*' type='@'/>
</method>
<method selector='resolvedKeyDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSData'>
<method selector='bytes'>
<retval declared_type='void*' type='^v' const='true'/>
</method>
<method class_method='true' selector='data'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithBytes:length:'>
<arg name='bytes' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithBytesNoCopy:length:'>
<arg name='bytes' declared_type='void*' type='^v' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method ignore='true' class_method='true' suggestion='Call dataWithBytes:length:.' selector='dataWithBytesNoCopy:length:freeWhenDone:'>
<arg name='bytes' declared_type='void*' type='^v' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='b' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithContentsOfFile:options:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='readOptionsMask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='errorPtr' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithContentsOfMappedFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithContentsOfURL:options:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='readOptionsMask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='errorPtr' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getBytes:'>
<arg name='buffer' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBytes:length:'>
<arg name='buffer' declared_type='void*' type='^v' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBytes:range:'>
<arg name='buffer' declared_type='void*' type='^v' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBytes:length:'>
<arg name='bytes' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBytesNoCopy:length:'>
<arg name='bytes' declared_type='void*' type='^v' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method ignore='true' suggestion='Call initWithBytes:length:.' selector='initWithBytesNoCopy:length:freeWhenDone:'>
<arg name='bytes' declared_type='void*' type='^v' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='b' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfFile:options:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='readOptionsMask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='errorPtr' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfMappedFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='readOptionsMask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='errorPtr' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToData:'>
<arg name='other' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='length'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='subdataWithRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='writeToFile:atomically:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='useAuxiliaryFile' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToFile:options:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='writeOptionsMask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='errorPtr' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='atomically' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:options:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='writeOptionsMask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='errorPtr' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSDate'>
<method selector='addTimeInterval:'>
<arg name='seconds' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='compare:'>
<arg name='other' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method class_method='true' selector='date'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dateWithCalendarFormat:timeZone:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<arg name='aTimeZone' declared_type='NSTimeZone*' type='@' index='1'/>
<retval declared_type='NSCalendarDate*' type='@'/>
</method>
<method class_method='true' selector='dateWithNaturalLanguageString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dateWithNaturalLanguageString:locale:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='locale' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dateWithString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSince1970:'>
<arg name='secs' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSinceNow:'>
<arg name='secs' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSinceReferenceDate:'>
<arg name='secs' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithCalendarFormat:timeZone:locale:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<arg name='aTimeZone' declared_type='NSTimeZone*' type='@' index='1'/>
<arg name='locale' declared_type='id' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='distantFuture'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='distantPast'>
<retval declared_type='id' type='@'/>
</method>
<method selector='earlierDate:'>
<arg name='anotherDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:'>
<arg name='description' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTimeInterval:sinceDate:'>
<arg name='secsToBeAdded' declared_type='NSTimeInterval' type='d' index='0'/>
<arg name='anotherDate' declared_type='NSDate*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTimeIntervalSinceNow:'>
<arg name='secsToBeAddedToNow' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTimeIntervalSinceReferenceDate:'>
<arg name='secsToBeAdded' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToDate:'>
<arg name='otherDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='laterDate:'>
<arg name='anotherDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='timeIntervalSince1970'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='timeIntervalSinceDate:'>
<arg name='anotherDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='timeIntervalSinceNow'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='timeIntervalSinceReferenceDate'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='timeIntervalSinceReferenceDate'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='NSDateComponents'>
<method selector='day'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='era'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='hour'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='minute'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='month'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='second'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setDay:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEra:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHour:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinute:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonth:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecond:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeek:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeekday:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeekdayOrdinal:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYear:'>
<arg name='v' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='week'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekday'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekdayOrdinal'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='year'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSDateFormatter'>
<method selector='AMSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='PMSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='allowsNaturalLanguage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='calendar'>
<retval declared_type='NSCalendar*' type='@'/>
</method>
<method selector='dateFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateStyle'>
<retval declared_type='NSDateFormatterStyle' type='I' type64='Q'/>
</method>
<method selector='defaultDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='defaultFormatterBehavior'>
<retval declared_type='NSDateFormatterBehavior' type='I' type64='Q'/>
</method>
<method selector='eraSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='formatterBehavior'>
<retval declared_type='NSDateFormatterBehavior' type='I' type64='Q'/>
</method>
<method selector='generatesCalendarDates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg name='obj' declared_type='id*' type='^@' index='0'/>
<arg name='string' declared_type='NSString*' type='@' index='1'/>
<arg name='rangep' declared_type='inout NSRange*' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='2'/>
<arg name='error' declared_type='NSError**' type='^@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gregorianStartDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateFormat:allowNaturalLanguage:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<arg name='flag' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLenient'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='longEraSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='monthSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='quarterSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setAMSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCalendar:'>
<arg name='calendar' declared_type='NSCalendar*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateFormat:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateStyle:'>
<arg name='style' declared_type='NSDateFormatterStyle' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultDate:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultFormatterBehavior:'>
<arg name='behavior' declared_type='NSDateFormatterBehavior' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEraSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormatterBehavior:'>
<arg name='behavior' declared_type='NSDateFormatterBehavior' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGeneratesCalendarDates:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGregorianStartDate:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLenient:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg name='locale' declared_type='NSLocale*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongEraSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonthSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPMSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuarterSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShortMonthSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShortQuarterSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShortStandaloneMonthSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShortStandaloneQuarterSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShortStandaloneWeekdaySymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShortWeekdaySymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandaloneMonthSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandaloneQuarterSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandaloneWeekdaySymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeStyle:'>
<arg name='style' declared_type='NSDateFormatterStyle' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg name='tz' declared_type='NSTimeZone*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTwoDigitStartDate:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVeryShortMonthSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVeryShortStandaloneMonthSymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVeryShortStandaloneWeekdaySymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVeryShortWeekdaySymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeekdaySymbols:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shortMonthSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='shortQuarterSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='shortStandaloneMonthSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='shortStandaloneQuarterSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='shortStandaloneWeekdaySymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='shortWeekdaySymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='standaloneMonthSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='standaloneQuarterSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='standaloneWeekdaySymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeStyle'>
<retval declared_type='NSDateFormatterStyle' type='I' type64='Q'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='twoDigitStartDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='veryShortMonthSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='veryShortStandaloneMonthSymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='veryShortStandaloneWeekdaySymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='veryShortWeekdaySymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='weekdaySymbols'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSDecimalNumber'>
<method selector='compare:'>
<arg name='decimalNumber' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='decimalNumberByAdding:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByAdding:withBehavior:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='1'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByDividingBy:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByDividingBy:withBehavior:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='1'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByMultiplyingBy:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByMultiplyingBy:withBehavior:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='1'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:'>
<arg name='power' declared_type='short' type='s' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:withBehavior:'>
<arg name='power' declared_type='short' type='s' index='0'/>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='1'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByRaisingToPower:'>
<arg name='power' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByRaisingToPower:withBehavior:'>
<arg name='power' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='1'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberByRoundingAccordingToBehavior:'>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberBySubtracting:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalNumberBySubtracting:withBehavior:'>
<arg name='decimalNumber' declared_type='NSDecimalNumber*' type='@' index='0'/>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='1'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method class_method='true' selector='decimalNumberWithDecimal:'>
<arg name='dcm' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method class_method='true' selector='decimalNumberWithMantissa:exponent:isNegative:'>
<arg name='mantissa' declared_type='unsigned long long' type='Q' index='0'/>
<arg name='exponent' declared_type='short' type='s' index='1'/>
<arg name='flag' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method class_method='true' selector='decimalNumberWithString:'>
<arg name='numberValue' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method class_method='true' selector='decimalNumberWithString:locale:'>
<arg name='numberValue' declared_type='NSString*' type='@' index='0'/>
<arg name='locale' declared_type='id' type='@' index='1'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='decimalValue'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method class_method='true' selector='defaultBehavior'>
<retval declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@'/>
</method>
<method selector='descriptionWithLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='initWithDecimal:'>
<arg name='dcm' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMantissa:exponent:isNegative:'>
<arg name='mantissa' declared_type='unsigned long long' type='Q' index='0'/>
<arg name='exponent' declared_type='short' type='s' index='1'/>
<arg name='flag' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:'>
<arg name='numberValue' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:locale:'>
<arg name='numberValue' declared_type='NSString*' type='@' index='0'/>
<arg name='locale' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='maximumDecimalNumber'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method class_method='true' selector='minimumDecimalNumber'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method class_method='true' selector='notANumber'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='objCType'>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method class_method='true' selector='one'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method class_method='true' selector='setDefaultBehavior:'>
<arg name='behavior' declared_type='id &lt;NSDecimalNumberBehaviors&gt;' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='zero'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
</class>
<class name='NSDecimalNumberHandler'>
<method class_method='true' selector='decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q' index='0'/>
<arg name='scale' declared_type='short' type='s' index='1'/>
<arg name='exact' declared_type='BOOL' type='B' index='2'/>
<arg name='overflow' declared_type='BOOL' type='B' index='3'/>
<arg name='underflow' declared_type='BOOL' type='B' index='4'/>
<arg name='divideByZero' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='defaultDecimalNumberHandler'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg name='roundingMode' declared_type='NSRoundingMode' type='I' type64='Q' index='0'/>
<arg name='scale' declared_type='short' type='s' index='1'/>
<arg name='exact' declared_type='BOOL' type='B' index='2'/>
<arg name='overflow' declared_type='BOOL' type='B' index='3'/>
<arg name='underflow' declared_type='BOOL' type='B' index='4'/>
<arg name='divideByZero' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSDeleteCommand'>
<method selector='keySpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg name='receiversRef' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='allKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='allKeysForObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='allValues'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionInStringsFileFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<arg name='level' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='dictionary'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryWithDictionary:'>
<arg name='dict' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryWithObject:forKey:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryWithObjects:forKeys:'>
<arg name='objects' declared_type='NSArray*' type='@' index='0'/>
<arg name='keys' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryWithObjects:forKeys:count:'>
<arg name='objects' declared_type='id*' type='^@' index='0'/>
<arg name='keys' declared_type='id*' type='^@' index='1'/>
<arg name='cnt' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' variadic='true' selector='dictionaryWithObjectsAndKeys:'>
<arg name='dictionaryWithObjectsAndKeys' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='fileCreationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='fileExtensionHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileGroupOwnerAccountID'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='fileGroupOwnerAccountName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileHFSCreatorCode'>
<retval declared_type='OSType' type='L' type64='I'/>
</method>
<method selector='fileHFSTypeCode'>
<retval declared_type='OSType' type='L' type64='I'/>
</method>
<method selector='fileIsAppendOnly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileIsImmutable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileModificationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='fileOwnerAccountID'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='fileOwnerAccountName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filePosixPermissions'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='fileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='fileSystemFileNumber'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='fileSystemNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='fileType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getObjects:andKeys:'>
<arg name='objects' declared_type='id*' type='^@' index='0'/>
<arg name='keys' declared_type='id*' type='^@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg name='otherDictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:copyItems:'>
<arg name='otherDictionary' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='flag' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithObjects:forKeys:'>
<arg name='objects' declared_type='NSArray*' type='@' index='0'/>
<arg name='keys' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithObjects:forKeys:count:'>
<arg name='objects' declared_type='id*' type='^@' index='0'/>
<arg name='keys' declared_type='id*' type='^@' index='1'/>
<arg name='cnt' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='initWithObjectsAndKeys:'>
<arg name='initWithObjectsAndKeys' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToDictionary:'>
<arg name='otherDictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='keysSortedByValueUsingSelector:'>
<arg name='comparator' declared_type='SEL' type=':' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg name='aKey' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectsForKeys:notFoundMarker:'>
<arg name='keys' declared_type='NSArray*' type='@' index='0'/>
<arg name='marker' declared_type='id' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='valueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='writeToFile:atomically:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='useAuxiliaryFile' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='atomically' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSDirectoryEnumerator'>
<method selector='directoryAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='skipDescendents'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDistantObject'>
<method selector='connectionForProxy'>
<retval declared_type='NSConnection*' type='@'/>
</method>
<method selector='initWithLocal:connection:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='connection' declared_type='NSConnection*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:connection:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='connection' declared_type='NSConnection*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='proxyWithLocal:connection:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='connection' declared_type='NSConnection*' type='@' index='1'/>
<retval declared_type='NSDistantObject*' type='@'/>
</method>
<method class_method='true' selector='proxyWithTarget:connection:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='connection' declared_type='NSConnection*' type='@' index='1'/>
<retval declared_type='NSDistantObject*' type='@'/>
</method>
<method selector='setProtocolForProxy:'>
<arg name='proto' declared_type='Protocol*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDistantObjectRequest'>
<method selector='connection'>
<retval declared_type='NSConnection*' type='@'/>
</method>
<method selector='conversation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='invocation'>
<retval declared_type='NSInvocation*' type='@'/>
</method>
<method selector='replyWithException:'>
<arg name='exception' declared_type='NSException*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDistributedLock'>
<method selector='breakLock'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lockDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='lockWithPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDistributedLock*' type='@'/>
</method>
<method selector='tryLock'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unlock'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDistributedNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg name='observer' declared_type='id' type='@' index='0'/>
<arg name='aSelector' declared_type='SEL' type=':' index='1'/>
<arg name='aName' declared_type='NSString*' type='@' index='2'/>
<arg name='anObject' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObserver:selector:name:object:suspensionBehavior:'>
<arg name='observer' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<arg name='name' declared_type='NSString*' type='@' index='2'/>
<arg name='object' declared_type='NSString*' type='@' index='3'/>
<arg name='suspensionBehavior' declared_type='NSNotificationSuspensionBehavior' type='I' type64='Q' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultCenter'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='notificationCenterForType:'>
<arg name='notificationCenterType' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDistributedNotificationCenter*' type='@'/>
</method>
<method selector='postNotificationName:object:'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='anObject' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postNotificationName:object:userInfo:'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='anObject' declared_type='NSString*' type='@' index='1'/>
<arg name='aUserInfo' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postNotificationName:object:userInfo:deliverImmediately:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='object' declared_type='NSString*' type='@' index='1'/>
<arg name='userInfo' declared_type='NSDictionary*' type='@' index='2'/>
<arg name='deliverImmediately' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postNotificationName:object:userInfo:options:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='object' declared_type='NSString*' type='@' index='1'/>
<arg name='userInfo' declared_type='NSDictionary*' type='@' index='2'/>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObserver:name:object:'>
<arg name='observer' declared_type='id' type='@' index='0'/>
<arg name='aName' declared_type='NSString*' type='@' index='1'/>
<arg name='anObject' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuspended:'>
<arg name='suspended' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='suspended'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSEnumerator'>
<method selector='allObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='nextObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSError'>
<method selector='code'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='domain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='errorWithDomain:code:userInfo:'>
<arg name='domain' declared_type='NSString*' type='@' index='0'/>
<arg name='code' declared_type='NSInteger' type='i' type64='q' index='1'/>
<arg name='dict' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDomain:code:userInfo:'>
<arg name='domain' declared_type='NSString*' type='@' index='0'/>
<arg name='code' declared_type='NSInteger' type='i' type64='q' index='1'/>
<arg name='dict' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='localizedFailureReason'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='localizedRecoveryOptions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='localizedRecoverySuggestion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='recoveryAttempter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSException'>
<method selector='callStackReturnAddresses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='exceptionWithName:reason:userInfo:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='reason' declared_type='NSString*' type='@' index='1'/>
<arg name='userInfo' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='NSException*' type='@'/>
</method>
<method selector='initWithName:reason:userInfo:'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='aReason' declared_type='NSString*' type='@' index='1'/>
<arg name='aUserInfo' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='raise'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' variadic='true' selector='raise:format:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='raise:format:arguments:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='format' declared_type='NSString*' type='@' index='1'/>
<arg name='argList' declared_type='va_list' type='*' type64='[1{?=II^v^v}]' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reason'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSExpression'>
<method selector='arguments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='collection'>
<retval declared_type='id' type='@'/>
</method>
<method selector='constantValue'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='expressionForAggregate:'>
<arg name='subexpressions' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForConstantValue:'>
<arg name='obj' declared_type='id' type='@' index='0'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForEvaluatedObject'>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForFunction:arguments:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForFunction:selectorName:arguments:'>
<arg name='target' declared_type='NSExpression*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='parameters' declared_type='NSArray*' type='@' index='2'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForIntersectSet:with:'>
<arg name='left' declared_type='NSExpression*' type='@' index='0'/>
<arg name='right' declared_type='NSExpression*' type='@' index='1'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForMinusSet:with:'>
<arg name='left' declared_type='NSExpression*' type='@' index='0'/>
<arg name='right' declared_type='NSExpression*' type='@' index='1'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForSubquery:usingIteratorVariable:predicate:'>
<arg name='expression' declared_type='NSExpression*' type='@' index='0'/>
<arg name='variable' declared_type='NSString*' type='@' index='1'/>
<arg name='predicate' declared_type='id' type='@' index='2'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForUnionSet:with:'>
<arg name='left' declared_type='NSExpression*' type='@' index='0'/>
<arg name='right' declared_type='NSExpression*' type='@' index='1'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method class_method='true' selector='expressionForVariable:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method selector='expressionType'>
<retval declared_type='NSExpressionType' type='I' type64='Q'/>
</method>
<method selector='expressionValueWithObject:context:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<arg name='context' declared_type='NSMutableDictionary*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='function'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithExpressionType:'>
<arg name='type' declared_type='NSExpressionType' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='leftExpression'>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method selector='operand'>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method selector='predicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='rightExpression'>
<retval declared_type='NSExpression*' type='@'/>
</method>
<method selector='variable'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSFileHandle'>
<method selector='acceptConnectionInBackgroundAndNotify'>
<retval declared_type='void' type='v'/>
</method>
<method selector='acceptConnectionInBackgroundAndNotifyForModes:'>
<arg name='modes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='availableData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='closeFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fileDescriptor'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='fileHandleForReadingAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fileHandleForUpdatingAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fileHandleForWritingAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fileHandleWithNullDevice'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fileHandleWithStandardError'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fileHandleWithStandardInput'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fileHandleWithStandardOutput'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFileDescriptor:'>
<arg name='fd' declared_type='int' type='i' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFileDescriptor:closeOnDealloc:'>
<arg name='fd' declared_type='int' type='i' index='0'/>
<arg name='closeopt' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='offsetInFile'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='readDataOfLength:'>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='readDataToEndOfFile'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='readInBackgroundAndNotify'>
<retval declared_type='void' type='v'/>
</method>
<method selector='readInBackgroundAndNotifyForModes:'>
<arg name='modes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotify'>
<retval declared_type='void' type='v'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotifyForModes:'>
<arg name='modes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToEndOfFile'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='seekToFileOffset:'>
<arg name='offset' declared_type='unsigned long long' type='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='synchronizeFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='truncateFileAtOffset:'>
<arg name='offset' declared_type='unsigned long long' type='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitForDataInBackgroundAndNotify'>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitForDataInBackgroundAndNotifyForModes:'>
<arg name='modes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFileManager'>
<method selector='attributesOfFileSystemForPath:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='attributesOfItemAtPath:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='changeCurrentDirectoryPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='changeFileAttributes:atPath:'>
<arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='componentsToDisplayForPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='contentsAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='contentsEqualAtPath:andPath:'>
<arg name='path1' declared_type='NSString*' type='@' index='0'/>
<arg name='path2' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentsOfDirectoryAtPath:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='copyItemAtPath:toPath:error:'>
<arg name='srcPath' declared_type='NSString*' type='@' index='0'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='copyPath:toPath:handler:'>
<arg name='src' declared_type='NSString*' type='@' index='0'/>
<arg name='dest' declared_type='NSString*' type='@' index='1'/>
<arg name='handler' declared_type='id' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createDirectoryAtPath:attributes:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='attributes' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createDirectoryAtPath:withIntermediateDirectories:attributes:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='createIntermediates' declared_type='BOOL' type='B' index='1'/>
<arg name='attributes' declared_type='NSDictionary*' type='@' index='2'/>
<arg name='error' declared_type='NSError**' type='^@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createFileAtPath:contents:attributes:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<arg name='attr' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createSymbolicLinkAtPath:pathContent:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='otherpath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createSymbolicLinkAtPath:withDestinationPath:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='destPath' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentDirectoryPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='defaultManager'>
<retval declared_type='NSFileManager*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='destinationOfSymbolicLinkAtPath:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='directoryContentsAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='displayNameAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='enumeratorAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDirectoryEnumerator*' type='@'/>
</method>
<method selector='fileAttributesAtPath:traverseLink:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='yorn' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileExistsAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileExistsAtPath:isDirectory:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='isDirectory' declared_type='BOOL*' type='^B' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileSystemAttributesAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileSystemRepresentationWithPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='isDeletableFileAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExecutableFileAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReadableFileAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isWritableFileAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='linkItemAtPath:toPath:error:'>
<arg name='srcPath' declared_type='NSString*' type='@' index='0'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='linkPath:toPath:handler:'>
<arg name='src' declared_type='NSString*' type='@' index='0'/>
<arg name='dest' declared_type='NSString*' type='@' index='1'/>
<arg name='handler' declared_type='id' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='moveItemAtPath:toPath:error:'>
<arg name='srcPath' declared_type='NSString*' type='@' index='0'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='movePath:toPath:handler:'>
<arg name='src' declared_type='NSString*' type='@' index='0'/>
<arg name='dest' declared_type='NSString*' type='@' index='1'/>
<arg name='handler' declared_type='id' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathContentOfSymbolicLinkAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeFileAtPath:handler:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='handler' declared_type='id' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeItemAtPath:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAttributes:ofItemAtPath:error:'>
<arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringWithFileSystemRepresentation:length:'>
<arg name='str' declared_type='char*' type='*' const='true' index='0'/>
<arg name='len' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subpathsAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='subpathsOfDirectoryAtPath:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFormatter'>
<method selector='attributedStringForObjectValue:withDefaultAttributes:'>
<arg name='obj' declared_type='id' type='@' index='0'/>
<arg name='attrs' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='editingStringForObjectValue:'>
<arg name='obj' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getObjectValue:forString:errorDescription:'>
<arg name='obj' declared_type='id*' type='^@' index='0'/>
<arg name='string' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSString**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPartialStringValid:newEditingString:errorDescription:'>
<arg name='partialString' declared_type='NSString*' type='@' index='0'/>
<arg name='newString' declared_type='NSString**' type='^@' index='1'/>
<arg name='error' declared_type='NSString**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'>
<arg name='partialStringPtr' declared_type='NSString**' type='^@' index='0'/>
<arg name='proposedSelRangePtr' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='1'/>
<arg name='origString' declared_type='NSString*' type='@' index='2'/>
<arg name='origSelRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='3'/>
<arg name='error' declared_type='NSString**' type='^@' index='4'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stringForObjectValue:'>
<arg name='obj' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSGarbageCollector'>
<method selector='collectExhaustively'>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultCollector'>
<retval declared_type='id' type='@'/>
</method>
<method selector='disable'>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableCollectorForPointer:'>
<arg name='ptr' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enable'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableCollectorForPointer:'>
<arg name='ptr' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isCollecting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='zone'>
<retval declared_type='NSZone*' type='^{_NSZone=}'/>
</method>
</class>
<class name='NSHTTPCookie'>
<method selector='comment'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='commentURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method class_method='true' selector='cookieWithProperties:'>
<arg name='properties' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='cookiesWithResponseHeaderFields:forURL:'>
<arg name='headerFields' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='URL' declared_type='NSURL*' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='domain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='expiresDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='initWithProperties:'>
<arg name='properties' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSecure'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSessionOnly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='portList'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='properties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='requestHeaderFieldsWithCookies:'>
<arg name='cookies' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='version'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='NSHTTPCookieStorage'>
<method selector='cookieAcceptPolicy'>
<retval declared_type='NSHTTPCookieAcceptPolicy' type='I' type64='Q'/>
</method>
<method selector='cookies'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cookiesForURL:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='deleteCookie:'>
<arg name='cookie' declared_type='NSHTTPCookie*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCookie:'>
<arg name='cookie' declared_type='NSHTTPCookie*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCookieAcceptPolicy:'>
<arg name='cookieAcceptPolicy' declared_type='NSHTTPCookieAcceptPolicy' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCookies:forURL:mainDocumentURL:'>
<arg name='cookies' declared_type='NSArray*' type='@' index='0'/>
<arg name='URL' declared_type='NSURL*' type='@' index='1'/>
<arg name='mainDocumentURL' declared_type='NSURL*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedHTTPCookieStorage'>
<retval declared_type='NSHTTPCookieStorage*' type='@'/>
</method>
</class>
<class name='NSHTTPURLResponse'>
<method selector='allHeaderFields'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='localizedStringForStatusCode:'>
<arg name='statusCode' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='statusCode'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSHashTable'>
<method selector='addObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='anyObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='containsObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='hashTableWithOptions:'>
<arg name='options' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='hashTableWithWeakObjects'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithOptions:capacity:'>
<arg name='options' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<arg name='initialCapacity' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPointerFunctions:capacity:'>
<arg name='functions' declared_type='NSPointerFunctions*' type='@' index='0'/>
<arg name='initialCapacity' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intersectHashTable:'>
<arg name='other' declared_type='NSHashTable*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intersectsHashTable:'>
<arg name='other' declared_type='NSHashTable*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToHashTable:'>
<arg name='other' declared_type='NSHashTable*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSubsetOfHashTable:'>
<arg name='other' declared_type='NSHashTable*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='member:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='minusHashTable:'>
<arg name='other' declared_type='NSHashTable*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='pointerFunctions'>
<retval declared_type='NSPointerFunctions*' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentation'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='unionHashTable:'>
<arg name='other' declared_type='NSHashTable*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSHost'>
<method selector='address'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addresses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='currentHost'>
<retval declared_type='NSHost*' type='@'/>
</method>
<method class_method='true' selector='flushHostCache'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='hostWithAddress:'>
<arg name='address' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSHost*' type='@'/>
</method>
<method class_method='true' selector='hostWithName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSHost*' type='@'/>
</method>
<method selector='isEqualToHost:'>
<arg name='aHost' declared_type='NSHost*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isHostCacheEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='names'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='setHostCacheEnabled:'>
<arg name='flag' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSIndexPath'>
<method selector='compare:'>
<arg name='otherObject' declared_type='NSIndexPath*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='getIndexes:'>
<arg name='indexes' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexAtPosition:'>
<arg name='position' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexPathByAddingIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSIndexPath*' type='@'/>
</method>
<method selector='indexPathByRemovingLastIndex'>
<retval declared_type='NSIndexPath*' type='@'/>
</method>
<method class_method='true' selector='indexPathWithIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='indexPathWithIndexes:length:'>
<arg name='indexes' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithIndexes:length:'>
<arg name='indexes' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='length'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='NSIndexSet'>
<method selector='containsIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsIndexes:'>
<arg name='indexSet' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsIndexesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countOfIndexesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='firstIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getIndexes:maxCount:inIndexRange:'>
<arg name='indexBuffer' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<arg name='bufferSize' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='range' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='2'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexGreaterThanIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexGreaterThanOrEqualToIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexLessThanIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexLessThanOrEqualToIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='indexSet'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='indexSetWithIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='indexSetWithIndexesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithIndexSet:'>
<arg name='indexSet' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithIndexesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intersectsIndexesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToIndexSet:'>
<arg name='indexSet' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='NSIndexSpecifier'>
<method selector='index'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:index:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<arg name='property' declared_type='NSString*' type='@' index='2'/>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setIndex:'>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSInputStream'>
<method ignore='true' selector='getBuffer:length:'>
<arg name='buffer' declared_type='uint8_t**' type='^*' index='0'/>
<arg name='len' declared_type='NSUInteger*' type='^I' type64='^Q' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasBytesAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFileAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='inputStreamWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='inputStreamWithFileAtPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:maxLength:'>
<arg name='buffer' declared_type='uint8_t*' type='*' index='0'/>
<arg name='len' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSInvocation'>
<method selector='argumentsRetained'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getArgument:atIndex:'>
<arg name='argumentLocation' declared_type='void*' type='^v' index='0'/>
<arg name='idx' declared_type='NSInteger' type='i' type64='q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getReturnValue:'>
<arg name='retLoc' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='invocationWithMethodSignature:'>
<arg name='sig' declared_type='NSMethodSignature*' type='@' index='0'/>
<retval declared_type='NSInvocation*' type='@'/>
</method>
<method selector='invoke'>
<retval declared_type='void' type='v'/>
</method>
<method selector='invokeWithTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='methodSignature'>
<retval declared_type='NSMethodSignature*' type='@'/>
</method>
<method selector='retainArguments'>
<retval declared_type='void' type='v'/>
</method>
<method selector='selector'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='setArgument:atIndex:'>
<arg name='argumentLocation' declared_type='void*' type='^v' index='0'/>
<arg name='idx' declared_type='NSInteger' type='i' type64='q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReturnValue:'>
<arg name='retLoc' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelector:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSInvocationOperation'>
<method selector='initWithInvocation:'>
<arg name='inv' declared_type='NSInvocation*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='sel' declared_type='SEL' type=':' index='1'/>
<arg name='arg' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invocation'>
<retval declared_type='NSInvocation*' type='@'/>
</method>
<method selector='result'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSKeyedArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<arg name='rootObject' declared_type='id' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='archivedDataWithRootObject:'>
<arg name='rootObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='classNameForClass:'>
<arg name='cls' declared_type='Class' type='#' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='classNameForClass:'>
<arg name='cls' declared_type='Class' type='#' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='encodeBool:forKey:'>
<arg name='boolv' declared_type='BOOL' type='B' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg name='bytesp' declared_type='uint8_t*' type='*' const='true' index='0'/>
<arg name='lenv' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg name='objv' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg name='realv' declared_type='double' type='d' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg name='realv' declared_type='float' type='f' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg name='intv' declared_type='int32_t' type='i' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg name='intv' declared_type='int64_t' type='q' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeInt:forKey:'>
<arg name='intv' declared_type='int' type='i' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeObject:forKey:'>
<arg name='objv' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishEncoding'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initForWritingWithMutableData:'>
<arg name='data' declared_type='NSMutableData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='outputFormat'>
<retval declared_type='NSPropertyListFormat' type='I' type64='Q'/>
</method>
<method class_method='true' selector='setClassName:forClass:'>
<arg name='codedName' declared_type='NSString*' type='@' index='0'/>
<arg name='cls' declared_type='Class' type='#' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClassName:forClass:'>
<arg name='codedName' declared_type='NSString*' type='@' index='0'/>
<arg name='cls' declared_type='Class' type='#' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputFormat:'>
<arg name='format' declared_type='NSPropertyListFormat' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSKeyedUnarchiver'>
<method selector='classForClassName:'>
<arg name='codedName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='classForClassName:'>
<arg name='codedName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='containsValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='decodeBoolForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='lengthp' declared_type='NSUInteger*' type='^I' type64='^Q' index='1'/>
<retval declared_type='uint8_t*' type='*' const='true'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='decodeFloatForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='decodeIntForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='decodeObjectForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='finishDecoding'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initForReadingWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setClass:forClassName:'>
<arg name='cls' declared_type='Class' type='#' index='0'/>
<arg name='codedName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setClass:forClassName:'>
<arg name='cls' declared_type='Class' type='#' index='0'/>
<arg name='codedName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='unarchiveObjectWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='unarchiveObjectWithFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSLocale'>
<method class_method='true' selector='ISOCountryCodes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='ISOCurrencyCodes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='ISOLanguageCodes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='autoupdatingCurrentLocale'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='availableLocaleIdentifiers'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='canonicalLocaleIdentifierFromString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='commonISOCurrencyCodes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='componentsFromLocaleIdentifier:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='currentLocale'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displayNameForKey:value:'>
<arg name='key' declared_type='id' type='@' index='0'/>
<arg name='value' declared_type='id' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithLocaleIdentifier:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='localeIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='localeIdentifierFromComponents:'>
<arg name='dict' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg name='key' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='preferredLanguages'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='systemLocale'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSLock'>
<method selector='lockBeforeDate:'>
<arg name='limit' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg name='n' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tryLock'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSLogicalTest'>
<method selector='initAndTestWithTests:'>
<arg name='subTests' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initNotTestWithTest:'>
<arg name='subTest' declared_type='NSScriptWhoseTest*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initOrTestWithTests:'>
<arg name='subTests' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSMachBootstrapServer'>
<method selector='portForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='portForName:host:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='host' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='registerPort:name:'>
<arg name='port' declared_type='NSPort*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='servicePortWithName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSMachPort'>
<method selector='initWithMachPort:'>
<arg name='machPort' declared_type='uint32_t' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMachPort:options:'>
<arg name='machPort' declared_type='uint32_t' type='I' index='0'/>
<arg name='f' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='machPort'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method class_method='true' selector='portWithMachPort:'>
<arg name='machPort' declared_type='uint32_t' type='I' index='0'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method class_method='true' selector='portWithMachPort:options:'>
<arg name='machPort' declared_type='uint32_t' type='I' index='0'/>
<arg name='f' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg name='runLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg name='runLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMapTable'>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithKeyOptions:valueOptions:capacity:'>
<arg name='keyOptions' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<arg name='valueOptions' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='1'/>
<arg name='initialCapacity' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithKeyPointerFunctions:valuePointerFunctions:capacity:'>
<arg name='keyFunctions' declared_type='NSPointerFunctions*' type='@' index='0'/>
<arg name='valueFunctions' declared_type='NSPointerFunctions*' type='@' index='1'/>
<arg name='initialCapacity' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='keyPointerFunctions'>
<retval declared_type='NSPointerFunctions*' type='@'/>
</method>
<method class_method='true' selector='mapTableWithKeyOptions:valueOptions:'>
<arg name='keyOptions' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<arg name='valueOptions' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mapTableWithStrongToStrongObjects'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mapTableWithStrongToWeakObjects'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mapTableWithWeakToStrongObjects'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mapTableWithWeakToWeakObjects'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg name='aKey' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg name='aKey' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKey:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<arg name='aKey' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valuePointerFunctions'>
<retval declared_type='NSPointerFunctions*' type='@'/>
</method>
</class>
<class name='NSMessagePortNameServer'>
<method selector='portForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='portForName:host:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='host' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSMetadataItem'>
<method selector='attributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='valueForAttribute:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valuesForAttributes:'>
<arg name='keys' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSMetadataQuery'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='disableUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='groupedResults'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='groupingAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexOfResult:'>
<arg name='result' declared_type='id' type='@' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isGathering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isStarted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isStopped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notificationBatchingInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='predicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='resultAtIndex:'>
<arg name='idx' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='resultCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='results'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='searchScopes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupingAttributes:'>
<arg name='attrs' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotificationBatchingInterval:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchScopes:'>
<arg name='scopes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg name='descriptors' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueListAttributes:'>
<arg name='attrs' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='startQuery'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopQuery'>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueListAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='valueLists'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='valueOfAttribute:forResultAtIndex:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<arg name='idx' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSMetadataQueryAttributeValueTuple'>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSMetadataQueryResultGroup'>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='resultAtIndex:'>
<arg name='idx' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='resultCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='results'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='subgroups'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSMethodSignature'>
<method selector='frameLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getArgumentTypeAtIndex:'>
<arg name='idx' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='isOneway'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='methodReturnLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='methodReturnType'>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='numberOfArguments'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='signatureWithObjCTypes:'>
<arg name='types' declared_type='char*' type='*' const='true' index='0'/>
<retval declared_type='NSMethodSignature*' type='@'/>
</method>
</class>
<class name='NSMoveCommand'>
<method selector='keySpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg name='receiversRef' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableArray'>
<method selector='addObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='arrayWithCapacity:'>
<arg name='numItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg name='idx1' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='idx2' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='filterUsingPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCapacity:'>
<arg name='numItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertObject:atIndex:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertObjects:atIndexes:'>
<arg name='objects' declared_type='NSArray*' type='@' index='0'/>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLastObject'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:inRange:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectIdenticalTo:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectIdenticalTo:inRange:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsAtIndexes:'>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsFromIndices:numIndices:'>
<arg name='indices' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<arg name='cnt' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='anObject' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectsAtIndexes:withObjects:'>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='0'/>
<arg name='objects' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='otherArray' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:range:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='otherArray' declared_type='NSArray*' type='@' index='1'/>
<arg name='otherRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArray:'>
<arg name='otherArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingDescriptors:'>
<arg name='sortDescriptors' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg name='compare' function_pointer='true' declared_type='NSInteger *id, id, void*' type='^?' index='0' type_modifier='n'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</arg>
<arg name='context' declared_type='void*' type='^v' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingSelector:'>
<arg name='comparator' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='addAttribute:value:range:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='value' declared_type='id' type='@' index='1'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributes:range:'>
<arg name='attrs' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendAttributedString:'>
<arg name='attrString' declared_type='NSAttributedString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertAttributedString:atIndex:'>
<arg name='attrString' declared_type='NSAttributedString*' type='@' index='0'/>
<arg name='loc' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mutableString'>
<retval declared_type='NSMutableString*' type='@'/>
</method>
<method selector='removeAttribute:range:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceCharactersInRange:withAttributedString:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='attrString' declared_type='NSAttributedString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='str' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedString:'>
<arg name='attrString' declared_type='NSAttributedString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributes:range:'>
<arg name='attrs' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableCharacterSet'>
<method selector='addCharactersInRange:'>
<arg name='aRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCharactersInString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='formIntersectionWithCharacterSet:'>
<arg name='otherSet' declared_type='NSCharacterSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='formUnionWithCharacterSet:'>
<arg name='otherSet' declared_type='NSCharacterSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCharactersInRange:'>
<arg name='aRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCharactersInString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableData'>
<method selector='appendBytes:length:'>
<arg name='bytes' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendData:'>
<arg name='other' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dataWithCapacity:'>
<arg name='aNumItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dataWithLength:'>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='increaseLengthBy:'>
<arg name='extraLength' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCapacity:'>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLength:'>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableBytes'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='replaceBytesInRange:withBytes:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='bytes' declared_type='void*' type='^v' const='true' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceBytesInRange:withBytes:length:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='replacementBytes' declared_type='void*' type='^v' const='true' index='1'/>
<arg name='replacementLength' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetBytesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLength:'>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableDictionary'>
<method selector='addEntriesFromDictionary:'>
<arg name='otherDictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dictionaryWithCapacity:'>
<arg name='numItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCapacity:'>
<arg name='numItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg name='aKey' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg name='keyArray' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDictionary:'>
<arg name='otherDictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKey:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<arg name='aKey' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableIndexSet'>
<method selector='addIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addIndexes:'>
<arg name='indexSet' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addIndexesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllIndexes'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeIndex:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeIndexes:'>
<arg name='indexSet' declared_type='NSIndexSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeIndexesInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftIndexesStartingAtIndex:by:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='delta' declared_type='NSInteger' type='i' type64='q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableSet'>
<method selector='addObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromArray:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='filterUsingPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCapacity:'>
<arg name='numItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intersectSet:'>
<arg name='otherSet' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minusSet:'>
<arg name='otherSet' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSet:'>
<arg name='otherSet' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setWithCapacity:'>
<arg name='numItems' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='unionSet:'>
<arg name='otherSet' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableString'>
<method variadic='true' selector='appendFormat:'>
<arg name='appendFormat' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCapacity:'>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertString:atIndex:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<arg name='loc' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='aString' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceOccurrencesOfString:withString:options:range:'>
<arg name='target' declared_type='NSString*' type='@' index='0'/>
<arg name='replacement' declared_type='NSString*' type='@' index='1'/>
<arg name='options' declared_type='NSStringCompareOptions' type='I' type64='Q' index='2'/>
<arg name='searchRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='3'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stringWithCapacity:'>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSMutableURLRequest'>
<method selector='addValue:forHTTPHeaderField:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='field' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllHTTPHeaderFields:'>
<arg name='headerFields' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachePolicy:'>
<arg name='policy' declared_type='NSURLRequestCachePolicy' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPBody:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPBodyStream:'>
<arg name='inputStream' declared_type='NSInputStream*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPMethod:'>
<arg name='method' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPShouldHandleCookies:'>
<arg name='should' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainDocumentURL:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeoutInterval:'>
<arg name='seconds' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<arg name='field' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSNameSpecifier'>
<method selector='initWithContainerClassDescription:containerSpecifier:key:name:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<arg name='property' declared_type='NSString*' type='@' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSNetService'>
<method selector='TXTRecordData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='addresses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='dataFromTXTRecordDictionary:'>
<arg name='txtDictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryFromTXTRecordData:'>
<arg name='txtData' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='domain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getInputStream:outputStream:'>
<arg name='inputStream' declared_type='NSInputStream**' type='^@' index='0'/>
<arg name='outputStream' declared_type='NSOutputStream**' type='^@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hostName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithDomain:type:name:'>
<arg name='domain' declared_type='NSString*' type='@' index='0'/>
<arg name='type' declared_type='NSString*' type='@' index='1'/>
<arg name='name' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDomain:type:name:port:'>
<arg name='domain' declared_type='NSString*' type='@' index='0'/>
<arg name='type' declared_type='NSString*' type='@' index='1'/>
<arg name='name' declared_type='NSString*' type='@' index='2'/>
<arg name='port' declared_type='int' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='port'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='protocolSpecificInformation'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='publish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='publishWithOptions:'>
<arg name='options' declared_type='NSNetServiceOptions' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resolve'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resolveWithTimeout:'>
<arg name='timeout' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProtocolSpecificInformation:'>
<arg name='specificInformation' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTXTRecordData:'>
<arg name='recordData' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startMonitoring'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopMonitoring'>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSNetServiceBrowser'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchForAllDomains'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchForBrowsableDomains'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchForRegistrationDomains'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchForServicesOfType:inDomain:'>
<arg name='type' declared_type='NSString*' type='@' index='0'/>
<arg name='domainString' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSNotification'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='notificationWithName:object:'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='anObject' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='notificationWithName:object:userInfo:'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='anObject' declared_type='id' type='@' index='1'/>
<arg name='aUserInfo' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg name='observer' declared_type='id' type='@' index='0'/>
<arg name='aSelector' declared_type='SEL' type=':' index='1'/>
<arg name='aName' declared_type='NSString*' type='@' index='2'/>
<arg name='anObject' declared_type='id' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultCenter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='postNotification:'>
<arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postNotificationName:object:'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='anObject' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postNotificationName:object:userInfo:'>
<arg name='aName' declared_type='NSString*' type='@' index='0'/>
<arg name='anObject' declared_type='id' type='@' index='1'/>
<arg name='aUserInfo' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObserver:'>
<arg name='observer' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObserver:name:object:'>
<arg name='observer' declared_type='id' type='@' index='0'/>
<arg name='aName' declared_type='NSString*' type='@' index='1'/>
<arg name='anObject' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSNotificationQueue'>
<method class_method='true' selector='defaultQueue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dequeueNotificationsMatching:coalesceMask:'>
<arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
<arg name='coalesceMask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueNotification:postingStyle:'>
<arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
<arg name='postingStyle' declared_type='NSPostingStyle' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueNotification:postingStyle:coalesceMask:forModes:'>
<arg name='notification' declared_type='NSNotification*' type='@' index='0'/>
<arg name='postingStyle' declared_type='NSPostingStyle' type='I' type64='Q' index='1'/>
<arg name='coalesceMask' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<arg name='modes' declared_type='NSArray*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithNotificationCenter:'>
<arg name='notificationCenter' declared_type='NSNotificationCenter*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSNull'>
<method class_method='true' selector='null'>
<retval declared_type='NSNull*' type='@'/>
</method>
</class>
<class name='NSNumber'>
<method selector='boolValue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='charValue'>
<retval declared_type='char' type='c'/>
</method>
<method selector='compare:'>
<arg name='otherNumber' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='decimalValue'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='descriptionWithLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='floatValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithBool:'>
<arg name='value' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithChar:'>
<arg name='value' declared_type='char' type='c' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDouble:'>
<arg name='value' declared_type='double' type='d' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFloat:'>
<arg name='value' declared_type='float' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithInt:'>
<arg name='value' declared_type='int' type='i' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithInteger:'>
<arg name='value' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLong:'>
<arg name='value' declared_type='long' type='l' type64='q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLongLong:'>
<arg name='value' declared_type='long long' type='q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithShort:'>
<arg name='value' declared_type='short' type='s' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUnsignedChar:'>
<arg name='value' declared_type='unsigned char' type='C' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUnsignedInt:'>
<arg name='value' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUnsignedInteger:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUnsignedLong:'>
<arg name='value' declared_type='unsigned long' type='L' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUnsignedLongLong:'>
<arg name='value' declared_type='unsigned long long' type='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUnsignedShort:'>
<arg name='value' declared_type='unsigned short' type='S' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intValue'>
<retval declared_type='int' type='i'/>
</method>
<method selector='integerValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='isEqualToNumber:'>
<arg name='number' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='longLongValue'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='longValue'>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method class_method='true' selector='numberWithBool:'>
<arg name='value' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithChar:'>
<arg name='value' declared_type='char' type='c' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithDouble:'>
<arg name='value' declared_type='double' type='d' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithFloat:'>
<arg name='value' declared_type='float' type='f' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithInt:'>
<arg name='value' declared_type='int' type='i' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithInteger:'>
<arg name='value' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithLong:'>
<arg name='value' declared_type='long' type='l' type64='q' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithLongLong:'>
<arg name='value' declared_type='long long' type='q' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithShort:'>
<arg name='value' declared_type='short' type='s' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithUnsignedChar:'>
<arg name='value' declared_type='unsigned char' type='C' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithUnsignedInt:'>
<arg name='value' declared_type='unsigned int' type='I' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithUnsignedInteger:'>
<arg name='value' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithUnsignedLong:'>
<arg name='value' declared_type='unsigned long' type='L' type64='Q' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithUnsignedLongLong:'>
<arg name='value' declared_type='unsigned long long' type='Q' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberWithUnsignedShort:'>
<arg name='value' declared_type='unsigned short' type='S' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='shortValue'>
<retval declared_type='short' type='s'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='unsignedCharValue'>
<retval declared_type='unsigned char' type='C'/>
</method>
<method selector='unsignedIntValue'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='unsignedIntegerValue'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='unsignedLongLongValue'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='unsignedLongValue'>
<retval declared_type='unsigned long' type='L' type64='Q'/>
</method>
<method selector='unsignedShortValue'>
<retval declared_type='unsigned short' type='S'/>
</method>
</class>
<class name='NSNumberFormatter'>
<method selector='allowsFloats'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alwaysShowsDecimalSeparator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedStringForNil'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='attributedStringForNotANumber'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='attributedStringForZero'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='currencyCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currencyDecimalSeparator'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currencyGroupingSeparator'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currencySymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='decimalSeparator'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='defaultFormatterBehavior'>
<retval declared_type='NSNumberFormatterBehavior' type='I' type64='Q'/>
</method>
<method selector='exponentSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='format'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formatWidth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='formatterBehavior'>
<retval declared_type='NSNumberFormatterBehavior' type='I' type64='Q'/>
</method>
<method selector='generatesDecimalNumbers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg name='obj' declared_type='out id*' type='^@' index='0'/>
<arg name='string' declared_type='NSString*' type='@' index='1'/>
<arg name='rangep' declared_type='inout NSRange*' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='2'/>
<arg name='error' declared_type='out NSError**' type='^@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='groupingSeparator'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupingSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='hasThousandSeparators'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='internationalCurrencySymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isLenient'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPartialStringValidationEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='localizesFormat'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximum'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='maximumFractionDigits'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='maximumIntegerDigits'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='maximumSignificantDigits'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimum'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='minimumFractionDigits'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumIntegerDigits'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumSignificantDigits'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minusSign'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='multiplier'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='negativeFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='negativeInfinitySymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='negativePrefix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='negativeSuffix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nilSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notANumberSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberFromString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='numberStyle'>
<retval declared_type='NSNumberFormatterStyle' type='I' type64='Q'/>
</method>
<method selector='paddingCharacter'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='paddingPosition'>
<retval declared_type='NSNumberFormatterPadPosition' type='I' type64='Q'/>
</method>
<method selector='perMillSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='percentSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='plusSign'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='positiveFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='positiveInfinitySymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='positivePrefix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='positiveSuffix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='roundingBehavior'>
<retval declared_type='NSDecimalNumberHandler*' type='@'/>
</method>
<method selector='roundingIncrement'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='roundingMode'>
<retval declared_type='NSNumberFormatterRoundingMode' type='I' type64='Q'/>
</method>
<method selector='secondaryGroupingSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setAllowsFloats:'>
<arg name='flag' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlwaysShowsDecimalSeparator:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringForNil:'>
<arg name='newAttributedString' declared_type='NSAttributedString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringForNotANumber:'>
<arg name='newAttributedString' declared_type='NSAttributedString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringForZero:'>
<arg name='newAttributedString' declared_type='NSAttributedString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrencyCode:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrencyDecimalSeparator:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrencyGroupingSeparator:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrencySymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecimalSeparator:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultFormatterBehavior:'>
<arg name='behavior' declared_type='NSNumberFormatterBehavior' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExponentSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormatWidth:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormatterBehavior:'>
<arg name='behavior' declared_type='NSNumberFormatterBehavior' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGeneratesDecimalNumbers:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupingSeparator:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupingSize:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasThousandSeparators:'>
<arg name='flag' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInternationalCurrencySymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLenient:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg name='locale' declared_type='NSLocale*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizesFormat:'>
<arg name='flag' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximum:'>
<arg name='number' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumFractionDigits:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumIntegerDigits:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumSignificantDigits:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimum:'>
<arg name='number' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumFractionDigits:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumIntegerDigits:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumSignificantDigits:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinusSign:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMultiplier:'>
<arg name='number' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNegativeFormat:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNegativeInfinitySymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNegativePrefix:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNegativeSuffix:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotANumberSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberStyle:'>
<arg name='style' declared_type='NSNumberFormatterStyle' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaddingCharacter:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaddingPosition:'>
<arg name='position' declared_type='NSNumberFormatterPadPosition' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPartialStringValidationEnabled:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerMillSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPercentSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlusSign:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositiveFormat:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositiveInfinitySymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositivePrefix:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositiveSuffix:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRoundingBehavior:'>
<arg name='newRoundingBehavior' declared_type='NSDecimalNumberHandler*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRoundingIncrement:'>
<arg name='number' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRoundingMode:'>
<arg name='mode' declared_type='NSNumberFormatterRoundingMode' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecondaryGroupingSize:'>
<arg name='number' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAttributesForNegativeInfinity:'>
<arg name='newAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAttributesForNegativeValues:'>
<arg name='newAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAttributesForNil:'>
<arg name='newAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAttributesForNotANumber:'>
<arg name='newAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAttributesForPositiveInfinity:'>
<arg name='newAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAttributesForPositiveValues:'>
<arg name='newAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAttributesForZero:'>
<arg name='newAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThousandSeparator:'>
<arg name='newSeparator' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesGroupingSeparator:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesSignificantDigits:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZeroSymbol:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromNumber:'>
<arg name='number' declared_type='NSNumber*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='textAttributesForNegativeInfinity'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='textAttributesForNegativeValues'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='textAttributesForNil'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='textAttributesForNotANumber'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='textAttributesForPositiveInfinity'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='textAttributesForPositiveValues'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='textAttributesForZero'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='thousandSeparator'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='usesGroupingSeparator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesSignificantDigits'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='zeroSymbol'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='URL:resourceDataDidBecomeAvailable:'>
<arg name='sender' declared_type='NSURL*' type='@' index='0'/>
<arg name='newBytes' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URL:resourceDidFailLoadingWithReason:'>
<arg name='sender' declared_type='NSURL*' type='@' index='0'/>
<arg name='reason' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLHandle:resourceDataDidBecomeAvailable:'>
<arg name='sender' declared_type='NSURLHandle*' type='@' index='0'/>
<arg name='newBytes' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLHandle:resourceDidFailLoadingWithReason:'>
<arg name='sender' declared_type='NSURLHandle*' type='@' index='0'/>
<arg name='reason' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLHandleResourceDidBeginLoading:'>
<arg name='sender' declared_type='NSURLHandle*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLHandleResourceDidCancelLoading:'>
<arg name='sender' declared_type='NSURLHandle*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLHandleResourceDidFinishLoading:'>
<arg name='sender' declared_type='NSURLHandle*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocol:cachedResponseIsValid:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<arg name='cachedResponse' declared_type='NSCachedURLResponse*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocol:didCancelAuthenticationChallenge:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocol:didFailWithError:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocol:didLoadData:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocol:didReceiveAuthenticationChallenge:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<arg name='response' declared_type='NSURLResponse*' type='@' index='1'/>
<arg name='policy' declared_type='NSURLCacheStoragePolicy' type='I' type64='Q' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocol:wasRedirectedToRequest:redirectResponse:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<arg name='request' declared_type='NSURLRequest*' type='@' index='1'/>
<arg name='redirectResponse' declared_type='NSURLResponse*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLProtocolDidFinishLoading:'>
<arg name='protocol' declared_type='NSURLProtocol*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLResourceDidCancelLoading:'>
<arg name='sender' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='URLResourceDidFinishLoading:'>
<arg name='sender' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='accessInstanceVariablesDirectly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObserver:forKeyPath:options:context:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<arg name='options' declared_type='NSKeyValueObservingOptions' type='I' type64='Q' index='2'/>
<arg name='context' declared_type='void*' type='^v' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='alloc'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='allocWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='archiver:didEncodeObject:'>
<arg name='archiver' declared_type='NSKeyedArchiver*' type='@' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='archiver:willEncodeObject:'>
<arg name='archiver' declared_type='NSKeyedArchiver*' type='@' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='archiver:willReplaceObject:withObject:'>
<arg name='archiver' declared_type='NSKeyedArchiver*' type='@' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<arg name='newObject' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='archiverDidFinish:'>
<arg name='archiver' declared_type='NSKeyedArchiver*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='archiverWillFinish:'>
<arg name='archiver' declared_type='NSKeyedArchiver*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:'>
<arg name='error' declared_type='NSError*' type='@' index='0'/>
<arg name='recoveryOptionIndex' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
<arg name='error' declared_type='NSError*' type='@' index='0'/>
<arg name='recoveryOptionIndex' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='delegate' declared_type='id' type='@' index='2'/>
<arg name='didRecoverSelector' declared_type='SEL' type=':' index='3'/>
<arg name='contextInfo' declared_type='void*' type='^v' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='authenticateComponents:withData:'>
<arg name='components' declared_type='NSArray*' type='@' index='0'/>
<arg name='signature' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='authenticationDataForComponents:'>
<arg name='components' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='automaticallyNotifiesObserversForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autorelease'>
<retval declared_type='id' type='@'/>
</method>
<method selector='awakeAfterUsingCoder:'>
<arg name='aDecoder' declared_type='NSCoder*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cancelAuthenticationChallenge:'>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:'>
<arg name='aTarget' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:selector:object:'>
<arg name='aTarget' declared_type='id' type='@' index='0'/>
<arg name='aSelector' declared_type='SEL' type=':' index='1'/>
<arg name='anArgument' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='class'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='class'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classCode'>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method selector='classDescription'>
<retval declared_type='NSClassDescription*' type='@'/>
</method>
<method class_method='true' selector='classFallbacksForKeyedArchiver'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classForArchiver'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForCoder'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForKeyedArchiver'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='classForKeyedUnarchiver'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForPortCoder'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='className'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='coerceValue:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='conformsToProtocol:'>
<arg name='aProtocol' declared_type='Protocol*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='conformsToProtocol:'>
<arg name='protocol' declared_type='Protocol*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='connection:didCancelAuthenticationChallenge:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connection:didFailWithError:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connection:didReceiveAuthenticationChallenge:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connection:didReceiveData:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connection:didReceiveResponse:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<arg name='response' declared_type='NSURLResponse*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connection:handleRequest:'>
<arg name='connection' declared_type='NSConnection*' type='@' index='0'/>
<arg name='doreq' declared_type='NSDistantObjectRequest*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='connection:shouldMakeNewConnection:'>
<arg name='ancestor' declared_type='NSConnection*' type='@' index='0'/>
<arg name='conn' declared_type='NSConnection*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='connection:willCacheResponse:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<arg name='cachedResponse' declared_type='NSCachedURLResponse*' type='@' index='1'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</method>
<method selector='connection:willSendRequest:redirectResponse:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<arg name='request' declared_type='NSURLRequest*' type='@' index='1'/>
<arg name='response' declared_type='NSURLResponse*' type='@' index='2'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='connectionDidFinishLoading:'>
<arg name='connection' declared_type='NSURLConnection*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='continueWithoutCredentialForAuthenticationChallenge:'>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copy'>
<retval declared_type='id' type='@'/>
</method>
<method selector='copyScriptingValue:forKey:withProperties:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='properties' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='copyWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='copyWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg name='state' declared_type='NSFastEnumerationState*' type='^{_NSFastEnumerationState=L^@^L[5L]}' type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}' index='0' type_modifier='n'/>
<arg name='stackbuf' declared_type='id*' type='^@' index='1'/>
<arg name='len' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='createConversationForConnection:'>
<arg name='conn' declared_type='NSConnection*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryWithValuesForKeys:'>
<arg name='keys' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='didChange:valuesAtIndexes:forKey:'>
<arg name='changeKind' declared_type='NSKeyValueChange' type='I' type64='Q' index='0'/>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didChangeValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didChangeValueForKey:withSetMutation:usingObjects:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='mutationKind' declared_type='NSKeyValueSetMutationKind' type='I' type64='Q' index='1'/>
<arg name='objects' declared_type='NSSet*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doesContain:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='doesNotRecognizeSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:decideDestinationWithSuggestedFilename:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='filename' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:didCancelAuthenticationChallenge:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:didCreateDestination:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:didFailWithError:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:didReceiveAuthenticationChallenge:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:didReceiveDataOfLength:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:didReceiveResponse:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='response' declared_type='NSURLResponse*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:shouldDecodeSourceDataOfMIMEType:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='encodingType' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='download:willResumeWithResponse:fromByte:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='response' declared_type='NSURLResponse*' type='@' index='1'/>
<arg name='startingByte' declared_type='long long' type='q' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='download:willSendRequest:redirectResponse:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<arg name='request' declared_type='NSURLRequest*' type='@' index='1'/>
<arg name='redirectResponse' declared_type='NSURLResponse*' type='@' index='2'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='downloadDidBegin:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadDidFinish:'>
<arg name='download' declared_type='NSURLDownload*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeWithCoder:'>
<arg name='aCoder' declared_type='NSCoder*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exceptionDuringOperation:error:leftOperand:rightOperand:'>
<arg name='operation' declared_type='SEL' type=':' index='0'/>
<arg name='error' declared_type='NSCalculationError' type='I' type64='Q' index='1'/>
<arg name='leftOperand' declared_type='NSDecimalNumber*' type='@' index='2'/>
<arg name='rightOperand' declared_type='NSDecimalNumber*' type='@' index='3'/>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='fileManager:shouldCopyItemAtPath:toPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='srcPath' declared_type='NSString*' type='@' index='1'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldLinkItemAtPath:toPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='srcPath' declared_type='NSString*' type='@' index='1'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldMoveItemAtPath:toPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='srcPath' declared_type='NSString*' type='@' index='1'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:'>
<arg name='fm' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='errorInfo' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<arg name='srcPath' declared_type='NSString*' type='@' index='2'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<arg name='srcPath' declared_type='NSString*' type='@' index='2'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<arg name='srcPath' declared_type='NSString*' type='@' index='2'/>
<arg name='dstPath' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<arg name='path' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:shouldRemoveItemAtPath:'>
<arg name='fileManager' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileManager:willProcessPath:'>
<arg name='fm' declared_type='NSFileManager*' type='@' index='0'/>
<arg name='path' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='finalize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='forwardInvocation:'>
<arg name='anInvocation' declared_type='NSInvocation*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleMachMessage:'>
<arg name='msg' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handlePortMessage:'>
<arg name='message' declared_type='NSPortMessage*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleQueryWithUnboundKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='handleTakeValue:forUnboundKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hash'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indicesOfObjectsByEvaluatingObjectSpecifier:'>
<arg name='specifier' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg name='aDecoder' declared_type='NSCoder*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='initialize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertValue:atIndex:inPropertyWithKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertValue:inPropertyWithKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='instanceMethodForSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='IMP' type='^?'/>
</method>
<method class_method='true' selector='instanceMethodSignatureForSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='NSMethodSignature*' type='@'/>
</method>
<method class_method='true' selector='instancesRespondToSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inverseForRelationshipKey:'>
<arg name='relationshipKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isCaseInsensitiveLike:'>
<arg name='object' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqual:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualTo:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGreaterThan:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGreaterThanOrEqualTo:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKindOfClass:'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLessThan:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLessThanOrEqualTo:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLike:'>
<arg name='object' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMemberOfClass:'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNotEqualTo:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isProxy'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isSubclassOfClass:'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='keyPathsForValuesAffectingValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lock'>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeNewConnection:sender:'>
<arg name='conn' declared_type='NSConnection*' type='@' index='0'/>
<arg name='ancestor' declared_type='NSConnection*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='metadataQuery:replacementObjectForResultObject:'>
<arg name='query' declared_type='NSMetadataQuery*' type='@' index='0'/>
<arg name='result' declared_type='NSMetadataItem*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='metadataQuery:replacementValueForAttribute:value:'>
<arg name='query' declared_type='NSMetadataQuery*' type='@' index='0'/>
<arg name='attrName' declared_type='NSString*' type='@' index='1'/>
<arg name='attrValue' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='methodForSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='IMP' type='^?'/>
</method>
<method selector='methodSignatureForSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='NSMethodSignature*' type='@'/>
</method>
<method selector='mutableArrayValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='mutableArrayValueForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='mutableCopy'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableCopyWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mutableCopyWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableSetValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSMutableSet*' type='@'/>
</method>
<method selector='mutableSetValueForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSMutableSet*' type='@'/>
</method>
<method selector='netService:didNotPublish:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<arg name='errorDict' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netService:didNotResolve:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<arg name='errorDict' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netService:didUpdateTXTRecordData:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<arg name='data' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' type='@' index='0'/>
<arg name='domainString' declared_type='NSString*' type='@' index='1'/>
<arg name='moreComing' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceBrowser:didFindService:moreComing:'>
<arg name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' type='@' index='0'/>
<arg name='aNetService' declared_type='NSNetService*' type='@' index='1'/>
<arg name='moreComing' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceBrowser:didNotSearch:'>
<arg name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' type='@' index='0'/>
<arg name='errorDict' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' type='@' index='0'/>
<arg name='domainString' declared_type='NSString*' type='@' index='1'/>
<arg name='moreComing' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' type='@' index='0'/>
<arg name='aNetService' declared_type='NSNetService*' type='@' index='1'/>
<arg name='moreComing' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceBrowserDidStopSearch:'>
<arg name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceBrowserWillSearch:'>
<arg name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceDidPublish:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceDidResolveAddress:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceDidStop:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceWillPublish:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='netServiceWillResolve:'>
<arg name='sender' declared_type='NSNetService*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='new'>
<retval declared_type='id' type='@'/>
</method>
<method selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:'>
<arg name='objectClass' declared_type='Class' type='#' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='contentsValue' declared_type='id' type='@' index='2'/>
<arg name='properties' declared_type='NSDictionary*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='observationInfo'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='observeValueForKeyPath:ofObject:change:context:'>
<arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<arg name='change' declared_type='NSDictionary*' type='@' index='2'/>
<arg name='context' declared_type='void*' type='^v' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:didEndElement:namespaceURI:qualifiedName:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='elementName' declared_type='NSString*' type='@' index='1'/>
<arg name='namespaceURI' declared_type='NSString*' type='@' index='2'/>
<arg name='qName' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:didEndMappingPrefix:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='prefix' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='elementName' declared_type='NSString*' type='@' index='1'/>
<arg name='namespaceURI' declared_type='NSString*' type='@' index='2'/>
<arg name='qName' declared_type='NSString*' type='@' index='3'/>
<arg name='attributeDict' declared_type='NSDictionary*' type='@' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:didStartMappingPrefix:toURI:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='prefix' declared_type='NSString*' type='@' index='1'/>
<arg name='namespaceURI' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='attributeName' declared_type='NSString*' type='@' index='1'/>
<arg name='elementName' declared_type='NSString*' type='@' index='2'/>
<arg name='type' declared_type='NSString*' type='@' index='3'/>
<arg name='defaultValue' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundCDATA:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='CDATABlock' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundCharacters:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='string' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundComment:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='comment' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundElementDeclarationWithName:model:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='elementName' declared_type='NSString*' type='@' index='1'/>
<arg name='model' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='publicID' declared_type='NSString*' type='@' index='2'/>
<arg name='systemID' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundIgnorableWhitespace:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='whitespaceString' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundInternalEntityDeclarationWithName:value:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='value' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundNotationDeclarationWithName:publicID:systemID:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='publicID' declared_type='NSString*' type='@' index='2'/>
<arg name='systemID' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundProcessingInstructionWithTarget:data:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='target' declared_type='NSString*' type='@' index='1'/>
<arg name='data' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='publicID' declared_type='NSString*' type='@' index='2'/>
<arg name='systemID' declared_type='NSString*' type='@' index='3'/>
<arg name='notationName' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:parseErrorOccurred:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='parseError' declared_type='NSError*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parser:resolveExternalEntityName:systemID:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='systemID' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='parser:validationErrorOccurred:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<arg name='validationError' declared_type='NSError*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parserDidEndDocument:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parserDidStartDocument:'>
<arg name='parser' declared_type='NSXMLParser*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='thr' declared_type='NSThread*' type='@' index='1'/>
<arg name='arg' declared_type='id' type='@' index='2'/>
<arg name='wait' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='thr' declared_type='NSThread*' type='@' index='1'/>
<arg name='arg' declared_type='id' type='@' index='2'/>
<arg name='wait' declared_type='BOOL' type='B' index='3'/>
<arg name='array' declared_type='NSArray*' type='@' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSelector:withObject:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:withObject:afterDelay:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='anArgument' declared_type='id' type='@' index='1'/>
<arg name='delay' declared_type='NSTimeInterval' type='d' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSelector:withObject:afterDelay:inModes:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='anArgument' declared_type='id' type='@' index='1'/>
<arg name='delay' declared_type='NSTimeInterval' type='d' index='2'/>
<arg name='modes' declared_type='NSArray*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSelector:withObject:withObject:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='object1' declared_type='id' type='@' index='1'/>
<arg name='object2' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelectorInBackground:withObject:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='arg' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='arg' declared_type='id' type='@' index='1'/>
<arg name='wait' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='arg' declared_type='id' type='@' index='1'/>
<arg name='wait' declared_type='BOOL' type='B' index='2'/>
<arg name='array' declared_type='NSArray*' type='@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='poseAsClass:'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='release'>
<retval declared_type='oneway void' type='v'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeValueAtIndex:fromPropertyWithKey:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceValueAtIndex:inPropertyWithKey:withValue:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='value' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replacementObjectForArchiver:'>
<arg name='archiver' declared_type='NSArchiver*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='replacementObjectForCoder:'>
<arg name='aCoder' declared_type='NSCoder*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='replacementObjectForKeyedArchiver:'>
<arg name='archiver' declared_type='NSKeyedArchiver*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='replacementObjectForPortCoder:'>
<arg name='coder' declared_type='NSPortCoder*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='resolveClassMethod:'>
<arg name='sel' declared_type='SEL' type=':' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='resolveInstanceMethod:'>
<arg name='sel' declared_type='SEL' type=':' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='respondsToSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='retain'>
<retval declared_type='id' type='@'/>
</method>
<method selector='retainCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='roundingMode'>
<retval declared_type='NSRoundingMode' type='I' type64='Q'/>
</method>
<method selector='scale'>
<retval declared_type='short' type='s'/>
</method>
<method selector='scriptingBeginsWith:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingContains:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingEndsWith:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingIsEqualTo:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingIsGreaterThan:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingIsGreaterThanOrEqualTo:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingIsLessThan:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingIsLessThanOrEqualTo:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scriptingProperties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='scriptingValueForSpecifier:'>
<arg name='objectSpecifier' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='self'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setKeys:triggerChangeNotificationsForDependentKey:'>
<arg name='keys' declared_type='NSArray*' type='@' index='0'/>
<arg name='dependentKey' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObservationInfo:'>
<arg name='observationInfo' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScriptingProperties:'>
<arg name='properties' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forKeyPath:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forUndefinedKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValuesForKeysWithDictionary:'>
<arg name='keyedValues' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setVersion:'>
<arg name='aVersion' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spellServer:checkGrammarInString:language:details:'>
<arg name='sender' declared_type='NSSpellServer*' type='@' index='0'/>
<arg name='stringToCheck' declared_type='NSString*' type='@' index='1'/>
<arg name='language' declared_type='NSString*' type='@' index='2'/>
<arg name='details' declared_type='NSArray**' type='^@' index='3'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='spellServer:didForgetWord:inLanguage:'>
<arg name='sender' declared_type='NSSpellServer*' type='@' index='0'/>
<arg name='word' declared_type='NSString*' type='@' index='1'/>
<arg name='language' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spellServer:didLearnWord:inLanguage:'>
<arg name='sender' declared_type='NSSpellServer*' type='@' index='0'/>
<arg name='word' declared_type='NSString*' type='@' index='1'/>
<arg name='language' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:'>
<arg name='sender' declared_type='NSSpellServer*' type='@' index='0'/>
<arg name='stringToCheck' declared_type='NSString*' type='@' index='1'/>
<arg name='language' declared_type='NSString*' type='@' index='2'/>
<arg name='wordCount' declared_type='NSInteger*' type='^i' type64='^q' index='3'/>
<arg name='countOnly' declared_type='BOOL' type='B' index='4'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:'>
<arg name='sender' declared_type='NSSpellServer*' type='@' index='0'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<arg name='string' declared_type='NSString*' type='@' index='2'/>
<arg name='language' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='spellServer:suggestGuessesForWord:inLanguage:'>
<arg name='sender' declared_type='NSSpellServer*' type='@' index='0'/>
<arg name='word' declared_type='NSString*' type='@' index='1'/>
<arg name='language' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='storedValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stream:handleEvent:'>
<arg name='aStream' declared_type='NSStream*' type='@' index='0'/>
<arg name='eventCode' declared_type='NSStreamEvent' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='superclass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='superclass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='takeStoredValue:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeValue:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeValue:forKeyPath:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeValuesFromDictionary:'>
<arg name='properties' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toManyRelationshipKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='toOneRelationshipKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unableToSetNilForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'>
<arg name='unarchiver' declared_type='NSKeyedUnarchiver*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='classNames' declared_type='NSArray*' type='@' index='2'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='unarchiver:didDecodeObject:'>
<arg name='unarchiver' declared_type='NSKeyedUnarchiver*' type='@' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='unarchiver:willReplaceObject:withObject:'>
<arg name='unarchiver' declared_type='NSKeyedUnarchiver*' type='@' index='0'/>
<arg name='object' declared_type='id' type='@' index='1'/>
<arg name='newObject' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unarchiverDidFinish:'>
<arg name='unarchiver' declared_type='NSKeyedUnarchiver*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unarchiverWillFinish:'>
<arg name='unarchiver' declared_type='NSKeyedUnarchiver*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlock'>
<retval declared_type='void' type='v'/>
</method>
<method selector='useCredential:forAuthenticationChallenge:'>
<arg name='credential' declared_type='NSURLCredential*' type='@' index='0'/>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='useStoredAccessor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateValue:forKey:error:'>
<arg name='ioValue' declared_type='id*' type='^@' index='0'/>
<arg name='inKey' declared_type='NSString*' type='@' index='1'/>
<arg name='outError' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateValue:forKeyPath:error:'>
<arg name='ioValue' declared_type='id*' type='^@' index='0'/>
<arg name='inKeyPath' declared_type='NSString*' type='@' index='1'/>
<arg name='outError' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueAtIndex:inPropertyWithKey:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForUndefinedKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueWithName:inPropertyWithKey:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueWithUniqueID:inPropertyWithKey:'>
<arg name='uniqueID' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valuesForKeys:'>
<arg name='keys' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='version'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='willChange:valuesAtIndexes:forKey:'>
<arg name='changeKind' declared_type='NSKeyValueChange' type='I' type64='Q' index='0'/>
<arg name='indexes' declared_type='NSIndexSet*' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willChangeValueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willChangeValueForKey:withSetMutation:usingObjects:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='mutationKind' declared_type='NSKeyValueSetMutationKind' type='I' type64='Q' index='1'/>
<arg name='objects' declared_type='NSSet*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zone'>
<retval declared_type='NSZone*' type='^{_NSZone=}'/>
</method>
</class>
<class name='NSOperation'>
<method selector='addDependency:'>
<arg name='op' declared_type='NSOperation*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dependencies'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isCancelled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConcurrent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExecuting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFinished'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReady'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='main'>
<retval declared_type='void' type='v'/>
</method>
<method selector='queuePriority'>
<retval declared_type='NSOperationQueuePriority' type='i' type64='q'/>
</method>
<method selector='removeDependency:'>
<arg name='op' declared_type='NSOperation*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueuePriority:'>
<arg name='p' declared_type='NSOperationQueuePriority' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSOperationQueue'>
<method selector='addOperation:'>
<arg name='op' declared_type='NSOperation*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelAllOperations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isSuspended'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxConcurrentOperationCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='operations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setMaxConcurrentOperationCount:'>
<arg name='cnt' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuspended:'>
<arg name='b' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitUntilAllOperationsAreFinished'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSOutputStream'>
<method selector='hasSpaceAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initToBuffer:capacity:'>
<arg name='buffer' declared_type='uint8_t*' type='*' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initToFileAtPath:append:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='shouldAppend' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initToMemory'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='outputStreamToBuffer:capacity:'>
<arg name='buffer' declared_type='uint8_t*' type='*' index='0'/>
<arg name='capacity' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='outputStreamToFileAtPath:append:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='shouldAppend' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='outputStreamToMemory'>
<retval declared_type='id' type='@'/>
</method>
<method selector='write:maxLength:'>
<arg name='buffer' declared_type='uint8_t*' type='*' const='true' index='0'/>
<arg name='len' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSPipe'>
<method selector='fileHandleForReading'>
<retval declared_type='NSFileHandle*' type='@'/>
</method>
<method selector='fileHandleForWriting'>
<retval declared_type='NSFileHandle*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pipe'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSPointerArray'>
<method selector='addPointer:'>
<arg name='pointer' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='compact'>
<retval declared_type='void' type='v'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithOptions:'>
<arg name='options' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPointerFunctions:'>
<arg name='functions' declared_type='NSPointerFunctions*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertPointer:atIndex:'>
<arg name='item' declared_type='void*' type='^v' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='pointerArrayWithOptions:'>
<arg name='options' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pointerArrayWithPointerFunctions:'>
<arg name='functions' declared_type='NSPointerFunctions*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pointerArrayWithStrongObjects'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pointerArrayWithWeakObjects'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pointerAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='pointerFunctions'>
<retval declared_type='NSPointerFunctions*' type='@'/>
</method>
<method selector='removePointerAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replacePointerAtIndex:withPointer:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='item' declared_type='void*' type='^v' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCount:'>
<arg name='count' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPointerFunctions'>
<method selector='initWithOptions:'>
<arg name='options' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pointerFunctionsWithOptions:'>
<arg name='options' declared_type='NSPointerFunctionsOptions' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setUsesStrongWriteBarrier:'>
<arg name='' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesWeakReadAndWriteBarriers:'>
<arg name='' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesStrongWriteBarrier'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesWeakReadAndWriteBarriers'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSPort'>
<method selector='addConnection:toRunLoop:forMode:'>
<arg name='conn' declared_type='NSConnection*' type='@' index='0'/>
<arg name='runLoop' declared_type='NSRunLoop*' type='@' index='1'/>
<arg name='mode' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='allocWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='port'>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='removeConnection:fromRunLoop:forMode:'>
<arg name='conn' declared_type='NSConnection*' type='@' index='0'/>
<arg name='runLoop' declared_type='NSRunLoop*' type='@' index='1'/>
<arg name='mode' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg name='runLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reservedSpaceLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg name='runLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendBeforeDate:components:from:reserved:'>
<arg name='limitDate' declared_type='NSDate*' type='@' index='0'/>
<arg name='components' declared_type='NSMutableArray*' type='@' index='1'/>
<arg name='receivePort' declared_type='NSPort*' type='@' index='2'/>
<arg name='headerSpaceReserved' declared_type='NSUInteger' type='I' type64='Q' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendBeforeDate:msgid:components:from:reserved:'>
<arg name='limitDate' declared_type='NSDate*' type='@' index='0'/>
<arg name='msgID' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='components' declared_type='NSMutableArray*' type='@' index='2'/>
<arg name='receivePort' declared_type='NSPort*' type='@' index='3'/>
<arg name='headerSpaceReserved' declared_type='NSUInteger' type='I' type64='Q' index='4'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg name='anId' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPortCoder'>
<method selector='connection'>
<retval declared_type='NSConnection*' type='@'/>
</method>
<method selector='decodePortObject'>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='dispatch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodePortObject:'>
<arg name='aport' declared_type='NSPort*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithReceivePort:sendPort:components:'>
<arg name='rcvPort' declared_type='NSPort*' type='@' index='0'/>
<arg name='sndPort' declared_type='NSPort*' type='@' index='1'/>
<arg name='comps' declared_type='NSArray*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isBycopy'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isByref'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='portCoderWithReceivePort:sendPort:components:'>
<arg name='rcvPort' declared_type='NSPort*' type='@' index='0'/>
<arg name='sndPort' declared_type='NSPort*' type='@' index='1'/>
<arg name='comps' declared_type='NSArray*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSPortMessage'>
<method selector='components'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithSendPort:receivePort:components:'>
<arg name='sendPort' declared_type='NSPort*' type='@' index='0'/>
<arg name='replyPort' declared_type='NSPort*' type='@' index='1'/>
<arg name='components' declared_type='NSArray*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='msgid'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='receivePort'>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='sendBeforeDate:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendPort'>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='setMsgid:'>
<arg name='msgid' declared_type='uint32_t' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPortNameServer'>
<method selector='portForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='portForName:host:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='host' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='registerPort:name:'>
<arg name='port' declared_type='NSPort*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removePortForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='systemDefaultPortNameServer'>
<retval declared_type='NSPortNameServer*' type='@'/>
</method>
</class>
<class name='NSPositionalSpecifier'>
<method selector='evaluate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPosition:objectSpecifier:'>
<arg name='position' declared_type='NSInsertionPosition' type='I' type64='Q' index='0'/>
<arg name='specifier' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertionContainer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertionIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='insertionKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='insertionReplaces'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='position'>
<retval declared_type='NSInsertionPosition' type='I' type64='Q'/>
</method>
<method selector='setInsertionClassDescription:'>
<arg name='classDescription' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPredicate'>
<method selector='evaluateWithObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='evaluateWithObject:substitutionVariables:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<arg name='bindings' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='predicateFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' variadic='true' selector='predicateWithFormat:'>
<arg name='predicateWithFormat' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method class_method='true' selector='predicateWithFormat:argumentArray:'>
<arg name='predicateFormat' declared_type='NSString*' type='@' index='0'/>
<arg name='arguments' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method class_method='true' selector='predicateWithFormat:arguments:'>
<arg name='predicateFormat' declared_type='NSString*' type='@' index='0'/>
<arg name='argList' declared_type='va_list' type='*' type64='[1{?=II^v^v}]' index='1'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='predicateWithSubstitutionVariables:'>
<arg name='variables' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method class_method='true' selector='predicateWithValue:'>
<arg name='value' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
</class>
<class name='NSProcessInfo'>
<method selector='activeProcessorCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='arguments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='environment'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='globallyUniqueString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hostName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='operatingSystem'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='operatingSystemName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='operatingSystemVersionString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='physicalMemory'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='processIdentifier'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='processInfo'>
<retval declared_type='NSProcessInfo*' type='@'/>
</method>
<method selector='processName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='processorCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setProcessName:'>
<arg name='newName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPropertyListSerialization'>
<method class_method='true' selector='dataFromPropertyList:format:errorDescription:'>
<arg name='plist' declared_type='id' type='@' index='0'/>
<arg name='format' declared_type='NSPropertyListFormat' type='I' type64='Q' index='1'/>
<arg name='errorString' declared_type='NSString**' type='^@' index='2'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='propertyList:isValidForFormat:'>
<arg name='plist' declared_type='id' type='@' index='0'/>
<arg name='format' declared_type='NSPropertyListFormat' type='I' type64='Q' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='propertyListFromData:mutabilityOption:format:errorDescription:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<arg name='opt' declared_type='NSPropertyListMutabilityOptions' type='I' type64='Q' index='1'/>
<arg name='format' declared_type='NSPropertyListFormat*' type='^I' type64='^Q' index='2'/>
<arg name='errorString' declared_type='NSString**' type='^@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSProtocolChecker'>
<method selector='initWithTarget:protocol:'>
<arg name='anObject' declared_type='NSObject*' type='@' index='0'/>
<arg name='aProtocol' declared_type='Protocol*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='protocol'>
<retval declared_type='Protocol*' type='@'/>
</method>
<method class_method='true' selector='protocolCheckerWithTarget:protocol:'>
<arg name='anObject' declared_type='NSObject*' type='@' index='0'/>
<arg name='aProtocol' declared_type='Protocol*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='target'>
<retval declared_type='NSObject*' type='@'/>
</method>
</class>
<class name='NSProxy'>
<method class_method='true' selector='alloc'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='allocWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='class'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='finalize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='forwardInvocation:'>
<arg name='invocation' declared_type='NSInvocation*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='methodSignatureForSelector:'>
<arg name='sel' declared_type='SEL' type=':' index='0'/>
<retval declared_type='NSMethodSignature*' type='@'/>
</method>
<method class_method='true' selector='respondsToSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSQuitCommand'>
<method selector='saveOptions'>
<retval declared_type='NSSaveOptions' type='I' type64='Q'/>
</method>
</class>
<class name='NSRangeSpecifier'>
<method selector='endSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<arg name='property' declared_type='NSString*' type='@' index='2'/>
<arg name='startSpec' declared_type='NSScriptObjectSpecifier*' type='@' index='3'/>
<arg name='endSpec' declared_type='NSScriptObjectSpecifier*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setEndSpecifier:'>
<arg name='endSpec' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSpecifier:'>
<arg name='startSpec' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
</class>
<class name='NSRecursiveLock'>
<method selector='lockBeforeDate:'>
<arg name='limit' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg name='n' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tryLock'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSRelativeSpecifier'>
<method selector='baseSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<arg name='property' declared_type='NSString*' type='@' index='2'/>
<arg name='relPos' declared_type='NSRelativePosition' type='I' type64='Q' index='3'/>
<arg name='baseSpecifier' declared_type='NSScriptObjectSpecifier*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='relativePosition'>
<retval declared_type='NSRelativePosition' type='I' type64='Q'/>
</method>
<method selector='setBaseSpecifier:'>
<arg name='baseSpecifier' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRelativePosition:'>
<arg name='relPos' declared_type='NSRelativePosition' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSRunLoop'>
<method selector='acceptInputForMode:beforeDate:'>
<arg name='mode' declared_type='NSString*' type='@' index='0'/>
<arg name='limitDate' declared_type='NSDate*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPort:forMode:'>
<arg name='aPort' declared_type='NSPort*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTimer:forMode:'>
<arg name='timer' declared_type='NSTimer*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelPerformSelector:target:argument:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='arg' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelPerformSelectorsWithTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='configureAsServer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentMode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='currentRunLoop'>
<retval declared_type='NSRunLoop*' type='@'/>
</method>
<method selector='getCFRunLoop'>
<retval declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
</method>
<method selector='limitDateForMode:'>
<arg name='mode' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='mainRunLoop'>
<retval declared_type='NSRunLoop*' type='@'/>
</method>
<method selector='performSelector:target:argument:order:modes:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='arg' declared_type='id' type='@' index='2'/>
<arg name='order' declared_type='NSUInteger' type='I' type64='Q' index='3'/>
<arg name='modes' declared_type='NSArray*' type='@' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removePort:forMode:'>
<arg name='aPort' declared_type='NSPort*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='run'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runMode:beforeDate:'>
<arg name='mode' declared_type='NSString*' type='@' index='0'/>
<arg name='limitDate' declared_type='NSDate*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='runUntilDate:'>
<arg name='limitDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScanner'>
<method selector='caseSensitive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='charactersToBeSkipped'>
<retval declared_type='NSCharacterSet*' type='@'/>
</method>
<method selector='initWithString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAtEnd'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='localizedScannerWithString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scanCharactersFromSet:intoString:'>
<arg name='set' declared_type='NSCharacterSet*' type='@' index='0'/>
<arg name='value' declared_type='NSString**' type='^@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanDecimal:'>
<arg name='dcm' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanDouble:'>
<arg name='value' declared_type='double*' type='^d' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanFloat:'>
<arg name='value' declared_type='float*' type='^f' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanHexDouble:'>
<arg name='result' declared_type='double*' type='^d' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanHexFloat:'>
<arg name='result' declared_type='float*' type='^f' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanHexInt:'>
<arg name='value' declared_type='unsigned*' type='^I' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanHexLongLong:'>
<arg name='result' declared_type='unsigned long long*' type='^Q' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanInt:'>
<arg name='value' declared_type='int*' type='^i' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanInteger:'>
<arg name='value' declared_type='NSInteger*' type='^i' type64='^q' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanLocation'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='scanLongLong:'>
<arg name='value' declared_type='long long*' type='^q' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanString:intoString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='value' declared_type='NSString**' type='^@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanUpToCharactersFromSet:intoString:'>
<arg name='set' declared_type='NSCharacterSet*' type='@' index='0'/>
<arg name='value' declared_type='NSString**' type='^@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scanUpToString:intoString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='value' declared_type='NSString**' type='^@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='scannerWithString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCaseSensitive:'>
<arg name='flag' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCharactersToBeSkipped:'>
<arg name='set' declared_type='NSCharacterSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScanLocation:'>
<arg name='pos' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSScriptClassDescription'>
<method selector='appleEventCode'>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method selector='appleEventCodeForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method class_method='true' selector='classDescriptionForClass:'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='NSScriptClassDescription*' type='@'/>
</method>
<method selector='classDescriptionForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSScriptClassDescription*' type='@'/>
</method>
<method selector='className'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='defaultSubcontainerAttributeKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasOrderedToManyRelationshipForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPropertyForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasReadablePropertyForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasWritablePropertyForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='implementationClassName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithSuiteName:className:dictionary:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<arg name='className' declared_type='NSString*' type='@' index='1'/>
<arg name='classDeclaration' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLocationRequiredToCreateForKey:'>
<arg name='toManyRelationshipKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReadOnlyKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyWithAppleEventCode:'>
<arg name='appleEventCode' declared_type='FourCharCode' type='L' type64='I' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='matchesAppleEventCode:'>
<arg name='appleEventCode' declared_type='FourCharCode' type='L' type64='I' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectorForCommand:'>
<arg name='commandDescription' declared_type='NSScriptCommandDescription*' type='@' index='0'/>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='suiteName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='superclassDescription'>
<retval declared_type='NSScriptClassDescription*' type='@'/>
</method>
<method selector='supportsCommand:'>
<arg name='commandDescription' declared_type='NSScriptCommandDescription*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='typeForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSScriptCoercionHandler'>
<method selector='coerceValue:toClass:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='toClass' declared_type='Class' type='#' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerCoercer:selector:toConvertFromClass:toClass:'>
<arg name='coercer' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<arg name='fromClass' declared_type='Class' type='#' index='2'/>
<arg name='toClass' declared_type='Class' type='#' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedCoercionHandler'>
<retval declared_type='NSScriptCoercionHandler*' type='@'/>
</method>
</class>
<class name='NSScriptCommand'>
<method selector='appleEvent'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='arguments'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='commandDescription'>
<retval declared_type='NSScriptCommandDescription*' type='@'/>
</method>
<method class_method='true' selector='currentCommand'>
<retval declared_type='NSScriptCommand*' type='@'/>
</method>
<method selector='directParameter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='evaluatedArguments'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='evaluatedReceivers'>
<retval declared_type='id' type='@'/>
</method>
<method selector='executeCommand'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCommandDescription:'>
<arg name='commandDef' declared_type='NSScriptCommandDescription*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isWellFormed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performDefaultImplementation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='receiversSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='resumeExecutionWithResult:'>
<arg name='result' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scriptErrorExpectedTypeDescriptor'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='scriptErrorNumber'>
<retval declared_type='int' type='i'/>
</method>
<method selector='scriptErrorOffendingObjectDescriptor'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='scriptErrorString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setArguments:'>
<arg name='args' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirectParameter:'>
<arg name='directParameter' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg name='receiversRef' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScriptErrorExpectedTypeDescriptor:'>
<arg name='errorExpectedTypeDescriptor' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScriptErrorNumber:'>
<arg name='errorNumber' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScriptErrorOffendingObjectDescriptor:'>
<arg name='errorOffendingObjectDescriptor' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScriptErrorString:'>
<arg name='errorString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='suspendExecution'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScriptCommandDescription'>
<method selector='appleEventClassCode'>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method selector='appleEventCode'>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method selector='appleEventCodeForArgumentWithName:'>
<arg name='argumentName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method selector='appleEventCodeForReturnType'>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method selector='argumentNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commandClassName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='commandName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='createCommandInstance'>
<retval declared_type='NSScriptCommand*' type='@'/>
</method>
<method selector='createCommandInstanceWithZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='NSScriptCommand*' type='@'/>
</method>
<method selector='initWithSuiteName:commandName:dictionary:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<arg name='commandName' declared_type='NSString*' type='@' index='1'/>
<arg name='commandDeclaration' declared_type='NSDictionary*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOptionalArgumentWithName:'>
<arg name='argumentName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='returnType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='suiteName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='typeForArgumentWithName:'>
<arg name='argumentName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSScriptExecutionContext'>
<method selector='objectBeingTested'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rangeContainerObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObjectBeingTested:'>
<arg name='obj' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRangeContainerObject:'>
<arg name='obj' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopLevelObject:'>
<arg name='obj' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedScriptExecutionContext'>
<retval declared_type='NSScriptExecutionContext*' type='@'/>
</method>
<method selector='topLevelObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSScriptObjectSpecifier'>
<method selector='childSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='containerClassDescription'>
<retval declared_type='NSScriptClassDescription*' type='@'/>
</method>
<method selector='containerIsObjectBeingTested'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containerIsRangeContainerObject'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containerSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='descriptor'>
<retval declared_type='NSAppleEventDescriptor*' type='@'/>
</method>
<method selector='evaluationErrorNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='evaluationErrorSpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='indicesOfObjectsByEvaluatingWithContainer:count:'>
<arg name='container' declared_type='id' type='@' index='0'/>
<arg name='count' declared_type='NSInteger*' type='^i' type64='^q' index='1'/>
<retval declared_type='NSInteger*' type='^i' type64='^q'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<arg name='property' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContainerSpecifier:key:'>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<arg name='property' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='keyClassDescription'>
<retval declared_type='NSScriptClassDescription*' type='@'/>
</method>
<method class_method='true' selector='objectSpecifierWithDescriptor:'>
<arg name='descriptor' declared_type='NSAppleEventDescriptor*' type='@' index='0'/>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='objectsByEvaluatingSpecifier'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectsByEvaluatingWithContainers:'>
<arg name='containers' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setChildSpecifier:'>
<arg name='child' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContainerClassDescription:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContainerIsObjectBeingTested:'>
<arg name='flag' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContainerIsRangeContainerObject:'>
<arg name='flag' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContainerSpecifier:'>
<arg name='subRef' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEvaluationErrorNumber:'>
<arg name='error' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScriptSuiteRegistry'>
<method selector='aeteResource:'>
<arg name='languageName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='appleEventCodeForSuite:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='FourCharCode' type='L' type64='I'/>
</method>
<method selector='bundleForSuite:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='classDescriptionWithAppleEventCode:'>
<arg name='appleEventCode' declared_type='FourCharCode' type='L' type64='I' index='0'/>
<retval declared_type='NSScriptClassDescription*' type='@'/>
</method>
<method selector='classDescriptionsInSuite:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='commandDescriptionWithAppleEventClass:andAppleEventCode:'>
<arg name='appleEventClassCode' declared_type='FourCharCode' type='L' type64='I' index='0'/>
<arg name='appleEventIDCode' declared_type='FourCharCode' type='L' type64='I' index='1'/>
<retval declared_type='NSScriptCommandDescription*' type='@'/>
</method>
<method selector='commandDescriptionsInSuite:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='loadSuiteWithDictionary:fromBundle:'>
<arg name='suiteDeclaration' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='bundle' declared_type='NSBundle*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadSuitesFromBundle:'>
<arg name='bundle' declared_type='NSBundle*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerClassDescription:'>
<arg name='classDescription' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerCommandDescription:'>
<arg name='commandDescription' declared_type='NSScriptCommandDescription*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedScriptSuiteRegistry:'>
<arg name='registry' declared_type='NSScriptSuiteRegistry*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedScriptSuiteRegistry'>
<retval declared_type='NSScriptSuiteRegistry*' type='@'/>
</method>
<method selector='suiteForAppleEventCode:'>
<arg name='appleEventCode' declared_type='FourCharCode' type='L' type64='I' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='suiteNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSScriptWhoseTest'>
<method selector='isTrue'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSSet'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<arg name='options' declared_type='NSKeyValueObservingOptions' type='I' type64='Q' index='2'/>
<arg name='context' declared_type='void*' type='^v' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='anyObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='containsObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='descriptionWithLocale:'>
<arg name='locale' declared_type='id' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filteredSetUsingPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' type='@' index='0'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='initWithArray:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='initWithObjects:'>
<arg name='initWithObjects' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithObjects:count:'>
<arg name='objects' declared_type='id*' type='^@' index='0'/>
<arg name='cnt' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSet:'>
<arg name='set' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg name='set' declared_type='NSSet*' type='@' index='0'/>
<arg name='flag' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intersectsSet:'>
<arg name='otherSet' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToSet:'>
<arg name='otherSet' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSubsetOfSet:'>
<arg name='otherSet' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg name='aSelector' declared_type='SEL' type=':' index='0'/>
<arg name='argument' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='member:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg name='observer' declared_type='NSObject*' type='@' index='0'/>
<arg name='keyPath' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='set'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setByAddingObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setByAddingObjectsFromArray:'>
<arg name='other' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setByAddingObjectsFromSet:'>
<arg name='other' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setValue:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setWithArray:'>
<arg name='array' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setWithObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' variadic='true' selector='setWithObjects:'>
<arg name='setWithObjects' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setWithObjects:count:'>
<arg name='objects' declared_type='id*' type='^@' index='0'/>
<arg name='cnt' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setWithSet:'>
<arg name='set' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSSetCommand'>
<method selector='keySpecifier'>
<retval declared_type='NSScriptObjectSpecifier*' type='@'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg name='receiversRef' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSocketPort'>
<method selector='address'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initRemoteWithProtocolFamily:socketType:protocol:address:'>
<arg name='family' declared_type='int' type='i' index='0'/>
<arg name='type' declared_type='int' type='i' index='1'/>
<arg name='protocol' declared_type='int' type='i' index='2'/>
<arg name='address' declared_type='NSData*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initRemoteWithTCPPort:host:'>
<arg name='port' declared_type='unsigned short' type='S' index='0'/>
<arg name='hostName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:address:'>
<arg name='family' declared_type='int' type='i' index='0'/>
<arg name='type' declared_type='int' type='i' index='1'/>
<arg name='protocol' declared_type='int' type='i' index='2'/>
<arg name='address' declared_type='NSData*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:socket:'>
<arg name='family' declared_type='int' type='i' index='0'/>
<arg name='type' declared_type='int' type='i' index='1'/>
<arg name='protocol' declared_type='int' type='i' index='2'/>
<arg name='sock' declared_type='NSSocketNativeHandle' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTCPPort:'>
<arg name='port' declared_type='unsigned short' type='S' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='protocol'>
<retval declared_type='int' type='i'/>
</method>
<method selector='protocolFamily'>
<retval declared_type='int' type='i'/>
</method>
<method selector='socket'>
<retval declared_type='NSSocketNativeHandle' type='i'/>
</method>
<method selector='socketType'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='NSSocketPortNameServer'>
<method selector='defaultNameServerPortNumber'>
<retval declared_type='uint16_t' type='S'/>
</method>
<method selector='portForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='portForName:host:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='host' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='portForName:host:nameServerPortNumber:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='host' declared_type='NSString*' type='@' index='1'/>
<arg name='portNumber' declared_type='uint16_t' type='S' index='2'/>
<retval declared_type='NSPort*' type='@'/>
</method>
<method selector='registerPort:name:'>
<arg name='port' declared_type='NSPort*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='registerPort:name:nameServerPortNumber:'>
<arg name='port' declared_type='NSPort*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='portNumber' declared_type='uint16_t' type='S' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removePortForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDefaultNameServerPortNumber:'>
<arg name='portNumber' declared_type='uint16_t' type='S' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSSortDescriptor'>
<method selector='ascending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compareObject:toObject:'>
<arg name='object1' declared_type='id' type='@' index='0'/>
<arg name='object2' declared_type='id' type='@' index='1'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='initWithKey:ascending:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='ascending' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithKey:ascending:selector:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='ascending' declared_type='BOOL' type='B' index='1'/>
<arg name='selector' declared_type='SEL' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reversedSortDescriptor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='selector'>
<retval declared_type='SEL' type=':'/>
</method>
</class>
<class name='NSSpecifierTest'>
<method selector='initWithObjectSpecifier:comparisonOperator:testObject:'>
<arg name='obj1' declared_type='NSScriptObjectSpecifier*' type='@' index='0'/>
<arg name='compOp' declared_type='NSTestComparisonOperation' type='I' type64='Q' index='1'/>
<arg name='obj2' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSSpellServer'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isWordInUserDictionaries:caseSensitive:'>
<arg name='word' declared_type='NSString*' type='@' index='0'/>
<arg name='flag' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='registerLanguage:byVendor:'>
<arg name='language' declared_type='NSString*' type='@' index='0'/>
<arg name='vendor' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='run'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSStream'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='getStreamsToHost:port:inputStream:outputStream:'>
<arg name='host' declared_type='NSHost*' type='@' index='0'/>
<arg name='port' declared_type='NSInteger' type='i' type64='q' index='1'/>
<arg name='inputStream' declared_type='NSInputStream**' type='^@' index='2'/>
<arg name='outputStream' declared_type='NSOutputStream**' type='^@' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='open'>
<retval declared_type='void' type='v'/>
</method>
<method selector='propertyForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperty:forKey:'>
<arg name='property' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='streamError'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='streamStatus'>
<retval declared_type='NSStreamStatus' type='I' type64='Q'/>
</method>
</class>
<class name='NSString'>
<method selector='UTF8String'>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method class_method='true' selector='availableStringEncodings'>
<retval declared_type='NSStringEncoding*' type='^I' type64='^Q' const='true'/>
</method>
<method selector='boolValue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cString'>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='cStringLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='cStringUsingEncoding:'>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='canBeConvertedToEncoding:'>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='capitalizedString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='caseInsensitiveCompare:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='characterAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='unichar' type='S'/>
</method>
<method selector='commonPrefixWithString:options:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='compare:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='compare:options:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='compare:options:range:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<arg name='compareRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='compare:options:range:locale:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<arg name='compareRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<arg name='locale' declared_type='id' type='@' index='3'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'>
<arg name='outputName' declared_type='NSString**' type='^@' index='0'/>
<arg name='flag' declared_type='BOOL' type='B' index='1'/>
<arg name='outputArray' declared_type='NSArray**' type='^@' index='2'/>
<arg name='filterTypes' declared_type='NSArray*' type='@' index='3'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='componentsSeparatedByCharactersInSet:'>
<arg name='separator' declared_type='NSCharacterSet*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='componentsSeparatedByString:'>
<arg name='separator' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='dataUsingEncoding:'>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataUsingEncoding:allowLossyConversion:'>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<arg name='lossy' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='decomposedStringWithCanonicalMapping'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='decomposedStringWithCompatibilityMapping'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='defaultCStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='fastestEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='fileSystemRepresentation'>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='floatValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'>
<arg name='buffer' declared_type='void*' type='^v' index='0'/>
<arg name='maxBufferCount' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='usedBufferCount' declared_type='NSUInteger*' type='^I' type64='^Q' index='2'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='3'/>
<arg name='options' declared_type='NSStringEncodingConversionOptions' type='I' type64='Q' index='4'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='5'/>
<arg name='leftover' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='6'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getCString:'>
<arg name='bytes' declared_type='char*' type='*' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getCString:maxLength:'>
<arg name='bytes' declared_type='char*' type='*' index='0'/>
<arg name='maxLength' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getCString:maxLength:encoding:'>
<arg name='buffer' declared_type='char*' type='*' index='0'/>
<arg name='maxBufferCount' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getCString:maxLength:range:remainingRange:'>
<arg name='bytes' declared_type='char*' type='*' index='0'/>
<arg name='maxLength' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='aRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<arg name='leftoverRange' declared_type='NSRangePointer' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getCharacters:'>
<arg name='buffer' declared_type='unichar*' type='^S' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getCharacters:range:'>
<arg name='buffer' declared_type='unichar*' type='^S' index='0'/>
<arg name='aRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getFileSystemRepresentation:maxLength:'>
<arg name='cname' declared_type='char*' type='*' index='0'/>
<arg name='max' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getLineStart:end:contentsEnd:forRange:'>
<arg name='startPtr' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<arg name='lineEndPtr' declared_type='NSUInteger*' type='^I' type64='^Q' index='1'/>
<arg name='contentsEndPtr' declared_type='NSUInteger*' type='^I' type64='^Q' index='2'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getParagraphStart:end:contentsEnd:forRange:'>
<arg name='startPtr' declared_type='NSUInteger*' type='^I' type64='^Q' index='0'/>
<arg name='parEndPtr' declared_type='NSUInteger*' type='^I' type64='^Q' index='1'/>
<arg name='contentsEndPtr' declared_type='NSUInteger*' type='^I' type64='^Q' index='2'/>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasPrefix:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasSuffix:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hash'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBytes:length:encoding:'>
<arg name='bytes' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='len' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method ignore='true' suggestion='Call initWithBytes:length:encoding:.' selector='initWithBytesNoCopy:length:encoding:freeWhenDone:'>
<arg name='bytes' declared_type='void*' type='^v' index='0'/>
<arg name='len' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='2'/>
<arg name='freeBuffer' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCString:'>
<arg name='bytes' declared_type='char*' type='*' const='true' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCString:encoding:'>
<arg name='nullTerminatedCString' declared_type='char*' type='*' const='true' index='0'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCString:length:'>
<arg name='bytes' declared_type='char*' type='*' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCStringNoCopy:length:freeWhenDone:'>
<arg name='bytes' declared_type='char*' type='*' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='freeBuffer' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCharacters:length:'>
<arg name='characters' declared_type='unichar*' type='^S' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method ignore='true' suggestion='Call initWithCharacters:length:.' selector='initWithCharactersNoCopy:length:freeWhenDone:'>
<arg name='characters' declared_type='unichar*' type='^S' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='freeBuffer' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfFile:encoding:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfFile:usedEncoding:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding*' type='^I' type64='^Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:encoding:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:usedEncoding:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding*' type='^I' type64='^Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:encoding:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='initWithFormat:'>
<arg name='initWithFormat' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFormat:arguments:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<arg name='argList' declared_type='va_list' type='*' type64='[1{?=II^v^v}]' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method variadic='true' selector='initWithFormat:locale:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<arg name='locale' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFormat:locale:arguments:'>
<arg name='format' declared_type='NSString*' type='@' index='0'/>
<arg name='locale' declared_type='id' type='@' index='1'/>
<arg name='argList' declared_type='va_list' type='*' type64='[1{?=II^v^v}]' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUTF8String:'>
<arg name='nullTerminatedCString' declared_type='char*' type='*' const='true' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intValue'>
<retval declared_type='int' type='i'/>
</method>
<method selector='integerValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='isAbsolutePath'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastPathComponent'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='length'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='lengthOfBytesUsingEncoding:'>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='lineRangeForRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='localizedCaseInsensitiveCompare:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='localizedCompare:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method class_method='true' selector='localizedNameOfStringEncoding:'>
<arg name='encoding' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' variadic='true' selector='localizedStringWithFormat:'>
<arg name='localizedStringWithFormat' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='longLongValue'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='lossyCString'>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='lowercaseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maximumLengthOfBytesUsingEncoding:'>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='paragraphRangeForRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='pathComponents'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pathExtension'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='pathWithComponents:'>
<arg name='components' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='precomposedStringWithCanonicalMapping'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='precomposedStringWithCompatibilityMapping'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='propertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='propertyListFromStringsFileFormat'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='rangeOfCharacterFromSet:'>
<arg name='aSet' declared_type='NSCharacterSet*' type='@' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfCharacterFromSet:options:'>
<arg name='aSet' declared_type='NSCharacterSet*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfCharacterFromSet:options:range:'>
<arg name='aSet' declared_type='NSCharacterSet*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<arg name='searchRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfComposedCharacterSequenceAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfComposedCharacterSequencesForRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfString:options:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfString:options:range:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<arg name='searchRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfString:options:range:locale:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSStringCompareOptions' type='I' type64='Q' index='1'/>
<arg name='searchRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='2'/>
<arg name='locale' declared_type='NSLocale*' type='@' index='3'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='smallestEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method class_method='true' selector='string'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringByAbbreviatingWithTildeInPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByAddingPercentEscapesUsingEncoding:'>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method variadic='true' selector='stringByAppendingFormat:'>
<arg name='stringByAppendingFormat' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByAppendingPathComponent:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByAppendingPathExtension:'>
<arg name='str' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByAppendingString:'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByDeletingLastPathComponent'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByDeletingPathExtension'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByExpandingTildeInPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByFoldingWithOptions:locale:'>
<arg name='options' declared_type='NSStringCompareOptions' type='I' type64='Q' index='0'/>
<arg name='locale' declared_type='NSLocale*' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByPaddingToLength:withString:startingAtIndex:'>
<arg name='newLength' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='padString' declared_type='NSString*' type='@' index='1'/>
<arg name='padIndex' declared_type='NSUInteger' type='I' type64='Q' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByReplacingCharactersInRange:withString:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<arg name='replacement' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:'>
<arg name='target' declared_type='NSString*' type='@' index='0'/>
<arg name='replacement' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:options:range:'>
<arg name='target' declared_type='NSString*' type='@' index='0'/>
<arg name='replacement' declared_type='NSString*' type='@' index='1'/>
<arg name='options' declared_type='NSStringCompareOptions' type='I' type64='Q' index='2'/>
<arg name='searchRange' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='3'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByReplacingPercentEscapesUsingEncoding:'>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByResolvingSymlinksInPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByStandardizingPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByTrimmingCharactersInSet:'>
<arg name='set' declared_type='NSCharacterSet*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringWithCString:'>
<arg name='bytes' declared_type='char*' type='*' const='true' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithCString:encoding:'>
<arg name='cString' declared_type='char*' type='*' const='true' index='0'/>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithCString:length:'>
<arg name='bytes' declared_type='char*' type='*' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithCharacters:length:'>
<arg name='characters' declared_type='unichar*' type='^S' const='true' index='0'/>
<arg name='length' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:encoding:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:usedEncoding:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding*' type='^I' type64='^Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:encoding:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:usedEncoding:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='enc' declared_type='NSStringEncoding*' type='^I' type64='^Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' variadic='true' selector='stringWithFormat:'>
<arg name='stringWithFormat' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringWithUTF8String:'>
<arg name='nullTerminatedCString' declared_type='char*' type='*' const='true' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringsByAppendingPaths:'>
<arg name='paths' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='substringFromIndex:'>
<arg name='from' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='substringToIndex:'>
<arg name='to' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='substringWithRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='uppercaseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='writeToFile:atomically:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='useAuxiliaryFile' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToFile:atomically:encoding:error:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='useAuxiliaryFile' declared_type='BOOL' type='B' index='1'/>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='2'/>
<arg name='error' declared_type='NSError**' type='^@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:atomically:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='atomically' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:atomically:encoding:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='useAuxiliaryFile' declared_type='BOOL' type='B' index='1'/>
<arg name='enc' declared_type='NSStringEncoding' type='I' type64='Q' index='2'/>
<arg name='error' declared_type='NSError**' type='^@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSTask'>
<method selector='arguments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='currentDirectoryPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='environment'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='interrupt'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='launch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='launchPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='launchedTaskWithLaunchPath:arguments:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='arguments' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='NSTask*' type='@'/>
</method>
<method selector='processIdentifier'>
<retval declared_type='int' type='i'/>
</method>
<method selector='resume'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setArguments:'>
<arg name='arguments' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentDirectoryPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnvironment:'>
<arg name='dict' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLaunchPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandardError:'>
<arg name='error' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandardInput:'>
<arg name='input' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandardOutput:'>
<arg name='output' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='standardError'>
<retval declared_type='id' type='@'/>
</method>
<method selector='standardInput'>
<retval declared_type='id' type='@'/>
</method>
<method selector='standardOutput'>
<retval declared_type='id' type='@'/>
</method>
<method selector='suspend'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='terminate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='terminationStatus'>
<retval declared_type='int' type='i'/>
</method>
<method selector='waitUntilExit'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSThread'>
<method class_method='true' selector='callStackReturnAddresses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='currentThread'>
<retval declared_type='NSThread*' type='@'/>
</method>
<method class_method='true' selector='detachNewThreadSelector:toTarget:withObject:'>
<arg name='selector' declared_type='SEL' type=':' index='0'/>
<arg name='target' declared_type='id' type='@' index='1'/>
<arg name='argument' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='exit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<arg name='argument' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isCancelled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExecuting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFinished'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isMainThread'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMainThread'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isMultiThreaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='main'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='mainThread'>
<retval declared_type='NSThread*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg name='n' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStackSize:'>
<arg name='s' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setThreadPriority:'>
<arg name='p' declared_type='double' type='d' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sleepForTimeInterval:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sleepUntilDate:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stackSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method selector='threadDictionary'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method class_method='true' selector='threadPriority'>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='NSTimeZone'>
<method selector='abbreviation'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='abbreviationDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='abbreviationForDate:'>
<arg name='aDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='daylightSavingTimeOffset'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='daylightSavingTimeOffsetForDate:'>
<arg name='aDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='defaultTimeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithName:'>
<arg name='tzName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithName:data:'>
<arg name='tzName' declared_type='NSString*' type='@' index='0'/>
<arg name='aData' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDaylightSavingTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDaylightSavingTimeForDate:'>
<arg name='aDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToTimeZone:'>
<arg name='aTimeZone' declared_type='NSTimeZone*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='knownTimeZoneNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='localTimeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='localizedName:locale:'>
<arg name='style' declared_type='NSTimeZoneNameStyle' type='i' type64='q' index='0'/>
<arg name='locale' declared_type='NSLocale*' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nextDaylightSavingTimeTransition'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='nextDaylightSavingTimeTransitionAfterDate:'>
<arg name='aDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='resetSystemTimeZone'>
<retval declared_type='void' type='v'/>
</method>
<method selector='secondsFromGMT'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='secondsFromGMTForDate:'>
<arg name='aDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='setDefaultTimeZone:'>
<arg name='aTimeZone' declared_type='NSTimeZone*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='systemTimeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method class_method='true' selector='timeZoneForSecondsFromGMT:'>
<arg name='seconds' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timeZoneWithAbbreviation:'>
<arg name='abbreviation' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timeZoneWithName:'>
<arg name='tzName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timeZoneWithName:data:'>
<arg name='tzName' declared_type='NSString*' type='@' index='0'/>
<arg name='aData' declared_type='NSData*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSTimer'>
<method selector='fire'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fireDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='initWithFireDate:interval:target:selector:userInfo:repeats:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='1'/>
<arg name='t' declared_type='id' type='@' index='2'/>
<arg name='s' declared_type='SEL' type=':' index='3'/>
<arg name='ui' declared_type='id' type='@' index='4'/>
<arg name='rep' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:invocation:repeats:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<arg name='invocation' declared_type='NSInvocation*' type='@' index='1'/>
<arg name='yesOrNo' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<arg name='aTarget' declared_type='id' type='@' index='1'/>
<arg name='aSelector' declared_type='SEL' type=':' index='2'/>
<arg name='userInfo' declared_type='id' type='@' index='3'/>
<arg name='yesOrNo' declared_type='BOOL' type='B' index='4'/>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method selector='setFireDate:'>
<arg name='date' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:invocation:repeats:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<arg name='invocation' declared_type='NSInvocation*' type='@' index='1'/>
<arg name='yesOrNo' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg name='ti' declared_type='NSTimeInterval' type='d' index='0'/>
<arg name='aTarget' declared_type='id' type='@' index='1'/>
<arg name='aSelector' declared_type='SEL' type=':' index='2'/>
<arg name='userInfo' declared_type='id' type='@' index='3'/>
<arg name='yesOrNo' declared_type='BOOL' type='B' index='4'/>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSURL'>
<method selector='URLHandleUsingCache:'>
<arg name='shouldUseCache' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='NSURLHandle*' type='@'/>
</method>
<method class_method='true' selector='URLWithString:'>
<arg name='URLString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='URLWithString:relativeToURL:'>
<arg name='URLString' declared_type='NSString*' type='@' index='0'/>
<arg name='baseURL' declared_type='NSURL*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='absoluteString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='absoluteURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method class_method='true' selector='fileURLWithPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fileURLWithPath:isDirectory:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='isDir' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='fragment'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='host'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initFileURLWithPath:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFileURLWithPath:isDirectory:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='isDir' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithScheme:host:path:'>
<arg name='scheme' declared_type='NSString*' type='@' index='0'/>
<arg name='host' declared_type='NSString*' type='@' index='1'/>
<arg name='path' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:'>
<arg name='URLString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:relativeToURL:'>
<arg name='URLString' declared_type='NSString*' type='@' index='0'/>
<arg name='baseURL' declared_type='NSURL*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFileURL'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadResourceDataNotifyingClient:usingCache:'>
<arg name='client' declared_type='id' type='@' index='0'/>
<arg name='shouldUseCache' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parameterString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='port'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='propertyForKey:'>
<arg name='propertyKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='relativePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='relativeString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='resourceDataUsingCache:'>
<arg name='shouldUseCache' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='resourceSpecifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='scheme'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setProperty:forKey:'>
<arg name='property' declared_type='id' type='@' index='0'/>
<arg name='propertyKey' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setResourceData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='standardizedURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='user'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSURLAuthenticationChallenge'>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='failureResponse'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='initWithAuthenticationChallenge:sender:'>
<arg name='challenge' declared_type='NSURLAuthenticationChallenge*' type='@' index='0'/>
<arg name='sender' declared_type='id&lt;NSURLAuthenticationChallengeSender&gt;' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:'>
<arg name='space' declared_type='NSURLProtectionSpace*' type='@' index='0'/>
<arg name='credential' declared_type='NSURLCredential*' type='@' index='1'/>
<arg name='previousFailureCount' declared_type='NSInteger' type='i' type64='q' index='2'/>
<arg name='response' declared_type='NSURLResponse*' type='@' index='3'/>
<arg name='error' declared_type='NSError*' type='@' index='4'/>
<arg name='sender' declared_type='id&lt;NSURLAuthenticationChallengeSender&gt;' type='@' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='previousFailureCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='proposedCredential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='protectionSpace'>
<retval declared_type='NSURLProtectionSpace*' type='@'/>
</method>
<method selector='sender'>
<retval declared_type='id&lt;NSURLAuthenticationChallengeSender&gt;' type='@'/>
</method>
</class>
<class name='NSURLCache'>
<method selector='cachedResponseForRequest:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</method>
<method selector='currentDiskUsage'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='currentMemoryUsage'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='diskCapacity'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithMemoryCapacity:diskCapacity:diskPath:'>
<arg name='memoryCapacity' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='diskCapacity' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='path' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='memoryCapacity'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='removeAllCachedResponses'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCachedResponseForRequest:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDiskCapacity:'>
<arg name='diskCapacity' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMemoryCapacity:'>
<arg name='memoryCapacity' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedURLCache:'>
<arg name='cache' declared_type='NSURLCache*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedURLCache'>
<retval declared_type='NSURLCache*' type='@'/>
</method>
<method selector='storeCachedResponse:forRequest:'>
<arg name='cachedResponse' declared_type='NSCachedURLResponse*' type='@' index='0'/>
<arg name='request' declared_type='NSURLRequest*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSURLConnection'>
<method class_method='true' selector='canHandleRequest:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='connectionWithRequest:delegate:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='delegate' declared_type='id' type='@' index='1'/>
<retval declared_type='NSURLConnection*' type='@'/>
</method>
<method selector='initWithRequest:delegate:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='delegate' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRequest:delegate:startImmediately:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='delegate' declared_type='id' type='@' index='1'/>
<arg name='startImmediately' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sendSynchronousRequest:returningResponse:error:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='response' declared_type='NSURLResponse**' type='^@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleFromRunLoop:forMode:'>
<arg name='aRunLoop' declared_type='NSRunLoop*' type='@' index='0'/>
<arg name='mode' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSURLCredential'>
<method class_method='true' selector='credentialWithUser:password:persistence:'>
<arg name='user' declared_type='NSString*' type='@' index='0'/>
<arg name='password' declared_type='NSString*' type='@' index='1'/>
<arg name='persistence' declared_type='NSURLCredentialPersistence' type='I' type64='Q' index='2'/>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='hasPassword'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithUser:password:persistence:'>
<arg name='user' declared_type='NSString*' type='@' index='0'/>
<arg name='password' declared_type='NSString*' type='@' index='1'/>
<arg name='persistence' declared_type='NSURLCredentialPersistence' type='I' type64='Q' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='persistence'>
<retval declared_type='NSURLCredentialPersistence' type='I' type64='Q'/>
</method>
<method selector='user'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSURLCredentialStorage'>
<method selector='allCredentials'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='credentialsForProtectionSpace:'>
<arg name='space' declared_type='NSURLProtectionSpace*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='defaultCredentialForProtectionSpace:'>
<arg name='space' declared_type='NSURLProtectionSpace*' type='@' index='0'/>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='removeCredential:forProtectionSpace:'>
<arg name='credential' declared_type='NSURLCredential*' type='@' index='0'/>
<arg name='space' declared_type='NSURLProtectionSpace*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:forProtectionSpace:'>
<arg name='credential' declared_type='NSURLCredential*' type='@' index='0'/>
<arg name='space' declared_type='NSURLProtectionSpace*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCredential:forProtectionSpace:'>
<arg name='credential' declared_type='NSURLCredential*' type='@' index='0'/>
<arg name='space' declared_type='NSURLProtectionSpace*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedCredentialStorage'>
<retval declared_type='NSURLCredentialStorage*' type='@'/>
</method>
</class>
<class name='NSURLDownload'>
<method class_method='true' selector='canResumeDownloadDecodedWithEncodingMIMEType:'>
<arg name='MIMEType' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deletesFileUponFailure'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRequest:delegate:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='delegate' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithResumeData:delegate:path:'>
<arg name='resumeData' declared_type='NSData*' type='@' index='0'/>
<arg name='delegate' declared_type='id' type='@' index='1'/>
<arg name='path' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='resumeData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='setDeletesFileUponFailure:'>
<arg name='deletesFileUponFailure' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestination:allowOverwrite:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='allowOverwrite' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSURLHandle'>
<method class_method='true' selector='URLHandleClassForURL:'>
<arg name='anURL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='addClient:'>
<arg name='client' declared_type='id &lt;NSURLHandleClient&gt;' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='availableResourceData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='backgroundLoadDidFailWithReason:'>
<arg name='reason' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginLoadInBackground'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='cachedHandleForURL:'>
<arg name='anURL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='NSURLHandle*' type='@'/>
</method>
<method class_method='true' selector='canInitWithURL:'>
<arg name='anURL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelLoadInBackground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didLoadBytes:loadComplete:'>
<arg name='newBytes' declared_type='NSData*' type='@' index='0'/>
<arg name='yorn' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endLoadInBackground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='expectedResourceDataSize'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='failureReason'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='flushCachedData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithURL:cached:'>
<arg name='anURL' declared_type='NSURL*' type='@' index='0'/>
<arg name='willCache' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loadInBackground'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadInForeground'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='propertyForKey:'>
<arg name='propertyKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='propertyForKeyIfAvailable:'>
<arg name='propertyKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='registerURLHandleClass:'>
<arg name='anURLHandleSubclass' declared_type='Class' type='#' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeClient:'>
<arg name='client' declared_type='id &lt;NSURLHandleClient&gt;' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resourceData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='status'>
<retval declared_type='NSURLHandleStatus' type='I' type64='Q'/>
</method>
<method selector='writeData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeProperty:forKey:'>
<arg name='propertyValue' declared_type='id' type='@' index='0'/>
<arg name='propertyKey' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSURLProtectionSpace'>
<method selector='authenticationMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='host'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithHost:port:protocol:realm:authenticationMethod:'>
<arg name='host' declared_type='NSString*' type='@' index='0'/>
<arg name='port' declared_type='NSInteger' type='i' type64='q' index='1'/>
<arg name='protocol' declared_type='NSString*' type='@' index='2'/>
<arg name='realm' declared_type='NSString*' type='@' index='3'/>
<arg name='authenticationMethod' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithProxyHost:port:type:realm:authenticationMethod:'>
<arg name='host' declared_type='NSString*' type='@' index='0'/>
<arg name='port' declared_type='NSInteger' type='i' type64='q' index='1'/>
<arg name='type' declared_type='NSString*' type='@' index='2'/>
<arg name='realm' declared_type='NSString*' type='@' index='3'/>
<arg name='authenticationMethod' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isProxy'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='port'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='protocol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='proxyType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='realm'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='receivesCredentialSecurely'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSURLProtocol'>
<method selector='cachedResponse'>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</method>
<method class_method='true' selector='canInitWithRequest:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='canonicalRequestForRequest:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='client'>
<retval declared_type='id &lt;NSURLProtocolClient&gt;' type='@'/>
</method>
<method selector='initWithRequest:cachedResponse:client:'>
<arg name='request' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='cachedResponse' declared_type='NSCachedURLResponse*' type='@' index='1'/>
<arg name='client' declared_type='id &lt;NSURLProtocolClient&gt;' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='propertyForKey:inRequest:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='request' declared_type='NSURLRequest*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='registerClass:'>
<arg name='protocolClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='removePropertyForKey:inRequest:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='request' declared_type='NSMutableURLRequest*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method class_method='true' selector='requestIsCacheEquivalent:toRequest:'>
<arg name='a' declared_type='NSURLRequest*' type='@' index='0'/>
<arg name='b' declared_type='NSURLRequest*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setProperty:forKey:inRequest:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='request' declared_type='NSMutableURLRequest*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startLoading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopLoading'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='unregisterClass:'>
<arg name='protocolClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSURLRequest'>
<method selector='HTTPBody'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='HTTPBodyStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='HTTPMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='HTTPShouldHandleCookies'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='allHTTPHeaderFields'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='cachePolicy'>
<retval declared_type='NSURLRequestCachePolicy' type='I' type64='Q'/>
</method>
<method selector='initWithURL:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:cachePolicy:timeoutInterval:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<arg name='cachePolicy' declared_type='NSURLRequestCachePolicy' type='I' type64='Q' index='1'/>
<arg name='timeoutInterval' declared_type='NSTimeInterval' type='d' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainDocumentURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method class_method='true' selector='requestWithURL:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='requestWithURL:cachePolicy:timeoutInterval:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<arg name='cachePolicy' declared_type='NSURLRequestCachePolicy' type='I' type64='Q' index='1'/>
<arg name='timeoutInterval' declared_type='NSTimeInterval' type='d' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='timeoutInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='valueForHTTPHeaderField:'>
<arg name='field' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSURLResponse'>
<method selector='MIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='expectedContentLength'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='initWithURL:MIMEType:expectedContentLength:textEncodingName:'>
<arg name='URL' declared_type='NSURL*' type='@' index='0'/>
<arg name='MIMEType' declared_type='NSString*' type='@' index='1'/>
<arg name='length' declared_type='NSInteger' type='i' type64='q' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='suggestedFilename'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='textEncodingName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSUnarchiver'>
<method class_method='true' selector='classNameDecodedForArchiveClassName:'>
<arg name='inArchiveName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='classNameDecodedForArchiveClassName:'>
<arg name='inArchiveName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='decodeClassName:asClassName:'>
<arg name='inArchiveName' declared_type='NSString*' type='@' index='0'/>
<arg name='trueName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='decodeClassName:asClassName:'>
<arg name='inArchiveName' declared_type='NSString*' type='@' index='0'/>
<arg name='trueName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initForReadingWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAtEnd'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectZone'>
<retval declared_type='NSZone*' type='^{_NSZone=}'/>
</method>
<method selector='replaceObject:withObject:'>
<arg name='object' declared_type='id' type='@' index='0'/>
<arg name='newObject' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectZone:'>
<arg name='zone' declared_type='NSZone*' type='^{_NSZone=}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='systemVersion'>
<retval declared_type='unsigned' type='I'/>
</method>
<method class_method='true' selector='unarchiveObjectWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='unarchiveObjectWithFile:'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSUndoManager'>
<method selector='beginUndoGrouping'>
<retval declared_type='void' type='v'/>
</method>
<method selector='canRedo'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canUndo'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='disableUndoRegistration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableUndoRegistration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endUndoGrouping'>
<retval declared_type='void' type='v'/>
</method>
<method selector='groupingLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='groupsByEvent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRedoing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUndoRegistrationEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUndoing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='levelsOfUndo'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='prepareWithInvocationTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='redo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='redoActionName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='redoMenuItemTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='redoMenuTitleForUndoActionName:'>
<arg name='actionName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='registerUndoWithTarget:selector:object:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<arg name='selector' declared_type='SEL' type=':' index='1'/>
<arg name='anObject' declared_type='id' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActionsWithTarget:'>
<arg name='target' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setActionName:'>
<arg name='actionName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupsByEvent:'>
<arg name='groupsByEvent' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevelsOfUndo:'>
<arg name='levels' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg name='runLoopModes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='undo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='undoActionName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='undoMenuItemTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='undoMenuTitleForUndoActionName:'>
<arg name='actionName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='undoNestedGroup'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSUniqueIDSpecifier'>
<method selector='initWithContainerClassDescription:containerSpecifier:key:uniqueID:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<arg name='property' declared_type='NSString*' type='@' index='2'/>
<arg name='uniqueID' declared_type='id' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setUniqueID:'>
<arg name='uniqueID' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='uniqueID'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSUserDefaults'>
<method selector='addSuiteNamed:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='boolForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dictionaryForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='doubleForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='floatForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUser:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='integerForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='objectForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectIsForcedForKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectIsForcedForKey:inDomain:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<arg name='domain' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='persistentDomainForName:'>
<arg name='domainName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='persistentDomainNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='registerDefaults:'>
<arg name='registrationDictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removePersistentDomainForName:'>
<arg name='domainName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSuiteNamed:'>
<arg name='suiteName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeVolatileDomainForName:'>
<arg name='domainName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='resetStandardUserDefaults'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBool:forKey:'>
<arg name='value' declared_type='BOOL' type='B' index='0'/>
<arg name='defaultName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDouble:forKey:'>
<arg name='value' declared_type='double' type='d' index='0'/>
<arg name='defaultName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloat:forKey:'>
<arg name='value' declared_type='float' type='f' index='0'/>
<arg name='defaultName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInteger:forKey:'>
<arg name='value' declared_type='NSInteger' type='i' type64='q' index='0'/>
<arg name='defaultName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKey:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<arg name='defaultName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentDomain:forName:'>
<arg name='domain' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='domainName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolatileDomain:forName:'>
<arg name='domain' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='domainName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='standardUserDefaults'>
<retval declared_type='NSUserDefaults*' type='@'/>
</method>
<method selector='stringArrayForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='stringForKey:'>
<arg name='defaultName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='synchronize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='volatileDomainForName:'>
<arg name='domainName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='volatileDomainNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSValue'>
<method selector='getValue:'>
<arg name='value' declared_type='void*' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBytes:objCType:'>
<arg name='value' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='type' declared_type='char*' type='*' const='true' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToValue:'>
<arg name='value' declared_type='NSValue*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nonretainedObjectValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objCType'>
<retval declared_type='char*' type='*' const='true'/>
</method>
<method selector='pointValue'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='pointerValue'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='rangeValue'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rectValue'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sizeValue'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='value:withObjCType:'>
<arg name='value' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='type' declared_type='char*' type='*' const='true' index='1'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithBytes:objCType:'>
<arg name='value' declared_type='void*' type='^v' const='true' index='0'/>
<arg name='type' declared_type='char*' type='*' const='true' index='1'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithNonretainedObject:'>
<arg name='anObject' declared_type='id' type='@' index='0'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithPoint:'>
<arg name='point' declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}' index='0'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithPointer:'>
<arg name='pointer' declared_type='void*' type='^v' const='true' index='0'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithRange:'>
<arg name='range' declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}' index='0'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithRect:'>
<arg name='rect' declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' index='0'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithSize:'>
<arg name='size' declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}' index='0'/>
<retval declared_type='NSValue*' type='@'/>
</method>
</class>
<class name='NSValueTransformer'>
<method class_method='true' selector='allowsReverseTransformation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reverseTransformedValue:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setValueTransformer:forName:'>
<arg name='transformer' declared_type='NSValueTransformer*' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformedValue:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='transformedValueClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='valueTransformerForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSValueTransformer*' type='@'/>
</method>
<method class_method='true' selector='valueTransformerNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSWhoseSpecifier'>
<method selector='endSubelementIdentifier'>
<retval declared_type='NSWhoseSubelementIdentifier' type='I' type64='Q'/>
</method>
<method selector='endSubelementIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:test:'>
<arg name='classDesc' declared_type='NSScriptClassDescription*' type='@' index='0'/>
<arg name='container' declared_type='NSScriptObjectSpecifier*' type='@' index='1'/>
<arg name='property' declared_type='NSString*' type='@' index='2'/>
<arg name='test' declared_type='NSScriptWhoseTest*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setEndSubelementIdentifier:'>
<arg name='subelement' declared_type='NSWhoseSubelementIdentifier' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSubelementIndex:'>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSubelementIdentifier:'>
<arg name='subelement' declared_type='NSWhoseSubelementIdentifier' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSubelementIndex:'>
<arg name='index' declared_type='NSInteger' type='i' type64='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTest:'>
<arg name='test' declared_type='NSScriptWhoseTest*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startSubelementIdentifier'>
<retval declared_type='NSWhoseSubelementIdentifier' type='I' type64='Q'/>
</method>
<method selector='startSubelementIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='test'>
<retval declared_type='NSScriptWhoseTest*' type='@'/>
</method>
</class>
<class name='NSXMLDTD'>
<method selector='addChild:'>
<arg name='child' declared_type='NSXMLNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeDeclarationForName:elementName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='elementName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSXMLDTDNode*' type='@'/>
</method>
<method selector='elementDeclarationForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLDTDNode*' type='@'/>
</method>
<method selector='entityDeclarationForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLDTDNode*' type='@'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='mask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:options:error:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<arg name='mask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:atIndex:'>
<arg name='child' declared_type='NSXMLNode*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg name='children' declared_type='NSArray*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='notationDeclarationForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLDTDNode*' type='@'/>
</method>
<method class_method='true' selector='predefinedEntityDeclarationForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLDTDNode*' type='@'/>
</method>
<method selector='publicID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeChildAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='node' declared_type='NSXMLNode*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChildren:'>
<arg name='children' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublicID:'>
<arg name='publicID' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSystemID:'>
<arg name='systemID' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='systemID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSXMLDTDNode'>
<method selector='DTDKind'>
<retval declared_type='NSXMLDTDNodeKind' type='I' type64='Q'/>
</method>
<method selector='initWithXMLString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isExternal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notationName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='publicID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDTDKind:'>
<arg name='kind' declared_type='NSXMLDTDNodeKind' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotationName:'>
<arg name='notationName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublicID:'>
<arg name='publicID' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSystemID:'>
<arg name='systemID' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='systemID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSXMLDocument'>
<method selector='DTD'>
<retval declared_type='NSXMLDTD*' type='@'/>
</method>
<method selector='MIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='XMLData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='XMLDataWithOptions:'>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='addChild:'>
<arg name='child' declared_type='NSXMLNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='characterEncoding'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='documentContentKind'>
<retval declared_type='NSXMLDocumentContentKind' type='I' type64='Q'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<arg name='mask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:options:error:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<arg name='mask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRootElement:'>
<arg name='element' declared_type='NSXMLElement*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXMLString:options:error:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='mask' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:atIndex:'>
<arg name='child' declared_type='NSXMLNode*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg name='children' declared_type='NSArray*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isStandalone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectByApplyingXSLT:arguments:error:'>
<arg name='xslt' declared_type='NSData*' type='@' index='0'/>
<arg name='arguments' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectByApplyingXSLTAtURL:arguments:error:'>
<arg name='xsltURL' declared_type='NSURL*' type='@' index='0'/>
<arg name='argument' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectByApplyingXSLTString:arguments:error:'>
<arg name='xslt' declared_type='NSString*' type='@' index='0'/>
<arg name='arguments' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeChildAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='node' declared_type='NSXMLNode*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='replacementClassForClass:'>
<arg name='cls' declared_type='Class' type='#' index='0'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='rootElement'>
<retval declared_type='NSXMLElement*' type='@'/>
</method>
<method selector='setCharacterEncoding:'>
<arg name='encoding' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChildren:'>
<arg name='children' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDTD:'>
<arg name='documentTypeDeclaration' declared_type='NSXMLDTD*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentContentKind:'>
<arg name='kind' declared_type='NSXMLDocumentContentKind' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMIMEType:'>
<arg name='MIMEType' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRootElement:'>
<arg name='root' declared_type='NSXMLNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStandalone:'>
<arg name='standalone' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVersion:'>
<arg name='version' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validateAndReturnError:'>
<arg name='error' declared_type='NSError**' type='^@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='version'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSXMLElement'>
<method selector='addAttribute:'>
<arg name='attribute' declared_type='NSXMLNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:'>
<arg name='child' declared_type='NSXMLNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addNamespace:'>
<arg name='aNamespace' declared_type='NSXMLNode*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeForLocalName:URI:'>
<arg name='localName' declared_type='NSString*' type='@' index='0'/>
<arg name='URI' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='attributeForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='attributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='elementsForLocalName:URI:'>
<arg name='localName' declared_type='NSString*' type='@' index='0'/>
<arg name='URI' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='elementsForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithName:URI:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='URI' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithName:stringValue:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='string' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXMLString:error:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:atIndex:'>
<arg name='child' declared_type='NSXMLNode*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg name='children' declared_type='NSArray*' type='@' index='0'/>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='namespaceForPrefix:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='namespaces'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='normalizeAdjacentTextNodesPreservingCDATA:'>
<arg name='preserve' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAttributeForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeNamespaceForPrefix:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<arg name='node' declared_type='NSXMLNode*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resolveNamespaceForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='resolvePrefixForNamespaceURI:'>
<arg name='namespaceURI' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAttributes:'>
<arg name='attributes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributesAsDictionary:'>
<arg name='attributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChildren:'>
<arg name='children' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNamespaces:'>
<arg name='namespaces' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSXMLNode'>
<method class_method='true' selector='DTDNodeWithXMLString:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='URI'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='XMLString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='XMLStringWithOptions:'>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='XPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='attributeWithName:URI:stringValue:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='URI' declared_type='NSString*' type='@' index='1'/>
<arg name='stringValue' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='attributeWithName:stringValue:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='stringValue' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='canonicalXMLStringPreservingComments:'>
<arg name='comments' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='childAtIndex:'>
<arg name='index' declared_type='NSUInteger' type='I' type64='Q' index='0'/>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='childCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='children'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='commentWithStringValue:'>
<arg name='stringValue' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='detach'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='document'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='documentWithRootElement:'>
<arg name='element' declared_type='NSXMLElement*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementWithName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementWithName:URI:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='URI' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementWithName:children:attributes:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='children' declared_type='NSArray*' type='@' index='1'/>
<arg name='attributes' declared_type='NSArray*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementWithName:stringValue:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='string' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='index'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithKind:'>
<arg name='kind' declared_type='NSXMLNodeKind' type='I' type64='Q' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithKind:options:'>
<arg name='kind' declared_type='NSXMLNodeKind' type='I' type64='Q' index='0'/>
<arg name='options' declared_type='NSUInteger' type='I' type64='Q' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='kind'>
<retval declared_type='NSXMLNodeKind' type='I' type64='Q'/>
</method>
<method selector='level'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='localName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='localNameForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='namespaceWithName:stringValue:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='stringValue' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='nextNode'>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='nextSibling'>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='nodesForXPath:error:'>
<arg name='xpath' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectsForXQuery:constants:error:'>
<arg name='xquery' declared_type='NSString*' type='@' index='0'/>
<arg name='constants' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsForXQuery:error:'>
<arg name='xquery' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='parent'>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method class_method='true' selector='predefinedNamespaceForPrefix:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='prefix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='prefixForName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='previousNode'>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method selector='previousSibling'>
<retval declared_type='NSXMLNode*' type='@'/>
</method>
<method class_method='true' selector='processingInstructionWithName:stringValue:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='stringValue' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rootDocument'>
<retval declared_type='NSXMLDocument*' type='@'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectValue:'>
<arg name='value' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringValue:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringValue:resolvingEntities:'>
<arg name='string' declared_type='NSString*' type='@' index='0'/>
<arg name='resolve' declared_type='BOOL' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURI:'>
<arg name='URI' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='textWithStringValue:'>
<arg name='stringValue' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSXMLParser'>
<method selector='abortParsing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='parse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parserError'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='publicID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldProcessNamespaces:'>
<arg name='shouldProcessNamespaces' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldReportNamespacePrefixes:'>
<arg name='shouldReportNamespacePrefixes' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldResolveExternalEntities:'>
<arg name='shouldResolveExternalEntities' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldProcessNamespaces'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldReportNamespacePrefixes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldResolveExternalEntities'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='systemID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<informal_protocol name='NSArchiverCallback'>
<method type='#8@0:4' type64='#16@0:8' selector='classForArchiver'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForArchiver:'>
<arg name='archiver' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSClassDescriptionPrimitives'>
<method type='@8@0:4' type64='@16@0:8' selector='attributeKeys'/>
<method type='@8@0:4' type64='@16@0:8' selector='classDescription'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='inverseForRelationshipKey:'>
<arg name='relationshipKey' index='0'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='toManyRelationshipKeys'/>
<method type='@8@0:4' type64='@16@0:8' selector='toOneRelationshipKeys'/>
</informal_protocol>
<informal_protocol name='NSCoderMethods'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='awakeAfterUsingCoder:'>
<arg name='aDecoder' index='0'/>
</method>
<method type='#8@0:4' type64='#16@0:8' selector='classForCoder'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForCoder:'>
<arg name='aCoder' index='0'/>
</method>
<method class_method='true' type='v12@0:4i8' type64='v24@0:8q16' selector='setVersion:'>
<arg name='aVersion' index='0'/>
</method>
<method class_method='true' type='i8@0:4' type64='q16@0:8' selector='version'/>
</informal_protocol>
<informal_protocol name='NSComparisonMethods'>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='doesContain:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isCaseInsensitiveLike:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isEqualTo:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isGreaterThan:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isGreaterThanOrEqualTo:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isLessThan:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isLessThanOrEqualTo:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isLike:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isNotEqualTo:'>
<arg name='object' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSConnectionDelegateMethods'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='authenticateComponents:withData:'>
<arg name='components' index='0'/>
<arg name='signature' index='1'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='authenticationDataForComponents:'>
<arg name='components' index='0'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='connection:shouldMakeNewConnection:'>
<arg name='ancestor' index='0'/>
<arg name='conn' index='1'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='createConversationForConnection:'>
<arg name='conn' index='0'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='makeNewConnection:sender:'>
<arg name='conn' index='0'/>
<arg name='ancestor' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSCopyLinkMoveHandler'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldProceedAfterError:'>
<arg name='fm' index='0'/>
<arg name='errorInfo' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='fileManager:willProcessPath:'>
<arg name='fm' index='0'/>
<arg name='path' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSDelayedPerforming'>
<method class_method='true' type='v12@0:4@8' type64='v24@0:8@16' selector='cancelPreviousPerformRequestsWithTarget:'>
<arg name='aTarget' index='0'/>
</method>
<method class_method='true' type='v20@0:4@8:12@16' type64='v40@0:8@16:24@32' selector='cancelPreviousPerformRequestsWithTarget:selector:object:'>
<arg name='aTarget' index='0'/>
<arg name='aSelector' index='1'/>
<arg name='anArgument' index='2'/>
</method>
<method type='v24@0:4:8@12d16' type64='v40@0:8:16@24d32' selector='performSelector:withObject:afterDelay:'>
<arg name='aSelector' index='0'/>
<arg name='anArgument' index='1'/>
<arg name='delay' index='2'/>
</method>
<method type='v28@0:4:8@12d16@24' type64='v48@0:8:16@24d32@40' selector='performSelector:withObject:afterDelay:inModes:'>
<arg name='aSelector' index='0'/>
<arg name='anArgument' index='1'/>
<arg name='delay' index='2'/>
<arg name='modes' index='3'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueCoding'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='handleQueryWithUnboundKey:'>
<arg name='key' index='0'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='handleTakeValue:forUnboundKey:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='storedValueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeStoredValue:forKey:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeValue:forKey:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeValue:forKeyPath:'>
<arg name='value' index='0'/>
<arg name='keyPath' index='1'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='takeValuesFromDictionary:'>
<arg name='properties' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unableToSetNilForKey:'>
<arg name='key' index='0'/>
</method>
<method class_method='true' type='B8@0:4' type64='B16@0:8' selector='useStoredAccessor'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valuesForKeys:'>
<arg name='keys' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueObservingCustomization'>
<method class_method='true' type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setKeys:triggerChangeNotificationsForDependentKey:'>
<arg name='keys' index='0'/>
<arg name='dependentKey' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedMethods'>
<method class_method='true' type='v12@0:4#8' type64='v24@0:8#16' selector='poseAsClass:'>
<arg name='aClass' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSDistantObjectRequestMethods'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='connection:handleRequest:'>
<arg name='connection' index='0'/>
<arg name='doreq' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSDistributedObjects'>
<method type='#8@0:4' type64='#16@0:8' selector='classForPortCoder'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForPortCoder:'>
<arg name='coder' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSErrorRecoveryAttempting'>
<method type='B16@0:4@8I12' type64='B32@0:8@16Q24' selector='attemptRecoveryFromError:optionIndex:'>
<arg name='error' index='0'/>
<arg name='recoveryOptionIndex' index='1'/>
</method>
<method type='v28@0:4@8I12@16:20^v24' type64='v56@0:8@16Q24@32:40^v48' selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
<arg name='error' index='0'/>
<arg name='recoveryOptionIndex' index='1'/>
<arg name='delegate' index='2'/>
<arg name='didRecoverSelector' index='3'/>
<arg name='contextInfo' index='4'/>
</method>
</informal_protocol>
<informal_protocol name='NSFileManagerFileOperationAdditions'>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldCopyItemAtPath:toPath:'>
<arg name='fileManager' index='0'/>
<arg name='srcPath' index='1'/>
<arg name='dstPath' index='2'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldLinkItemAtPath:toPath:'>
<arg name='fileManager' index='0'/>
<arg name='srcPath' index='1'/>
<arg name='dstPath' index='2'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldMoveItemAtPath:toPath:'>
<arg name='fileManager' index='0'/>
<arg name='srcPath' index='1'/>
<arg name='dstPath' index='2'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<arg name='fileManager' index='0'/>
<arg name='error' index='1'/>
<arg name='srcPath' index='2'/>
<arg name='dstPath' index='3'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<arg name='fileManager' index='0'/>
<arg name='error' index='1'/>
<arg name='srcPath' index='2'/>
<arg name='dstPath' index='3'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<arg name='fileManager' index='0'/>
<arg name='error' index='1'/>
<arg name='srcPath' index='2'/>
<arg name='dstPath' index='3'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<arg name='fileManager' index='0'/>
<arg name='error' index='1'/>
<arg name='path' index='2'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldRemoveItemAtPath:'>
<arg name='fileManager' index='0'/>
<arg name='path' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueCoding'>
<method class_method='true' type='B8@0:4' type64='B16@0:8' selector='accessInstanceVariablesDirectly'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='dictionaryWithValuesForKeys:'>
<arg name='keys' index='0'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableArrayValueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableArrayValueForKeyPath:'>
<arg name='keyPath' index='0'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableSetValueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableSetValueForKeyPath:'>
<arg name='keyPath' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setNilValueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forKey:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forKeyPath:'>
<arg name='value' index='0'/>
<arg name='keyPath' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forUndefinedKey:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setValuesForKeysWithDictionary:'>
<arg name='keyedValues' index='0'/>
</method>
<method type='B20@0:4^@8@12^@16' type64='B40@0:8^@16@24^@32' selector='validateValue:forKey:error:'>
<arg name='ioValue' index='0'/>
<arg name='inKey' index='1'/>
<arg name='outError' index='2'/>
</method>
<method type='B20@0:4^@8@12^@16' type64='B40@0:8^@16@24^@32' selector='validateValue:forKeyPath:error:'>
<arg name='ioValue' index='0'/>
<arg name='inKeyPath' index='1'/>
<arg name='outError' index='2'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForKeyPath:'>
<arg name='keyPath' index='0'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForUndefinedKey:'>
<arg name='key' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverNotification'>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='didChange:valuesAtIndexes:forKey:'>
<arg name='changeKind' index='0'/>
<arg name='indexes' index='1'/>
<arg name='key' index='2'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='didChangeValueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='didChangeValueForKey:withSetMutation:usingObjects:'>
<arg name='key' index='0'/>
<arg name='mutationKind' index='1'/>
<arg name='objects' index='2'/>
</method>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='willChange:valuesAtIndexes:forKey:'>
<arg name='changeKind' index='0'/>
<arg name='indexes' index='1'/>
<arg name='key' index='2'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='willChangeValueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='willChangeValueForKey:withSetMutation:usingObjects:'>
<arg name='key' index='0'/>
<arg name='mutationKind' index='1'/>
<arg name='objects' index='2'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverRegistration'>
<method type='v24@0:4@8@12I16^v20' type64='v48@0:8@16@24Q32^v40' selector='addObserver:forKeyPath:options:context:'>
<arg name='observer' index='0'/>
<arg name='keyPath' index='1'/>
<arg name='options' index='2'/>
<arg name='context' index='3'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='removeObserver:forKeyPath:'>
<arg name='observer' index='0'/>
<arg name='keyPath' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserving'>
<method type='v24@0:4@8@12@16^v20' type64='v48@0:8@16@24@32^v40' selector='observeValueForKeyPath:ofObject:change:context:'>
<arg name='keyPath' index='0'/>
<arg name='object' index='1'/>
<arg name='change' index='2'/>
<arg name='context' index='3'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObservingCustomization'>
<method class_method='true' type='B12@0:4@8' type64='B24@0:8@16' selector='automaticallyNotifiesObserversForKey:'>
<arg name='key' index='0'/>
</method>
<method class_method='true' type='@12@0:4@8' type64='@24@0:8@16' selector='keyPathsForValuesAffectingValueForKey:'>
<arg name='key' index='0'/>
</method>
<method type='^v8@0:4' type64='^v16@0:8' selector='observationInfo'/>
<method type='v12@0:4^v8' type64='v24@0:8^v16' selector='setObservationInfo:'>
<arg name='observationInfo' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='archiver:didEncodeObject:'>
<arg name='archiver' index='0'/>
<arg name='object' index='1'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='archiver:willEncodeObject:'>
<arg name='archiver' index='0'/>
<arg name='object' index='1'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='archiver:willReplaceObject:withObject:'>
<arg name='archiver' index='0'/>
<arg name='object' index='1'/>
<arg name='newObject' index='2'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='archiverDidFinish:'>
<arg name='archiver' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='archiverWillFinish:'>
<arg name='archiver' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverObjectSubstitution'>
<method class_method='true' type='@8@0:4' type64='@16@0:8' selector='classFallbacksForKeyedArchiver'/>
<method type='#8@0:4' type64='#16@0:8' selector='classForKeyedArchiver'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForKeyedArchiver:'>
<arg name='archiver' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverDelegate'>
<method type='#20@0:4@8@12@16' type64='#40@0:8@16@24@32' selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'>
<arg name='unarchiver' index='0'/>
<arg name='name' index='1'/>
<arg name='classNames' index='2'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='unarchiver:didDecodeObject:'>
<arg name='unarchiver' index='0'/>
<arg name='object' index='1'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='unarchiver:willReplaceObject:withObject:'>
<arg name='unarchiver' index='0'/>
<arg name='object' index='1'/>
<arg name='newObject' index='2'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unarchiverDidFinish:'>
<arg name='unarchiver' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unarchiverWillFinish:'>
<arg name='unarchiver' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverObjectSubstitution'>
<method class_method='true' type='#8@0:4' type64='#16@0:8' selector='classForKeyedUnarchiver'/>
</informal_protocol>
<informal_protocol name='NSMachPortDelegateMethods'>
<method type='v12@0:4^v8' type64='v24@0:8^v16' selector='handleMachMessage:'>
<arg name='msg' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSMetadataQueryDelegate'>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='metadataQuery:replacementObjectForResultObject:'>
<arg name='query' index='0'/>
<arg name='result' index='1'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='metadataQuery:replacementValueForAttribute:value:'>
<arg name='query' index='0'/>
<arg name='attrName' index='1'/>
<arg name='attrValue' index='2'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceBrowserDelegateMethods'>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg name='aNetServiceBrowser' index='0'/>
<arg name='domainString' index='1'/>
<arg name='moreComing' index='2'/>
</method>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindService:moreComing:'>
<arg name='aNetServiceBrowser' index='0'/>
<arg name='aNetService' index='1'/>
<arg name='moreComing' index='2'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netServiceBrowser:didNotSearch:'>
<arg name='aNetServiceBrowser' index='0'/>
<arg name='errorDict' index='1'/>
</method>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg name='aNetServiceBrowser' index='0'/>
<arg name='domainString' index='1'/>
<arg name='moreComing' index='2'/>
</method>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg name='aNetServiceBrowser' index='0'/>
<arg name='aNetService' index='1'/>
<arg name='moreComing' index='2'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceBrowserDidStopSearch:'>
<arg name='aNetServiceBrowser' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceBrowserWillSearch:'>
<arg name='aNetServiceBrowser' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceDelegateMethods'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didNotPublish:'>
<arg name='sender' index='0'/>
<arg name='errorDict' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didNotResolve:'>
<arg name='sender' index='0'/>
<arg name='errorDict' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didUpdateTXTRecordData:'>
<arg name='sender' index='0'/>
<arg name='data' index='1'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidPublish:'>
<arg name='sender' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidResolveAddress:'>
<arg name='sender' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidStop:'>
<arg name='sender' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceWillPublish:'>
<arg name='sender' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceWillResolve:'>
<arg name='sender' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSPortDelegateMethods'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='handlePortMessage:'>
<arg name='message' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptClassDescription'>
<method type='L8@0:4' type64='I16@0:8' selector='classCode'/>
<method type='@8@0:4' type64='@16@0:8' selector='className'/>
</informal_protocol>
<informal_protocol name='NSScriptKeyValueCoding'>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='coerceValue:forKey:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='insertValue:atIndex:inPropertyWithKey:'>
<arg name='value' index='0'/>
<arg name='index' index='1'/>
<arg name='key' index='2'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='insertValue:inPropertyWithKey:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='v16@0:4I8@12' type64='v32@0:8Q16@24' selector='removeValueAtIndex:fromPropertyWithKey:'>
<arg name='index' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='replaceValueAtIndex:inPropertyWithKey:withValue:'>
<arg name='index' index='0'/>
<arg name='key' index='1'/>
<arg name='value' index='2'/>
</method>
<method type='@16@0:4I8@12' type64='@32@0:8Q16@24' selector='valueAtIndex:inPropertyWithKey:'>
<arg name='index' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='valueWithName:inPropertyWithKey:'>
<arg name='name' index='0'/>
<arg name='key' index='1'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='valueWithUniqueID:inPropertyWithKey:'>
<arg name='uniqueID' index='0'/>
<arg name='key' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptObjectSpecifiers'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='indicesOfObjectsByEvaluatingObjectSpecifier:'>
<arg name='specifier' index='0'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='objectSpecifier'/>
</informal_protocol>
<informal_protocol name='NSScripting'>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='copyScriptingValue:forKey:withProperties:'>
<arg name='value' index='0'/>
<arg name='key' index='1'/>
<arg name='properties' index='2'/>
</method>
<method type='@24@0:4#8@12@16@20' type64='@48@0:8#16@24@32@40' selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:'>
<arg name='objectClass' index='0'/>
<arg name='key' index='1'/>
<arg name='contentsValue' index='2'/>
<arg name='properties' index='3'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='scriptingProperties'/>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='scriptingValueForSpecifier:'>
<arg name='objectSpecifier' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setScriptingProperties:'>
<arg name='properties' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptingComparisonMethods'>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingBeginsWith:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingContains:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingEndsWith:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsEqualTo:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsGreaterThan:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsGreaterThanOrEqualTo:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsLessThan:'>
<arg name='object' index='0'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsLessThanOrEqualTo:'>
<arg name='object' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpellServerDelegate'>
<method type='{_NSRange=II}24@0:4@8@12@16^@20' type64='{_NSRange=QQ}48@0:8@16@24@32^@40' selector='spellServer:checkGrammarInString:language:details:'>
<arg name='sender' index='0'/>
<arg name='stringToCheck' index='1'/>
<arg name='language' index='2'/>
<arg name='details' index='3'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='spellServer:didForgetWord:inLanguage:'>
<arg name='sender' index='0'/>
<arg name='word' index='1'/>
<arg name='language' index='2'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='spellServer:didLearnWord:inLanguage:'>
<arg name='sender' index='0'/>
<arg name='word' index='1'/>
<arg name='language' index='2'/>
</method>
<method type='{_NSRange=II}28@0:4@8@12@16^i20B24' type64='{_NSRange=QQ}52@0:8@16@24@32^q40B48' selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:'>
<arg name='sender' index='0'/>
<arg name='stringToCheck' index='1'/>
<arg name='language' index='2'/>
<arg name='wordCount' index='3'/>
<arg name='countOnly' index='4'/>
</method>
<method type='@28@0:4@8{_NSRange=II}12@20@24' type64='@56@0:8@16{_NSRange=QQ}24@40@48' selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:'>
<arg name='sender' index='0'/>
<arg name='range' index='1'/>
<arg name='string' index='2'/>
<arg name='language' index='3'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='spellServer:suggestGuessesForWord:inLanguage:'>
<arg name='sender' index='0'/>
<arg name='word' index='1'/>
<arg name='language' index='2'/>
</method>
</informal_protocol>
<informal_protocol name='NSStreamDelegateEventExtensions'>
<method type='v16@0:4@8I12' type64='v32@0:8@16Q24' selector='stream:handleEvent:'>
<arg name='aStream' index='0'/>
<arg name='eventCode' index='1'/>
</method>
</informal_protocol>
<informal_protocol name='NSThreadPerformAdditions'>
<method type='v24@0:4:8@12@16B20' type64='v44@0:8:16@24@32B40' selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg name='aSelector' index='0'/>
<arg name='thr' index='1'/>
<arg name='arg' index='2'/>
<arg name='wait' index='3'/>
</method>
<method type='v28@0:4:8@12@16B20@24' type64='v52@0:8:16@24@32B40@44' selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg name='aSelector' index='0'/>
<arg name='thr' index='1'/>
<arg name='arg' index='2'/>
<arg name='wait' index='3'/>
<arg name='array' index='4'/>
</method>
<method type='v16@0:4:8@12' type64='v32@0:8:16@24' selector='performSelectorInBackground:withObject:'>
<arg name='aSelector' index='0'/>
<arg name='arg' index='1'/>
</method>
<method type='v20@0:4:8@12B16' type64='v36@0:8:16@24B32' selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg name='aSelector' index='0'/>
<arg name='arg' index='1'/>
<arg name='wait' index='2'/>
</method>
<method type='v24@0:4:8@12B16@20' type64='v44@0:8:16@24B32@36' selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg name='aSelector' index='0'/>
<arg name='arg' index='1'/>
<arg name='wait' index='2'/>
<arg name='array' index='3'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLClient'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URL:resourceDataDidBecomeAvailable:'>
<arg name='sender' index='0'/>
<arg name='newBytes' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URL:resourceDidFailLoadingWithReason:'>
<arg name='sender' index='0'/>
<arg name='reason' index='1'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLResourceDidCancelLoading:'>
<arg name='sender' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLResourceDidFinishLoading:'>
<arg name='sender' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didCancelAuthenticationChallenge:'>
<arg name='connection' index='0'/>
<arg name='challenge' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didFailWithError:'>
<arg name='connection' index='0'/>
<arg name='error' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveAuthenticationChallenge:'>
<arg name='connection' index='0'/>
<arg name='challenge' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveData:'>
<arg name='connection' index='0'/>
<arg name='data' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveResponse:'>
<arg name='connection' index='0'/>
<arg name='response' index='1'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='connection:willCacheResponse:'>
<arg name='connection' index='0'/>
<arg name='cachedResponse' index='1'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='connection:willSendRequest:redirectResponse:'>
<arg name='connection' index='0'/>
<arg name='request' index='1'/>
<arg name='response' index='2'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='connectionDidFinishLoading:'>
<arg name='connection' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLDownloadDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:decideDestinationWithSuggestedFilename:'>
<arg name='download' index='0'/>
<arg name='filename' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didCancelAuthenticationChallenge:'>
<arg name='download' index='0'/>
<arg name='challenge' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didCreateDestination:'>
<arg name='download' index='0'/>
<arg name='path' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didFailWithError:'>
<arg name='download' index='0'/>
<arg name='error' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didReceiveAuthenticationChallenge:'>
<arg name='download' index='0'/>
<arg name='challenge' index='1'/>
</method>
<method type='v16@0:4@8I12' type64='v32@0:8@16Q24' selector='download:didReceiveDataOfLength:'>
<arg name='download' index='0'/>
<arg name='length' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didReceiveResponse:'>
<arg name='download' index='0'/>
<arg name='response' index='1'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='download:shouldDecodeSourceDataOfMIMEType:'>
<arg name='download' index='0'/>
<arg name='encodingType' index='1'/>
</method>
<method type='v24@0:4@8@12q16' type64='v40@0:8@16@24q32' selector='download:willResumeWithResponse:fromByte:'>
<arg name='download' index='0'/>
<arg name='response' index='1'/>
<arg name='startingByte' index='2'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='download:willSendRequest:redirectResponse:'>
<arg name='download' index='0'/>
<arg name='request' index='1'/>
<arg name='redirectResponse' index='2'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='downloadDidBegin:'>
<arg name='download' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='downloadDidFinish:'>
<arg name='download' index='0'/>
</method>
</informal_protocol>
<informal_protocol name='NSXMLParserDelegateEventAdditions'>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:didEndElement:namespaceURI:qualifiedName:'>
<arg name='parser' index='0'/>
<arg name='elementName' index='1'/>
<arg name='namespaceURI' index='2'/>
<arg name='qName' index='3'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:didEndMappingPrefix:'>
<arg name='parser' index='0'/>
<arg name='prefix' index='1'/>
</method>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'>
<arg name='parser' index='0'/>
<arg name='elementName' index='1'/>
<arg name='namespaceURI' index='2'/>
<arg name='qName' index='3'/>
<arg name='attributeDict' index='4'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:didStartMappingPrefix:toURI:'>
<arg name='parser' index='0'/>
<arg name='prefix' index='1'/>
<arg name='namespaceURI' index='2'/>
</method>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'>
<arg name='parser' index='0'/>
<arg name='attributeName' index='1'/>
<arg name='elementName' index='2'/>
<arg name='type' index='3'/>
<arg name='defaultValue' index='4'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundCDATA:'>
<arg name='parser' index='0'/>
<arg name='CDATABlock' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundCharacters:'>
<arg name='parser' index='0'/>
<arg name='string' index='1'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundComment:'>
<arg name='parser' index='0'/>
<arg name='comment' index='1'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundElementDeclarationWithName:model:'>
<arg name='parser' index='0'/>
<arg name='elementName' index='1'/>
<arg name='model' index='2'/>
</method>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'>
<arg name='parser' index='0'/>
<arg name='name' index='1'/>
<arg name='publicID' index='2'/>
<arg name='systemID' index='3'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundIgnorableWhitespace:'>
<arg name='parser' index='0'/>
<arg name='whitespaceString' index='1'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundInternalEntityDeclarationWithName:value:'>
<arg name='parser' index='0'/>
<arg name='name' index='1'/>
<arg name='value' index='2'/>
</method>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:foundNotationDeclarationWithName:publicID:systemID:'>
<arg name='parser' index='0'/>
<arg name='name' index='1'/>
<arg name='publicID' index='2'/>
<arg name='systemID' index='3'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundProcessingInstructionWithTarget:data:'>
<arg name='parser' index='0'/>
<arg name='target' index='1'/>
<arg name='data' index='2'/>
</method>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'>
<arg name='parser' index='0'/>
<arg name='name' index='1'/>
<arg name='publicID' index='2'/>
<arg name='systemID' index='3'/>
<arg name='notationName' index='4'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:parseErrorOccurred:'>
<arg name='parser' index='0'/>
<arg name='parseError' index='1'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='parser:resolveExternalEntityName:systemID:'>
<arg name='parser' index='0'/>
<arg name='name' index='1'/>
<arg name='systemID' index='2'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:validationErrorOccurred:'>
<arg name='parser' index='0'/>
<arg name='validationError' index='1'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='parserDidEndDocument:'>
<arg name='parser' index='0'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='parserDidStartDocument:'>
<arg name='parser' index='0'/>
</method>
</informal_protocol>
</signatures>